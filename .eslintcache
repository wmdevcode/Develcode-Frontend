[{"C:\\temp\\react-rede\\src\\index.js":"1","C:\\temp\\react-rede\\src\\App.js":"2","C:\\temp\\react-rede\\src\\Main\\ProvedorAutenticacao.js":"3","C:\\temp\\react-rede\\src\\Components\\MenuDeNavegacao.js":"4","C:\\temp\\react-rede\\src\\Main\\Rotas.js":"5","C:\\temp\\react-rede\\src\\Service\\AuthService.js":"6","C:\\temp\\react-rede\\src\\Components\\Pesquisa.js":"7","C:\\temp\\react-rede\\src\\Components\\NavbarItem.js":"8","C:\\temp\\react-rede\\src\\Views\\Login.js":"9","C:\\temp\\react-rede\\src\\Views\\EditarFuncoes.js":"10","C:\\temp\\react-rede\\src\\Views\\CriarPendencia.js":"11","C:\\temp\\react-rede\\src\\Views\\EditarSkills.js":"12","C:\\temp\\react-rede\\src\\Views\\Cadastro.js":"13","C:\\temp\\react-rede\\src\\Views\\AtualizarFuncao.js":"14","C:\\temp\\react-rede\\src\\Views\\AtualizarSkill.js":"15","C:\\temp\\react-rede\\src\\Views\\DeletarFuncionario.js":"16","C:\\temp\\react-rede\\src\\Views\\PromoverFuncionario.js":"17","C:\\temp\\react-rede\\src\\Views\\HomeUsuario.js":"18","C:\\temp\\react-rede\\src\\Views\\EditarFotoComite.js":"19","C:\\temp\\react-rede\\src\\Views\\EditarDadosPessoais.js":"20","C:\\temp\\react-rede\\src\\Views\\PerfilColaborador.js":"21","C:\\temp\\react-rede\\src\\Views\\CriarComite.js":"22","C:\\temp\\react-rede\\src\\Views\\EditarFoto.js":"23","C:\\temp\\react-rede\\src\\Views\\ListaVoluntarios.js":"24","C:\\temp\\react-rede\\src\\Views\\AprovacaoVoluntarios.js":"25","C:\\temp\\react-rede\\src\\Views\\ListaComites.js":"26","C:\\temp\\react-rede\\src\\Views\\PerfilCoordenador.js":"27","C:\\temp\\react-rede\\src\\Views\\PerfilComite.js":"28","C:\\temp\\react-rede\\src\\Views\\ListaPendencia.js":"29","C:\\temp\\react-rede\\src\\Components\\Pagination.js":"30","C:\\temp\\react-rede\\src\\Components\\FotoUploader.js":"31","C:\\temp\\react-rede\\src\\Components\\FotoUploaderComite.js":"32","C:\\temp\\react-rede\\src\\firebase\\Index.js":"33","C:\\temp\\react-rede\\src\\Views\\ListaReprovados.js":"34","C:\\temp\\react-rede\\src\\Views\\PerfilFuncionarios.js":"35","C:\\temp\\react-rede\\src\\Views\\EditarDadosComite.js":"36"},{"size":234,"mtime":1608681545255,"results":"37","hashOfConfig":"38"},{"size":498,"mtime":1608681545205,"results":"39","hashOfConfig":"38"},{"size":2406,"mtime":1608681545214,"results":"40","hashOfConfig":"38"},{"size":12063,"mtime":1608685710453,"results":"41","hashOfConfig":"38"},{"size":3939,"mtime":1608681554640,"results":"42","hashOfConfig":"38"},{"size":2306,"mtime":1608687265973,"results":"43","hashOfConfig":"38"},{"size":0,"mtime":1608681545212,"results":"44","hashOfConfig":"38"},{"size":577,"mtime":1608681545210,"results":"45","hashOfConfig":"38"},{"size":7996,"mtime":1608682793289,"results":"46","hashOfConfig":"38"},{"size":9597,"mtime":1608681545234,"results":"47","hashOfConfig":"38"},{"size":6098,"mtime":1608682995746,"results":"48","hashOfConfig":"38"},{"size":9755,"mtime":1608681545235,"results":"49","hashOfConfig":"38"},{"size":51417,"mtime":1608681545226,"results":"50","hashOfConfig":"38"},{"size":6754,"mtime":1608681545223,"results":"51","hashOfConfig":"38"},{"size":9356,"mtime":1608682961824,"results":"52","hashOfConfig":"38"},{"size":4952,"mtime":1608681545229,"results":"53","hashOfConfig":"38"},{"size":6621,"mtime":1608683274379,"results":"54","hashOfConfig":"38"},{"size":3300,"mtime":1608681545235,"results":"55","hashOfConfig":"38"},{"size":1004,"mtime":1608681545232,"results":"56","hashOfConfig":"38"},{"size":22540,"mtime":1608683071455,"results":"57","hashOfConfig":"38"},{"size":15340,"mtime":1608683577050,"results":"58","hashOfConfig":"38"},{"size":10703,"mtime":1608683304183,"results":"59","hashOfConfig":"38"},{"size":964,"mtime":1608681554649,"results":"60","hashOfConfig":"38"},{"size":22364,"mtime":1608684549736,"results":"61","hashOfConfig":"38"},{"size":8448,"mtime":1608682883744,"results":"62","hashOfConfig":"38"},{"size":9302,"mtime":1608681554650,"results":"63","hashOfConfig":"38"},{"size":6936,"mtime":1608681337349,"results":"64","hashOfConfig":"38"},{"size":15381,"mtime":1608681554657,"results":"65","hashOfConfig":"38"},{"size":5197,"mtime":1608683198004,"results":"66","hashOfConfig":"38"},{"size":1806,"mtime":1608681545212,"results":"67","hashOfConfig":"38"},{"size":11412,"mtime":1608683496174,"results":"68","hashOfConfig":"38"},{"size":11436,"mtime":1608683400886,"results":"69","hashOfConfig":"38"},{"size":702,"mtime":1608681545254,"results":"70","hashOfConfig":"38"},{"size":10758,"mtime":1608681554652,"results":"71","hashOfConfig":"38"},{"size":14703,"mtime":1608683266933,"results":"72","hashOfConfig":"38"},{"size":15979,"mtime":1608681554646,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"ajxn47",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"76"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"76"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"76"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"76"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"76"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"76"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"76"},"C:\\temp\\react-rede\\src\\index.js",[],["171","172"],"C:\\temp\\react-rede\\src\\App.js",[],"C:\\temp\\react-rede\\src\\Main\\ProvedorAutenticacao.js",["173","174","175"],"import React from 'react';\r\n\r\nimport AuthService from '../Service/AuthService';\r\nexport const AuthContext = React.createContext({});\r\n\r\nexport const AuthConsumer = AuthContext.Consumer;\r\n\r\nconst AuthProvider = AuthContext.Provider;\r\n\r\n\r\nclass ProvedorAutenticacao extends React.Component{\r\n\r\n    \r\n    state = {\r\n         isAuthenticated: AuthService.isUsuarioAutenticado(),\r\n         user :AuthService.userId(),\r\n         \r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.iniciarSessao()\r\n\r\n    } \r\n\r\n     iniciarSessao = () => {\r\n        this.setState({ isAuthenticated : AuthService.isUsuarioAutenticado()})\r\n        this.setState({ autorizado : AuthService.isUsuarioAutorizado()})\r\n\r\n        this.setState({ user: AuthService.userId()}, () =>{\r\n            console.log(\"tesmos:\", this.state.user.id)\r\n        })\r\n     }\r\n\r\n     encerrarSessao = () => {\r\n         \r\n        sessionStorage.clear();\r\n        this.setState({ isAuthenticated : AuthService.isUsuarioAutenticado()})\r\n    \r\n     }\r\n\r\n     pegarAutorizacoes = (id) => {\r\n        console.log(\"pegando a autorização\", id)\r\n\r\n        if (id == 2){\r\n        this.setState({ autorizado : true})\r\n        } else if (id == 1) {\r\n\r\n        this.setState({ autorizado : false})\r\n        } else if (id == 0 ){\r\n\r\n        this.setState({ autorizado : false})\r\n\r\n        }\r\n\r\n     }\r\n\r\n     defineUser = (e) => {\r\n      this.setState({\r\n          user: e\r\n      })\r\n\r\n     }\r\n\r\n \r\n  \r\n\r\n\r\n\r\n    render(){\r\n        const contexto = {\r\n            iniciarSessao : this.iniciarSessao,\r\n            encerrarSessao : this.encerrarSessao,\r\n            pegarAutorizacoes: this.pegarAutorizacoes,\r\n            defineUser: this.defineUser,\r\n            timeLineMotoristaHandler: this.timeLineMotoristaHandler,\r\n            timeLineTransportadoraHandler:this.timeLineTransportadoraHandler,\r\n            isAuthenticated : this.state.isAuthenticated,\r\n            autorizado : this.state.autorizado,\r\n            user : this.state.user,\r\n            timeLineCadastroMotorista: this.state.timeLineCadastroMotorista,\r\n            timeLineCadastroTransportadora: this.state.timeLineCadastroTransportadora,\r\n            transformY: this.state.transformY\r\n        }\r\n        return (\r\n            <AuthProvider value = {contexto}>\r\n                {this.props.children}\r\n            </AuthProvider>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ProvedorAutenticacao;","C:\\temp\\react-rede\\src\\Components\\MenuDeNavegacao.js",["176","177","178","179","180","181","182"],"C:\\temp\\react-rede\\src\\Main\\Rotas.js",[],"C:\\temp\\react-rede\\src\\Service\\AuthService.js",["183","184","185","186"],"C:\\temp\\react-rede\\src\\Components\\Pesquisa.js",[],"C:\\temp\\react-rede\\src\\Components\\NavbarItem.js",["187"],"import React from 'react';\r\n\r\nfunction NavbarItem({render, role, ...props}){\r\n  var atual = true;\r\n\r\n  if (render && role) {\r\n\r\n    if (props.href == window.location.href.substring(window.location.href.lastIndexOf(\"#\"))  ){\r\n      atual = true;\r\n    } else {\r\n      atual = false;\r\n    }\r\n        return (\r\n\r\n        <li className={atual ?  'nav-item active': `nav-item`}>\r\n          <a  onClick = {props.onClick} className=\"nav-link\" href={props.href}  >{props.label}</a>\r\n        </li>\r\n        )\r\n        \r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default NavbarItem;","C:\\temp\\react-rede\\src\\Views\\Login.js",["188","189","190"],"import React from 'react';\r\nimport { whithRouter } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../Main/ProvedorAutenticacao';\r\nimport { Redirect } from 'react-router';\r\n\r\nimport NumberFormat from 'react-number-format';\r\n\r\nclass Login extends React.Component {\r\n\r\n\r\n    state = { cpf: '', senha: '', error: '', redirect: false, mensagemErro: null, erroCpf: null, carregando: false };\r\n    state = { user: '' }\r\n  \r\n    verificacaoCampos = () => {\r\n  \r\n      console.log(\"cpf\", this.state.cpf)\r\n      if (this.state.cpf == null || this.state.cpf.length == 0) {\r\n        this.setState({\r\n          erroCpf: \"O cpf deve ser informado!\"\r\n          , carregando: false \r\n        })\r\n      } else if (this.state.cpf.includes(' ')) {\r\n        console.log('contai')\r\n        this.setState({\r\n          erroCpf: \"O campo deve ser preenchido com o formato do cpf!\"\r\n          , carregando: false \r\n  \r\n        })\r\n      }\r\n  \r\n    }\r\n  \r\n  \r\n    consultarAutorizacoes = (id) => {\r\n\r\n      axios.get(`https://java-rede-governanca-brasil.herokuapp.com/funcionarios/${id.replace(\".\",\"\").replace(\".\",\"\").replace(\".\",\"\").replace(\"-\",\"\")}`)\r\n      .then(response => {\r\n        this.setState({\r\n          funcionario: response.data\r\n        }, ()=>{\r\n          console.log(\"não passa por aqui?\")\r\n\r\n\r\n         \r\n\r\n          { this.context.pegarAutorizacoes(this.state.funcionario.aprovado) }\r\n        })\r\n\r\n\r\n      }).catch(erro => {\r\n        sessionStorage.clear()\r\n\r\n      })\r\n    \r\n  \r\n    //   fetch(`https://java-rede-governanca-brasil.herokuapp.com/login/${id}`)\r\n    //     .then(res => res.json())\r\n    //     .then(\r\n    //       (result) => {\r\n    //         console.log(\"resultado\", result)\r\n    //         { this.context.defineUser(result.id) }\r\n    //         console.log(\"result aprovado\", result.aprovado)\r\n    //         { this.context.pegarAutorizacoes(result.aprovado) }\r\n    //         sessionStorage.setItem('app-token-admin', result.aprovado)\r\n  \r\n    //         // this.setState({\r\n    //         //   user: result.id\r\n  \r\n    //         // });\r\n    //       }\r\n  \r\n    //     )\r\n    }\r\n  \r\n  \r\n  \r\n    loginClicked = () => {\r\n     \r\n      \r\n  \r\n      this.setState({ mensagemErro: null, carregando: true })\r\n  \r\n  \r\n  \r\n        axios.post('https://java-rede-governanca-brasil.herokuapp.com/authenticate', {\r\n          cpf: this.state.cpf.replace(\".\",\"\").replace(\".\",\"\").replace(\".\",\"\").replace(\"-\",\"\"),\r\n          senha: this.state.senha,\r\n  \r\n  \r\n        }).then(response => {\r\n          sessionStorage.setItem('app-token', response.data.token)\r\n          //sessionStorage.setItem('app-id', this.state.cpf.replace(\".\",\"\").replace(\".\",\"\").replace(\".\",\"\").replace(\"-\",\"\"))\r\n\r\n\r\n            console.log('datta aprovado', response)\r\n             this.consultarAutorizacoes(this.state.cpf)\r\n            this.context.iniciarSessao()\r\n            this.setState({ carregando: false })\r\n            this.setState({\r\n              redirect: true\r\n            })\r\n  \r\n          \r\n        }).catch(erro => {\r\n          console.log(\"entrouaqui no erro1\")\r\n        this.setState({\r\n            mensagemErro:erro.response.data.error,\r\n            carregando:false\r\n        })\r\n         \r\n        })\r\n      \r\n  \r\n      \r\n    }\r\n  \r\n    handleCaixaDeErro = () => {\r\n      this.setState({\r\n        mensagemErro: null\r\n      })\r\n  \r\n    }\r\n  \r\n  \r\n\r\n   \r\n    handleCpf = (e) => {\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            cpf: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.cpf)\r\n\r\n    }\r\n\r\n    handleSenha = (e) => {\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            senha: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.senha)\r\n\r\n    }\r\n\r\n    botaoClicado = () => {\r\n        //enviar para o backend as variaveis coletadas\r\n        console.log(\"OS VALORES DIGITADOS FORAM\", this.state.cpf, this.state.senha)\r\n    }\r\n\r\n    prepareCadastrar = () => {\r\n        this.props.history.push('/cadastro')\r\n    }\r\n\r\n\r\n\r\n    \r\n \r\n    \r\n    render() {\r\n        \r\n    if (this.state.redirect) {\r\n        return <Redirect to=\"/bem-vindo\" />\r\n  \r\n  \r\n      } else {\r\n        return (\r\n            <div className=\"col-lg-12 fundo-login\">\r\n                <div className=\"login-desktop sombra text-center \">\r\n                    <legend>Login</legend>\r\n\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>CPF</label>\r\n                        <NumberFormat format=\"###.###.###-##\" value={this.state.cpf} onChange={(e) => { this.handleCpf(e) }} type=\"text\" className=\"form-control\" placeholder=\"CPF\" />\r\n                    </div>\r\n\r\n                    <p></p><div className=\"form-group\">\r\n                        <label>Senha</label>\r\n                        <input type=\"password\" value={this.state.senha} onChange={(e) => { this.handleSenha(e) }} className=\"form-control\" placeholder=\"Senha\" />\r\n                    </div>\r\n                \r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6\">\r\n                            <button onClick={this.loginClicked} type=\"button\" className=\"btn btn-primary btn-lg botao-tamanho\">Entrar</button>\r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                        <button type=\"button\" onClick={this.prepareCadastrar} className=\"btn btn-danger btn-lg botao-tamanho\">Cadastrar</button>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <br></br>\r\n\r\n                    {this.state.mensagemErro ?\r\n                      <div>\r\n                        <div className=\"alert alert-dismissible alert-danger\" >\r\n                          <button type=\"button\" onClick={this.handleCaixaDeErro} className=\"close\" data-dismiss=\"alert\">×</button>\r\n                          <strong>Ops!</strong> {this.state.mensagemErro}\r\n                        </div></div> : false}\r\n                </div>\r\n                <div className=\"login-mobile sombra text-center \">\r\n                    <legend>Login</legend>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>CPF</label>\r\n                        <NumberFormat format=\"###.###.###-##\" value={this.state.cpf} type=\"text\" className=\"form-control\" placeholder=\"CPF\" onChange={(e) => { this.handleCpf(e) }} />\r\n                    </div>\r\n\r\n                    <p></p><div className=\"form-group\">\r\n                        <label>Senha</label>\r\n                        <input type=\"password\" className=\"form-control\" value={this.state.senha} placeholder=\"Senha\" onChange={(e) => { this.handleSenha(e) }}/>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6\">\r\n                            <button onClick={this.loginClicked} type=\"button\" className=\"btn btn-primary btn-lg botao-tamanho\">Entrar</button>\r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                        <button type=\"button\" onClick={this.prepareCadastrar} className=\"btn btn-danger btn-lg botao-tamanho\">Cadastrar</button>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    {this.state.mensagemErro ?\r\n                      <div style={{ paddingLeft: '12%', paddingRight: '12%' }}>\r\n                        <div className=\"alert alert-dismissible alert-danger\" >\r\n                          <button type=\"button\" onClick={this.handleCaixaDeErro} className=\"close\" data-dismiss=\"alert\">×</button>\r\n                          <strong>Ops!</strong> {this.state.mensagemErro}\r\n                        </div></div> : false}\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n}\r\nLogin.contextType = AuthContext;\r\n\r\nexport default Login;","C:\\temp\\react-rede\\src\\Views\\EditarFuncoes.js",[],"C:\\temp\\react-rede\\src\\Views\\CriarPendencia.js",[],"C:\\temp\\react-rede\\src\\Views\\EditarSkills.js",[],"C:\\temp\\react-rede\\src\\Views\\Cadastro.js",["191","192","193","194","195","196","197","198","199","200","201","202"],"  \r\nimport React from 'react';\r\n\r\nimport axios from 'axios';\r\nimport NumberFormat from 'react-number-format'\r\n// import qs from 'qs'\r\n// import { Redirect } from 'react-router';\r\nimport ImageUploader from 'react-images-upload';\r\nimport FotoUploader from '../Components/FotoUploader'\r\nclass Cadastro extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n        pictures: [],\r\n        segundaPagina: false,\r\n        mensagemSucesso: null,\r\n        terceiraPagina: true,\r\n        quartaPagina: false,\r\n        primeiraPagina:true,\r\n        confirmarCadastro: false,\r\n        cpf: '',\r\n        senha:'',\r\n        senhaConfir:'',\r\n        nome: '',\r\n        inserir: '',\r\n        data: '',\r\n        listaDeCidadesDoEstado:[],\r\n        cidade: '',\r\n        estado: '',\r\n        descricao: '',\r\n        dataIntegracao: '',\r\n        aprovado: '',\r\n        coordenador: '',\r\n        skill: '',\r\n        funcionarios: '',\r\n        regiao: '',\r\n        comite: '',\r\n        funcao: '',\r\n        celular: '',\r\n        dataNascimento: '',\r\n        email: '',\r\n        hierarquia: \"\",\r\n        senha: '',\r\n        senhaConfirm: '',\r\n        listaFuncoes: [],\r\n        listaSkills: [],\r\n        listaComites: [],\r\n        itemsSkills: [],\r\n        sucesso: false,\r\n        mostrarCidade:false,\r\n        erro: null,\r\n        listaFuncionarios: []\r\n        // redirect: false\r\n    };\r\n        this.onDrop = this.onDrop.bind(this);\r\n    }\r\n    onDrop(picture) {\r\n        this.setState({\r\n            pictures: this.state.pictures.concat(picture),\r\n        });\r\n    }\r\n    state = {\r\n    \r\n\r\n    }\r\n    \r\n\r\n    verificarCheckSkills = (id) => {\r\n        console.log(\"testando o id\", id)\r\n        console.log(\"items skills:\", this.state.itemsSkills)\r\n        if (this.state.itemsSkills != '' && this.state.itemsSkills != null) {\r\n            console.log(\"nao esta vazio \")\r\n            // var tipoVeiculos = JSON.parse(localStorage.getItem('motorista-veiculos-escolhidos'))\r\n            if (JSON.stringify(this.state.itemsSkills).includes(id) == true) {\r\n                console.log(\"includes \")\r\n\r\n                return true;\r\n            } else {\r\n                console.log(\"not includes\")\r\n\r\n                return false;\r\n            }\r\n            // return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    consultarFuncoes = () => {\r\n        axios.get('https://java-rede-governanca-brasil.herokuapp.com/funcoes')\r\n            .then(response => {\r\n                this.setState({\r\n                    listaFuncoes: response.data\r\n                })\r\n\r\n            }).catch(erro => {\r\n\r\n            })\r\n    }\r\n\r\n    consultaSkillsAtuais = () => {\r\n        axios.get('https://java-rede-governanca-brasil.herokuapp.com/skills')\r\n            .then(response => {\r\n                this.setState({\r\n                    listaSkills: response.data\r\n                })\r\n                console.log(\"response foi:\", response.data)\r\n\r\n            }).catch(erro => {\r\n                alert(\" nao deu certo\", JSON.stringify(erro))\r\n\r\n            })\r\n    }\r\n\r\nhandlePrimeiraPagina = () =>{\r\n\r\n\r\n    this.setState({\r\n        primeiraPagina:true,\r\n        segundaPagina:false,\r\n        terceiraPagina:false,\r\n        quartaPagina:false\r\n    })\r\n}\r\nhandleSegundaPagina = () =>{\r\n    \r\n    this.setState({\r\n        primeiraPagina:false,\r\n        segundaPagina:true,\r\n        terceiraPagina:false,\r\n        quartaPagina:false\r\n    })\r\n}\r\nvalidarPrimeiraPagina = () =>{\r\n    var validado = true;\r\n    \r\n}\r\nhandleTerceiraPagina = () =>{\r\n    this.setState({\r\n        primeiraPagina:false,\r\n        segundaPagina:false,\r\n        terceiraPagina:true,\r\n        quartaPagina:false\r\n    })\r\n}\r\nhandleQuartaPagina = () =>{\r\n    this.setState({\r\n        primeiraPagina:false,\r\n        segundaPagina:false,\r\n        terceiraPagina:false,\r\n        quartaPagina:true\r\n    })\r\n}\r\n    consultarComites = () => {\r\n        axios.get('https://java-rede-governanca-brasil.herokuapp.com/comites')\r\n            .then(response => {\r\n                this.setState({\r\n                    listaComites: response.data\r\n                })\r\n\r\n            }).catch(erro => {\r\n\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.consultarFuncoes()\r\n        this.consultarComites()\r\n        this.consultarFuncionariosAtuais()\r\n        this.consultaSkillsAtuais()\r\n\r\n        this.setState({\r\n            nome: localStorage.getItem('cliente-nome'),\r\n            // id: localStorage.getItem('cliente-id'),\r\n            email: localStorage.getItem('cliente-email'),\r\n            celular: localStorage.getItem('cliente-celular'),\r\n            dataNascimento: localStorage.getItem('cliente-data-Nascimento'),\r\n            cidade: localStorage.getItem('cliente-cidade'),\r\n            estado: localStorage.getItem('cliente-estadp'),\r\n\r\n\r\n\r\n\r\n            senha: localStorage.getItem('cliente-senha'),\r\n            senhaConfirm: localStorage.getItem('cliente-senhaConfirm'),\r\n            descricao: localStorage.getItem('cliente-descricao'),\r\n            cpf: localStorage.getItem('cliente-cpf'),\r\n            dataNascimento: localStorage.getItem('cliente-dataNascimento'),\r\n            dataIntegracao: localStorage.getItem('cliente-dataIntegracao'),\r\n            hierarquia: localStorage.getItem('cliente-hierarquia'),\r\n            aprovado: localStorage.getItem('cliente-aprovado'),\r\n            coordenador: localStorage.getItem('cliente-coordenador'),\r\n            skill: localStorage.getItem('cliente-skill'),\r\n            funcao: localStorage.getItem('cliente-funcao'),\r\n            regiao: localStorage.getItem('cliente-regiao'),\r\n            comite: localStorage.getItem('cliente-comite'),\r\n\r\n\r\n        })\r\n    }\r\n\r\n    handleInserir = (e) => {\r\n        //fazer a modalzinha sumir\r\n        this.fecharModal()\r\n\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            inserir: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.inserir)\r\n\r\n    }\r\n\r\n    botaoClicado = () => {\r\n        //enviar para o backend as variaveis coletadas\r\n        console.log(\"OS VALORES DIGITADOS FORAM\", this.state.inserir)\r\n    }\r\n\r\n    fecharModal = () => {\r\n        //fazer a modalzinha sumir\r\n        this.setState({\r\n            mensagemSucesso: null\r\n        })\r\n        //fazer o valor que esta no input sumir\r\n        this.setState({\r\n            inserir: ''\r\n        })\r\n\r\n    }\r\n\r\n    encontrarCidadesDoEstado = (estado) =>{\r\n        axios.get(`https://java-rede-governanca-brasil.herokuapp.com/regioes/cidades/${estado}`, {\r\n        }).then(response => {\r\n            this.setState({\r\n                listaDeCidadesDoEstado: response.data\r\n            }, () =>{\r\n                this.setState({\r\n                    mostrarCidade:true\r\n                })\r\n            })\r\n\r\n\r\n        }).catch(erroResposta => {\r\n           alert(\"ALGUM ERRO\")\r\n \r\n\r\n        })\r\n\r\n    }\r\n\r\n    // cadastrar chamar a api\r\n\r\n    cadastrar = () => {\r\n        // console.log(\"chamando a api\", this.state.CNPJ)\r\n        axios.post('https://java-rede-governanca-brasil.herokuapp.com/funcionarios', {\r\n\r\n            nome: this.state.nome,\r\n            email: this.state.email,\r\n            celular: this.state.celular,\r\n            senha: this.state.senha,\r\n            senhaConfirm: this.state.senhaConfir,\r\n            descricao: this.state.descricao,\r\n            cpf: this.state.cpf.replace(\".\", \"\").replace(\".\", \"\").replace(\".\", \"\").replace(\"-\", \"\"),\r\n            dataNascimento: this.state.dataNascimento,\r\n            dataIntegracao: this.state.dataIntegracao,\r\n            hierarquia: 0,\r\n            aprovado: 0,\r\n            coordenador: 0,\r\n            skill: this.state.itemsSkills,\r\n            funcao: { id: this.state.funcao },\r\n            regiao: { id: this.state.regiaoId },\r\n            comite: { id: this.state.comite },\r\n            urlFoto: \"vazio\",\r\n            urlCurriculo: \"vazio\"\r\n\r\n\r\n\r\n        }).then(response => {\r\n            this.setState({\r\n                sucesso: true,\r\n                mensagemSucesso: \"Cadastrado com sucesso!\"\r\n\r\n            })\r\n\r\n\r\n\r\n\r\n            localStorage.removeItem('cliente-nome');\r\n            localStorage.removeItem('cliente-id');\r\n            localStorage.removeItem('cliente-email');\r\n            localStorage.removeItem('cliente-celular');\r\n            localStorage.removeItem('cliente-senha');\r\n            localStorage.removeItem('cliente-senhaConfirm');\r\n            localStorage.removeItem('cliente-descricao');\r\n            localStorage.removeItem('cliente-cpf');\r\n            localStorage.removeItem('cliente-dataNascimento');\r\n            localStorage.removeItem('cliente-dataIntegracao');\r\n            localStorage.removeItem('cliente-hierarquia');\r\n            localStorage.removeItem('cliente-aprovado');\r\n            localStorage.removeItem('cliente-coordenador');\r\n            localStorage.removeItem('cliente-skill');\r\n            localStorage.removeItem('cliente-funcao');\r\n            localStorage.removeItem('cliente-regiao');\r\n            localStorage.removeItem('cliente-comite');\r\n\r\n\r\n\r\n        }).catch(erroResposta => {\r\n            console.log(\"estrutura de erro\", erroResposta.response.data.error)\r\n            this.setState({\r\n                mensagemErro: erroResposta.response.data.error\r\n            })\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n    // cadastrarFuncionarios = () => {\r\n    //     axios.post('https://java-rede-governanca-brasil.herokuapp.com/funcionarios', {\r\n    //         funcionarios: this.state.inserir\r\n    //     })\r\n    //         .then(response => {\r\n    //             //atribuir valor a uma variavel \r\n    //             this.setState({\r\n    //                 mensagemSucesso: \"Cadastro Realizado!\"\r\n    //             })\r\n    //             this.consultaFuncionariosAtuais()\r\n\r\n    //         }).catch(erro => {\r\n    //             //atribuir valor a uma variavel \r\n    //             this.setState({\r\n    //                 mensagemErro: \"Deu erro!\"\r\n    //             })\r\n\r\n    //         })\r\n    // }\r\n\r\n    consultarFuncionariosAtuais = () => {\r\n        axios.get('https://java-rede-governanca-brasil.herokuapp.com/funcionarios')\r\n            .then(response => {\r\n                this.setState({\r\n                    listaFuncionarios: response.data\r\n                })\r\n                console.log(\"response foi:\", response.data)\r\n\r\n            }).catch(erro => {\r\n                alert(\" nao deu certo\", JSON.stringify(erro))\r\n\r\n            })\r\n    }\r\n\r\n    handleInserir = (e) => {\r\n        //fazer a modalzinha sumir\r\n        this.fecharModal()\r\n\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            inserir: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.inserir)\r\n\r\n    }\r\n\r\n\r\n    handleCpf = (e) => {\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            cpf: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.cpf)\r\n\r\n    }\r\n\r\n\r\n    // handleId = (e) => {\r\n    //     //variaveis do tipo state para receber valor é daseguinte forma\r\n    //     this.setState({\r\n    //         id: e.target.value\r\n    //     })\r\n\r\n    //     //imprimir ou acessar valores do tipo state\r\n    //     console.log(this.state.id)\r\n\r\n    // }\r\n\r\n    handleEmail = (e) => {\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            email: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.email)\r\n\r\n    }\r\n\r\n    handleCelular = (e) => {\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            celular: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.celular)\r\n\r\n    }\r\n\r\n    handleSenha = (e) => {\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            senha: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.senha)\r\n\r\n    }\r\n\r\n    handleSemhaConfirm = (e) => {\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            senhaConfirm: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.senhaConfirm)\r\n\r\n    }\r\n\r\n    handleDataNascimento = (e) => {\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            dataNascimento: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.dataNascimento)\r\n\r\n    }\r\n\r\n\r\n    handleHierarquia = (e) => {\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            hierarquia: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.hierarquia)\r\n\r\n    }\r\n\r\n    handleAprovado = (e) => {\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            aprovado: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.aprovado)\r\n\r\n    }\r\n\r\n    handleCoordenador = (e) => {\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            coordenador: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.coordenador)\r\n\r\n    }\r\n\r\n    handleSkill = (e) => {\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            skill: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.skill)\r\n\r\n    }\r\n\r\n    handleFuncao = (e) => {\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            funcao: e.target.value\r\n        }, () => {\r\n            this.setState({\r\n                valueFuncao: this.state.funcao\r\n            })\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.funcao)\r\n\r\n    }\r\n\r\n    handleComite = (e) => {\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            comite: e.target.value\r\n        }, () => {\r\n            this.setState({\r\n                comiteValue: this.state.comite\r\n\r\n            })\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.comite)\r\n\r\n    }\r\n\r\n    handleNome = (e) => {\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            nome: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.nome)\r\n\r\n    }\r\n\r\n    handleDataNascimento = (e) => {\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            dataNascimento: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.data)\r\n\r\n    }\r\n\r\n    handleDataIntegracao = (e) => {\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            dataIntegracao: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.data)\r\n\r\n    }\r\n\r\n\r\n\r\n    handleDescricao = (e) => {\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            descricao: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.descricao)\r\n\r\n    }\r\n\r\n    handleDataIntegracao = (e) => {\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            dataIntegracao: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.dataIntegracao)\r\n\r\n    }\r\n    handleEstado = (e) =>{\r\n        this.setState({\r\n            estado:e.target.value\r\n        }, () =>{\r\n            this.setState({\r\n                valueEstado: this.state.estado\r\n            }, () =>{\r\n               this.encontrarCidadesDoEstado(this.state.estado)\r\n            })\r\n        })\r\n    }\r\n    handleCidade = (e) =>{\r\n        this.setState({\r\n            regiaoId: e.target.value\r\n        })\r\n    }\r\n\r\n    botaoClicado = () => {\r\n        //enviar para o backend as variaveis coletadas\r\n        console.log(\"OS VALORES DIGITADOS FORAM\", this.state.cpf, this.state.nome, this.state.data)\r\n    }\r\n\r\n \r\n    voltarSegunda = () => {\r\n        this.setState({\r\n            segundaPagina: true,\r\n            terceiraPagina: false\r\n        })\r\n    }\r\n\r\n   \r\n    handleConfirmarCadastro = () => {\r\n        this.setState({\r\n            confirmarCadastro: !this.state.confirmarCadastro\r\n        })\r\n    }\r\n\r\n\r\n\r\n    handleSucess = () => {\r\n        this.setState({\r\n            sucesso: !this.state.sucesso\r\n        })\r\n    }\r\n\r\n    checkSkills = (e) => {\r\n        console.log(\"O E TARGET ID\", e.target.id)\r\n        let itemsSkills = this.state.itemsSkills;\r\n        if (e.target.checked == true) {\r\n            var indexskills = this.state.itemsSkills.length;\r\n            itemsSkills[indexskills] = { id: e.target.id };\r\n            this.setState({ itemsSkills: itemsSkills }, () => {\r\n            });\r\n        } else {\r\n            console.log(\"entrou no else\")\r\n            let updatedItems = this.state.itemsSkills.filter((item) => item.id != e.target.id)\r\n            this.setState({ itemsSkills: updatedItems }, () => {\r\n                console.log(\"itemsSkills\", this.state.itemsSkills)\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"col-lg-12 fundo-login\" style={{\r\n                paddingTop: '0%', paddingBottom: '0%',\r\n\r\n            }}>\r\n\r\n                {this.state.primeiraPagina == true?\r\n                    <div className=\"row\"\r\n                        style={{\r\n                            paddingLeft: '2%', paddingRight: '5%', paddingTop: '1%', paddingBottom: '1%', height: '100%',\r\n                            // border: '8px solid yellow'\r\n                        }}\r\n                    >\r\n\r\n                        <div className=\"col-lg-5 paginaLeft \" style={{\r\n                            // border: '8px solid yellow'\r\n                            paddingLeft: '2%', paddingRight: '5%',\r\n                        }}>\r\n                            <div>\r\n\r\n                                <h4 style={{\r\n                                    textAlign: 'center', color: 'white', paddingTop: '100px',\r\n                                    // border: '2px solid black'\r\n                                }}> Voce acredita no poder de transformação da Rede?</h4>\r\n\r\n\r\n                                <p style={{\r\n                                    fontSize: '15px', color: 'white', paddingTop: '50px', paddingLeft: '25px', paddingRight: '25px'\r\n                                    // border: '2px solid black'\r\n                                }}>\r\n\r\n                                    O cadastro do usuário é feito pelo prórpio funcionário\r\n                                    O cadastro é aprovado ou reprovado pelos administrdores do sistema\r\n                                    Será possível anexar uma foto ao perfil e anexar currículo\r\n\r\n</p>\r\n                            </div>\r\n                            <br></br>\r\n                            <div>\r\n                                <h4 style={{\r\n                                    textAlign: 'center', color: 'white', paddingTop: '70px',\r\n                                    // border: '2px solid black'\r\n                                }}> Quer ser voluntário na RGB?</h4>\r\n\r\n                                <p style={{\r\n                                    fontSize: '15px', color: 'white', paddingTop: '50px', paddingLeft: '25px', paddingRight: '25px'\r\n                                    // border: '2px solid black'\r\n                                }}>\r\n\r\n                                    O cadastro do usuário é feito pelo prórpio funcionário\r\n                                    O cadastro é aprovado ou reprovado pelos administrdores do sistema\r\n                                    Será possível anexar uma foto ao perfil e anexar currículo\r\n\r\n</p>\r\n                            </div>\r\n\r\n                            <br></br>\r\n                            <div>\r\n                                <h4 style={{\r\n                                    textAlign: 'center', color: 'white', paddingTop: '70px',\r\n                                    // border: '2px solid black'\r\n                                }}> Cadastre-se e colabore com a implantação da governança no Brasil.</h4>\r\n\r\n\r\n                                <p style={{\r\n                                    fontSize: '15px', color: 'white', paddingTop: '50px', paddingLeft: '25px', paddingRight: '25px'\r\n                                    // border: '2px solid black'\r\n                                }}>\r\n\r\n                                    O cadastro do usuário é feito pelo prórpio funcionário\r\n                                    O cadastro é aprovado ou reprovado pelos administrdores do sistema\r\n                                    Será possível anexar uma foto ao perfil e anexar currículo\r\n\r\n</p>\r\n                            </div>\r\n                        </div >\r\n\r\n\r\n\r\n                        <div className=\"col-lg-7 paginaRight sombra\"\r\n                            style={{\r\n                                // border: '2px solid red',\r\n                                marginTop: '5%'\r\n                            }}\r\n                        >\r\n\r\n                            {/* INICIO DO FORMULARIO */}\r\n\r\n                            <div style={{\r\n                            }}>\r\n\r\n                                <legend>Cadastre-se</legend>\r\n\r\n\r\n\r\n\r\n                                <br></br>\r\n\r\n\r\n                                <div className=\"\" style={{\r\n                                    paddingBottom: '1%',\r\n                                    // border: '2px solid red'\r\n                                }}>\r\n                                    <label htmlFor=\"exampleInputEmail1\">Nome Completo</label>\r\n                                    <input value={this.state.nome} onChange={(e) => { this.handleNome(e) }} type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Nome Completo\" />\r\n                                    <small id=\"emailHelp\" className=\"form-text text-muted\"></small>\r\n                                </div>\r\n\r\n                                <br></br>\r\n\r\n                                {/* ROW DO CPF E CELULAR */}\r\n\r\n                                <div className=\"row \"\r\n                                    style={{\r\n                                        marginLeft: '0.15%', marginRight: '0.15%', paddingBottom: '2%',\r\n                                        textAlign: 'center',\r\n                                        // border: '2px solid yellow'\r\n                                    }}\r\n                                >\r\n\r\n\r\n                                    {/* DIV DO CPF */}\r\n\r\n                                    <div className=\"col-lg-7\" style={{\r\n                                        paddingRight: '1%', paddingLeft: '0px',\r\n                                        // border: '2px solid yellow'\r\n                                    }}>\r\n                                        <label htmlFor=\"exampleInputCNPJ1\">CPF</label>\r\n                                        <NumberFormat\r\n                                            //         style={{\r\n                                            //         marginLeft: '0%', marginRight: '1%',\r\n                                            //     // textAlign: 'center', \r\n                                            //     border: '2px solid yellow'\r\n                                            // }} \r\n                                            value={this.state.cpf} format=\"###.###.###-##\" onChange={(e) => { this.handleCpf(e) }} type=\"text\" className=\"form-control\" id=\"CNPJClienteId\" aria-describedby=\"CNPJHelp\" placeholder=\"CPF\" />\r\n                                    </div>\r\n\r\n\r\n                                    {/* DIV DO CELULAR */}\r\n\r\n                                    <br></br>\r\n                                    <div className=\"col-lg-5\" style={{\r\n                                        paddingRight: '0%', paddingLeft: '0px',\r\n                                        // border: '2px solid yellow'\r\n                                    }} >\r\n                                        <label htmlFor=\"exampleInputCelular1\">Celular</label>\r\n                                        <NumberFormat format=\"(##) #####-####\" onChange={(e) => { this.handleCelular(e) }} type=\"tel\" className=\"form-control\" value={this.state.celular} placeholder=\"Celular\"\r\n\r\n                                        />\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n                                {/* ROW DA DATA DE NASCIMENTO E EMAIL */}\r\n\r\n                                <br></br>\r\n                                <div className=\"row\" style={{\r\n                                    marginLeft: '0.15%', marginRight: '0.15%',\r\n                                    paddingRight: '0px', paddingLeft: '0px', paddingBottom: '2%',\r\n                                    // border: '2px solid blue'\r\n                                }}>\r\n\r\n                                    {/* DIV DA DATA DE NASCIMENTO */}\r\n\r\n                                    <div className=\"col-lg-5\" style={{\r\n                                        paddingRight: '1%', paddingLeft: '0px',\r\n                                        // border: '2px solid yellow'\r\n                                    }}>\r\n                                        <label htmlFor=\"exampleInputEmail1\">Data de Nascimento</label>\r\n                                        <input value={this.state.dataNascimento} onChange={(e) => { this.handleDataNascimento(e) }} type=\"date\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"data de Nascimento\" />\r\n                                        <small id=\"emailHelp\" className=\"form-text text-muted\"></small>\r\n\r\n                                    </div>\r\n\r\n\r\n                                    {/* DIV DO EMAIL */}\r\n\r\n                                    <br></br>\r\n                                    <div className=\"col-lg-7\" style={{\r\n                                        paddingRight: '0%', paddingLeft: '0px',\r\n                                        // border: '2px solid yellow'\r\n                                    }}>\r\n                                        <label htmlFor=\"exampleInputEmail1\">E-mail</label>\r\n                                        <input value={this.state.email} onChange={(e) => { this.handleEmail(e) }} type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"E-mail\" />\r\n                                        <small id=\"emailHelp\" className=\"form-text text-muted\"></small>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n\r\n                                <br></br>\r\n                                <div className=\"row \"\r\n                                    style={{\r\n                                        marginLeft: '0%', marginRight: '0%', paddingBottom: '2%',\r\n                                        // border: '2px solid black'\r\n                                    }}\r\n                                >\r\n <div className=\"col-lg-5\" style={{\r\n                                        paddingRight: '0px', paddingLeft: '5px',\r\n                                        // border: '2px solid yellow'\r\n\r\n\r\n                                        // border: '2px solid green'\r\n                                    }}>\r\n                                        <label htmlFor=\"exampleSelect2\">Selecione o Estado</label>\r\n                                        <select onChange={(e) =>{this.handleEstado(e)}} className=\"form-control\" id=\"exampleSelect2\">\r\n                                            <option>Selecionar</option>\r\n                                            <option value=\"RO\">RO</option>\r\n                                            <option value=\"AC\">AC</option>\r\n                                            <option value=\"AM\">AM</option>\r\n                                            <option value=\"RR\">RR</option>\r\n                                            <option value=\"PA\">PA</option>\r\n                                            <option value=\"AP\">AP</option>\r\n                                            <option value=\"TO\">TO</option>\r\n                                            <option value=\"MA\">MA</option>\r\n                                            <option value=\"PI\">PI</option>\r\n                                            <option value=\"CE\">CE</option>\r\n                                            <option value=\"RN\">RN</option>\r\n                                            <option value=\"PB\">PB</option>\r\n                                            <option value=\"PE\">PE</option>\r\n                                            <option value=\"AL\">AL</option>\r\n                                            <option value=\"SE\">SE</option>\r\n                                            <option value=\"BA\">BA</option>\r\n                                            <option value=\"MG\">MG</option>\r\n                                            <option value=\"ES\">ES</option>\r\n                                            <option value=\"RJ\">RJ</option>\r\n                                            <option value=\"SP\">SP</option>\r\n                                            <option value=\"PR\">PR</option>\r\n                                            <option value=\"SC\">SC</option>\r\n                                            <option value=\"RS\">RS</option>\r\n                                            <option value=\"MS\">MS</option>\r\n                                            <option value=\"MT\">MT</option>\r\n                                            <option value=\"GO\">GO</option>\r\n                                            <option value=\"DF\">DF</option>\r\n\r\n                                        </select>\r\n                                    </div>\r\n{this.state.mostrarCidade? \r\n    \r\n                                    <div style={{\r\n\r\n                                    }} className=\"col-lg-7 \" style={{\r\n                                        paddingRight: '5px', paddingLeft: '0px',\r\n                                        // border: '2px solid yellow'\r\n                                    }}\r\n                                    >\r\n                                        <label value={this.state.cidade} htmlFor=\"exampleSelect1\">Selecione a Cidade</label>\r\n                                        <select onChange={(e) => this.handleCidade(e)} style={{\r\n                                            // border: '2px solid blue'\r\n                                        }} className=\"form-control\" id=\"exampleSelect1\">\r\n                                            <option>Selecionar</option>\r\n                                            {this.state.listaDeCidadesDoEstado.map(cidade =>(\r\n                                                <option value={cidade.id}>{cidade.cidade}</option>\r\n                                            ))}\r\n\r\n                                        </select>\r\n                                    </div>\r\n                                    :false}\r\n                                    <br></br>\r\n                                   \r\n\r\n                                </div>\r\n                                <br></br>\r\n                                <div className=\"\" style={{\r\n                                    marginLeft: '0%', marginRight: '0%', paddingBottom: '2%',\r\n                                    // border: '2px solid black'\r\n                                }}>\r\n                                    <label htmlFor=\"exampleTextarea\">Descrição</label>\r\n                                    <textarea className=\"form-control\"  value={this.state.descricao} id=\"exampleTextarea\" onChange={(e)=>{this.handleDescricao(e)}} rows={3} placeholder=\"Descrição\" />\r\n                                </div>\r\n\r\n                                <br></br>\r\n                                <div className=\"\">\r\n                                    <label htmlFor=\"exampleInputEmail1\">Data de Integração</label>\r\n                                    <input value={this.state.dataIntegracao} onChange={(e) => { this.handleDataIntegracao(e) }} type=\"date\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"DATA DE INTEGRAÇÃO\" />\r\n                                    <small id=\"emailHelp\" className=\"form-text text-muted\"></small>\r\n\r\n                                </div>\r\n                                <br></br>\r\n                             \r\n                                <div style={{\r\n\r\n\r\n                                }}>\r\n                                    <br></br>\r\n\r\n                                    <button type=\"button\" onClick={this.handleSegundaPagina} className=\"btn btn-primary btn-lg botao-tamanho\">Próximo</button>\r\n\r\n\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                    : this.state.segundaPagina == true ? <div>\r\n\r\n                        <div style={{\r\n\r\n                        }}>\r\n\r\n                            <div className=\"row\"\r\n                                style={{\r\n                                    paddingLeft: '2%', paddingRight: '5%', paddingTop: '1%', paddingBottom: '1%', height: '100%',\r\n                                    // border: '8px solid yellow'\r\n                                }}\r\n                            >\r\n                                <div className=\"col-lg-5 paginaLeft \" style={{\r\n                                    // border: '8px solid yellow'\r\n                                    paddingLeft: '2%', paddingRight: '5%',\r\n                                }}>\r\n                                    <div>\r\n\r\n                                        <h4 style={{\r\n                                            textAlign: 'center', color: 'white', paddingTop: '100px',\r\n                                            // border: '2px solid black'\r\n                                        }}> Profissionais engajados e capacitados</h4>\r\n\r\n\r\n                                        <p style={{\r\n                                            fontSize: '15px', color: 'white', paddingTop: '50px', paddingLeft: '25px', paddingRight: '25px'\r\n                                            // border: '2px solid black'\r\n                                        }}>\r\n\r\n                                            O cadastro do usuário é feito pelo prórpio funcionário\r\n                                            O cadastro é aprovado ou reprovado pelos administrdores do sistema\r\n                                            Será possível anexar uma foto ao perfil e anexar currículo\r\n\r\n</p>\r\n                                    </div>\r\n                                    <br></br>\r\n                                    <div>\r\n                                        <h4 style={{\r\n                                            textAlign: 'center', color: 'white', paddingTop: '70px',\r\n                                            // border: '2px solid black'\r\n                                        }}> Como sua experiência pode nos ajudar?</h4>\r\n\r\n                                        <p style={{\r\n                                            fontSize: '15px', color: 'white', paddingTop: '50px', paddingLeft: '25px', paddingRight: '25px'\r\n                                            // border: '2px solid black'\r\n                                        }}>\r\n\r\n                                            O cadastro do usuário é feito pelo prórpio funcionário\r\n                                            O cadastro é aprovado ou reprovado pelos administrdores do sistema\r\n                                            Será possível anexar uma foto ao perfil e anexar currículo\r\n\r\n</p>\r\n                                    </div>\r\n\r\n                                    <br></br>\r\n\r\n                                </div >\r\n\r\n\r\n\r\n                                <div className=\"col-lg-7 paginaRight sombra\" style={{\r\n                                    marginTop: '5%',\r\n\r\n                                    // border: '8px solid red'\r\n                                }}>\r\n\r\n                                    {/* INICIO DO FORMULARIO - SEGUNDA PAGINA*/}\r\n\r\n                                    <div style={{\r\n                                    }}>\r\n\r\n                                        <legend>Carreira e Contribuição </legend>\r\n                                        <br></br>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"exampleSelect1\">Selecionar Função</label>\r\n                                            <select value={this.state.valueFuncao} onChange={(e) => { this.handleFuncao(e) }} className=\"form-control\" id=\"exampleSelect1\">\r\n\r\n                                                <option>Selecionar</option>\r\n                                                {this.state.listaFuncoes.map(funcaoAtual => (\r\n                                                    <option value={funcaoAtual.id}>{funcaoAtual.funcao}</option>\r\n\r\n                                                ))}\r\n\r\n                                            </select>\r\n                                        </div>\r\n\r\n                                        <br></br>\r\n                                        <br></br>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"exampleSelect1\">Selecionar comitê, Câmara Temática ou Grupo de Trabalho</label>\r\n                                            <select value={this.state.comiteValue} onChange={(e) => { this.handleComite(e) }} className=\"form-control\" id=\"exampleSelect1\">\r\n                                                <option>Selecionar</option>\r\n                                                {this.state.listaComites.map(comiteAtual => (\r\n                                                    <option value={comiteAtual.id}>{comiteAtual.comite}</option>\r\n\r\n                                                ))}\r\n\r\n                                            </select>\r\n                                        </div>\r\n\r\n                                        <br></br>\r\n                                        <label>Conhecimentos e Skills </label>\r\n\r\n                                        <br></br><br></br>\r\n                                        <div className=\"row\">\r\n                                            {this.state.listaSkills.map(skillAtual => (\r\n                                                <div className=\"col-lg-4\" style={{ width: '110%' }}>\r\n                                                    <fieldset className=\"form-group checkboxes\">\r\n                                                        <div className=\"form-check\">\r\n                                                            <label className=\"form-check-label\">\r\n                                                                <input id={skillAtual.id} \r\n                                                                onChange={(e) => this.checkSkills(e)} \r\n                                                                defaultChecked={this.verificarCheckSkills(skillAtual.id)}\r\n                                                                className=\"form-check-input\" \r\n                                                                type=\"checkbox\" />\r\n                                                                {skillAtual.skill}\r\n                                                            </label>\r\n                                                        </div>\r\n                                                    </fieldset>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n\r\n\r\n\r\n                                        <br></br><br></br>\r\n\r\n\r\n                                        <br></br>\r\n                                        <div className=\"row col-lg 12\" style={{\r\n                                            marginLeft: '1%',\r\n                                            // border: '2px solid blue',\r\n\r\n                                        }}>\r\n                                            {/* DIV SEGUNDA PAGINA */}\r\n\r\n                                            <div className=\" col-lg 7\"\r\n                                                style={{\r\n\r\n                                                    // border: '2px solid yellow'\r\n                                                }}\r\n                                            >\r\n                                                <button\r\n                                                    style={{\r\n\r\n                                                        //    border: '2px solid red'\r\n                                                    }}\r\n                                                    type=\"button\" onClick={this.handlePrimeiraPagina} className=\"btn btn-primary btn-lg botao-tamanho-segunda-pagina\">Voltar</button>\r\n                                            </div>\r\n\r\n\r\n                                            <div className=\" col-lg 5\"\r\n                                                style={{\r\n\r\n                                                    // border: '2px solid yellow'\r\n                                                }}\r\n                                            >\r\n\r\n                                                <button style={{\r\n\r\n                                                    //    border: '2px solid red'\r\n                                                }}\r\n                                                    type=\"button\" onClick={this.handleTerceiraPagina} className=\"btn btn-primary btn-lg botao-tamanho-segunda-pagina\">Próximo</button>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n\r\n                                        {this.state.mensagemSucesso ?\r\n                                            <div style={{\r\n                                                marginLeft: '20%', marginRight: '20%'\r\n\r\n\r\n                                            }}>\r\n                                                <div style={{\r\n                                                    marginTop: '5%', fontSize: '19px',\r\n                                                    // border: '2px solid blue',\r\n                                                    //  marginLeft: '2%',\r\n\r\n                                                }} className=\"alert alert-dismissible alert-success\">\r\n                                                    <button onClick={this.fecharModal} type=\"button\" className=\"close\" data-dismiss=\"alert\">×</button>\r\n                                                    {this.state.mensagemSucesso}\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            : false}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                    </div> :\r\n                        //terceira pagina\r\n\r\n                        <div style={{\r\n\r\n                        }}>\r\n\r\n                            <div className=\"row\"\r\n                                style={{\r\n                                    paddingLeft: '2%', paddingRight: '5%', paddingTop: '1%', paddingBottom: '1%', height: '100%',\r\n                                    // border: '8px solid yellow'\r\n                                }}\r\n                            >\r\n\r\n                                <div className=\"col-lg-5 paginaLeft \" style={{}}>\r\n                                    <div>\r\n                                        <h4 style={{\r\n                                            textAlign: 'center', color: 'white', paddingTop: '70px',\r\n                                            // border: '2px solid black'\r\n                                        }}> Encontre-se com nossa visão e valores</h4>\r\n\r\n                                        <p style={{\r\n                                            fontSize: '15px', color: 'white', paddingTop: '50px', paddingLeft: '25px', paddingRight: '25px'\r\n                                            // border: '2px solid black'\r\n                                        }}>\r\n\r\n                                            O cadastro do usuário é feito pelo prórpio funcionário\r\n                                            O cadastro é aprovado ou reprovado pelos administrdores do sistema\r\n                                            Será possível anexar uma foto ao perfil e anexar currículo\r\n\r\n</p>\r\n                                    </div>\r\n\r\n                                </div >\r\n\r\n\r\n                                <div className=\"col-lg-7 paginaRight sombra\" style={{\r\n                                    marginTop: '5%',\r\n\r\n                                    // border: '8px solid red'\r\n                                }}>\r\n\r\n                                    {/* INICIO DO FORMULARIO - SEGUNDA PAGINA*/}\r\n\r\n                                    <div style={{\r\n                                    }}>\r\n\r\n\r\n                                        <legend>Credenciais </legend>\r\n                                        <br></br>\r\n\r\n\r\n                                        <div class=\"form-group\">\r\n                                            <label for=\"exampleInputPassword1\">Senha</label>\r\n                                            <input type=\"password\" onChange={(e)=>{this.setState({senha:e.target.value})}} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Senha\" />\r\n                                        </div>\r\n                                        <br></br><br></br>\r\n                                        <div class=\"form-group\">\r\n                                            <label for=\"exampleInputPassword2\">Confirmação de Senha</label>\r\n                                            <input type=\"password\" class=\"form-control\" onChange={(e)=>{this.setState({senhaConfir:e.target.value})}} id=\"exampleInputPassword1\" placeholder=\"Confirmação de Senha\" />\r\n                                        </div>\r\n                                        <br></br><br></br>\r\n\r\n\r\n                                    </div>\r\n                                    <br></br><br></br>\r\n                                    <div className=\"row col-lg 12\" style={{\r\n                                        marginLeft: '1%',\r\n                                        // border: '2px solid blue',\r\n\r\n                                    }}>\r\n                                        {/* DIV SEGUNDA PAGINA */}\r\n\r\n                                        <div className=\" col-lg 7\"\r\n                                            style={{\r\n\r\n                                                // border: '2px solid yellow'\r\n                                            }}\r\n                                        >\r\n                                            <button\r\n                                                style={{\r\n\r\n                                                    //    border: '2px solid red'\r\n                                                }}\r\n                                                type=\"button\" onClick={this.voltarSegunda} className=\"btn btn-primary btn-lg botao-tamanho-segunda-pagina\">Voltar</button>\r\n                                        </div>\r\n\r\n\r\n                                        <div className=\" col-lg 5\"\r\n                                            style={{\r\n\r\n                                                // border: '2px solid yellow'\r\n                                            }}\r\n                                        >\r\n\r\n                                            <button style={{\r\n\r\n                                                //    border: '2px solid red'\r\n                                            }}\r\n                                                type=\"button\" value={this.state.inserir} onChange={(e) => { this.handleInserir(e) }} onClick={this.cadastrar} className=\"btn btn-primary btn-lg botao-tamanho-segunda-pagina\">Cadastrar</button>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n\r\n                                    {this.state.mensagemSucesso ?\r\n                                        <div style={{\r\n                                            marginLeft: '20%', marginRight: '20%'\r\n\r\n\r\n                                        }}>\r\n                                            <div style={{\r\n                                                marginTop: '5%', fontSize: '19px',\r\n                                                // border: '2px solid blue',\r\n                                                //  marginLeft: '2%',\r\n\r\n                                            }} className=\"alert alert-dismissible alert-success\">\r\n                                                <button onClick={this.fecharModal} type=\"button\" className=\"close\" data-dismiss=\"alert\">×</button>\r\n                                                {this.state.mensagemSucesso}\r\n                                            </div>\r\n                                        </div>\r\n                                        : false}\r\n                                        <br></br>\r\n{this.state.mensagemErro ?\r\n              <div style={{ paddingLeft: '12%', paddingRight: '12%' }}>\r\n                <div className=\"alert alert-dismissible alert-danger\" >\r\n                  <button type=\"button\" onClick={this.handleCaixaDeErro} className=\"close\" data-dismiss=\"alert\">×</button>\r\n                  <strong>Ops!</strong> {this.state.mensagemErro}\r\n                </div></div> : false}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                </div>\r\n\r\n                                \r\n\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                }\r\n                \r\n\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default Cadastro;","C:\\temp\\react-rede\\src\\Views\\AtualizarFuncao.js",[],"C:\\temp\\react-rede\\src\\Views\\AtualizarSkill.js",["203","204","205","206","207","208"],"import React from 'react'\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../Main/ProvedorAutenticacao';\r\n\r\nclass AtualizarSkill extends React.Component {\r\n\r\n    state ={\r\n        skill: '',\r\n        listaSkills: [],\r\n        itemsSkills: [],\r\n        sucesso: false,\r\n        erro: null,\r\n        aparecer:false\r\n\r\n        }\r\n  \r\n\r\n        fecharModal= () =>{\r\n            this.setState({\r\n                mensagemSucesso:null,\r\n                mensagemErro:null\r\n            })\r\n        }\r\n        \r\n    \r\n        atualizarSkills = () =>{\r\n            console.log(\"skilss:\", this.state.itemsSkills)\r\n           //enviar para o backend as variaveis coletadas\r\n           axios.put('https://java-rede-governanca-brasil.herokuapp.com/funcionarios/atualizar-skill',\r\n           {\r\n              cpf:this.context.user,\r\n              skill: this.state.itemsSkills,\r\n            })\r\n              .then(response => {\r\n                this.setState({\r\n                  mensagemSucesso: \"Aprovação Realizada!\"\r\n                })\r\n              }).catch(erro => {\r\n                this.setState({\r\n                  mensagemErro: erro.response.data.error\r\n                })\r\n              })\r\n\r\n        }\r\n\r\n        consultaSkillsAtuais = () => {\r\n            axios.get('https://java-rede-governanca-brasil.herokuapp.com/skills')\r\n                .then(response => {\r\n                    this.setState({\r\n                        listaSkills: response.data,\r\n                        \r\n                    })\r\n    \r\n                }).catch(erro => {\r\n                    alert(\" nao deu certo\", JSON.stringify(erro))\r\n    \r\n                })\r\n        }\r\n\r\n        consultaSkillsFuncionario = () => {\r\n            axios.get(`https://java-rede-governanca-brasil.herokuapp.com/funcionarios/${this.context.user}`)\r\n                .then(response => {\r\n                    this.setState({\r\n                        listaSkillsDoFuncionario: response.data.skill,\r\n                        itemsSkills:  response.data.skill\r\n                    }, ()=>{\r\n                        this.setState({\r\n                            aparecer:true\r\n                        })\r\n                    })\r\n    \r\n                }).catch(erro => {\r\n                    alert(\" nao deu certo\", JSON.stringify(erro))\r\n    \r\n                })\r\n        }\r\n        \r\n        componentDidMount() {\r\n            this.consultaSkillsAtuais()\r\n            this.consultaSkillsFuncionario()\r\n            this.setState({   \r\n                skill: localStorage.getItem('cliente-skill'),\r\n            })\r\n        }\r\n        cadastrar = () => {\r\n            axios.post('https://java-rede-governanca-brasil.herokuapp.com/funcionarios', {\r\n    \r\n                skill: this.state.itemsSkills,\r\n            \r\n            }).then(response => {\r\n                this.setState({\r\n                    sucesso: true,\r\n                    mensagemSucesso: \"Cadastrado com sucesso!\"\r\n    \r\n                })\r\n    \r\n                localStorage.removeItem('cliente-skill');\r\n                \r\n    \r\n    \r\n    \r\n            }).catch(erroResposta => {\r\n                this.setState({\r\n                    erro: erroResposta.response.data.error\r\n                })\r\n    \r\n            })\r\n    \r\n    \r\n        }\r\n\r\n        checkSkills = (e) => {\r\n            let itemsSkills = this.state.itemsSkills;\r\n            if (e.target.checked == true) {\r\n                var indexskills = this.state.itemsSkills.length;\r\n                itemsSkills[indexskills] = { id: e.target.id };\r\n                this.setState({ itemsSkills: itemsSkills }, () => {\r\n                });\r\n            } else {\r\n\r\n                let updatedItems = this.state.itemsSkills.filter((item) => item.id != e.target.id)\r\n                this.setState({ itemsSkills: updatedItems }, () => {\r\n    \r\n                });\r\n            }\r\n        }\r\n        verificarCheckSkills = (id) => {\r\n       \r\n            if (this.state.listaSkillsDoFuncionario != '' && this.state.listaSkillsDoFuncionario != null) {\r\n                // var tipoVeiculos = JSON.parse(localStorage.getItem('motorista-veiculos-escolhidos'))\r\n                if (JSON.stringify(this.state.listaSkillsDoFuncionario).includes(id) == true) {\r\n    \r\n                    return true;\r\n                } else {\r\n    \r\n                    return false;\r\n                }\r\n                // return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        fecharModal = () => {\r\n            //fazer a modalzinha sumir\r\n            this.setState({\r\n                mensagemSucesso: null\r\n            })\r\n            //fazer o valor que esta no input sumir\r\n            this.setState({\r\n                inserir: ''\r\n            })\r\n    \r\n        }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                <div className=\"col-lg-12 fundo-login\">\r\n                    <div className=\"login-desktop sombra text-center \">\r\n                        <h5><label>Atualizar - Conhecimento e Skill</label></h5>\r\n                        <div className=\"row\" >\r\n                        {this.state.aparecer==true?\r\n\r\n                        this.state.listaSkills.map(skillAtual => (\r\n                                                <div className=\"col-lg-4\" style={{ width: '100%' }}>\r\n                                                    <fieldset className=\"form-group checkboxes\">\r\n                                                        <div className=\"form-check\">\r\n                                                            <label className=\"form-check-label\">\r\n                                                                    <input  id={skillAtual.id} defaultChecked={this.verificarCheckSkills(skillAtual.id)} onChange={(e) => this.checkSkills(e)} className=\"form-check-input\" type=\"checkbox\" />\r\n                                                                    {skillAtual.skill}\r\n                                                            </label>\r\n                                                        </div>\r\n                                                    </fieldset>\r\n                                                </div>\r\n                                            ))\r\n                                            :false}\r\n                                        </div>\r\n\r\n                        <button onClick={this.atualizarSkills} type=\"button\" className=\"btn btn-primary btn-lg botao-tamanho\">Salvar</button>\r\n                       <br>\r\n                       </br>\r\n                        {this.state.mensagemSucesso ?\r\n                            <div>\r\n                                <div className=\"alert alert-dismissible alert-success\">\r\n                                    <button onClick={this.fecharModal} type=\"button\" className=\"close\" data-dismiss=\"alert\">×</button>\r\n                                    {this.state.mensagemSucesso}\r\n                                </div>\r\n                            </div>\r\n                            : false}\r\n                    </div>\r\n\r\n                    <div className=\"login-mobile sombra text-center \">\r\n                        <h5><label>Atualizar - Conhecimento e Skill</label></h5>\r\n                        \r\n                        <div className=\"row\">\r\n                            {this.state.aparecer==true?\r\n                                            this.state.listaSkills.map(skillAtual => (\r\n                                                <div className=\"col-lg-4\" style={{ width: '100%' }}>\r\n                                                    <fieldset className=\"form-group checkboxes\">\r\n                                                        <div className=\"form-check\">\r\n                                                            <label className=\"form-check-label\">\r\n                                                                    <input defaultChecked={this.verificarCheckSkills(skillAtual.id)} id={skillAtual.id} onChange={(e) => this.checkSkills(e)} className=\"form-check-input\" type=\"checkbox\" />\r\n                                                                    {skillAtual.skill}\r\n                                                            </label>\r\n                                                        </div>\r\n                                                    </fieldset>\r\n                                                </div>\r\n                                            ))\r\n                    :false }\r\n                                        </div>\r\n\r\n                        <button onClick={this.atualizarSkills} type=\"button\" className=\"btn btn-primary btn-lg botao-tamanho\">Salvar</button>\r\n<br></br>\r\n\r\n                        {this.state.mensagemSucesso ?\r\n                            <div>\r\n                                <div className=\"alert alert-dismissible alert-success\">\r\n                                    <button onClick={this.fecharModal} type=\"button\" className=\"close\" data-dismiss=\"alert\">×</button>\r\n                                    {this.state.mensagemSucesso}\r\n                                </div>\r\n                            </div>\r\n                            : false}\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\n\r\nAtualizarSkill.contextType = AuthContext;\r\n\r\nexport default AtualizarSkill;","C:\\temp\\react-rede\\src\\Views\\DeletarFuncionario.js",["209"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport NumberFormat from 'react-number-format'\r\n\r\nclass DeletarFuncionario extends React.Component {\r\n\r\n    state = {\r\n        nome: '',\r\n        data: '',\r\n        motivoDesligamento: '',\r\n        selecione: '',\r\n        mensagemSucesso: null,\r\n        mensagemErro: null,\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    handleNome = (e) => {\r\n\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            nome: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.nome)\r\n\r\n    }\r\n\r\n\r\n\r\n    handlemotivoDesligamento = (e) => {\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            motivoDesligamento: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.motivoDesligamento)\r\n    }\r\n\r\n\r\n\r\n    fecharModal = () => {\r\n        //fazer a modalzinha sumir\r\n        this.setState({\r\n            mensagemSucesso: null,\r\n            mensagemErro: null\r\n        })\r\n\r\n\r\n    }\r\n    deletarFuncionario = () => {\r\n        axios.delete(`https://java-rede-governanca-brasil.herokuapp.com/funcionarios/${this.state.cpf}`)\r\n            .then(response => {\r\n                this.setState({\r\n                    mensagemSucesso: \"Funcionario foi desligado do sistema Rede Governança Brasil!\"\r\n                })\r\n\r\n            }).catch(erro => {\r\n                this.setState({\r\n                    mensagemErro: erro.response.data.error,\r\n                })\r\n            })\r\n    }\r\n\r\n    handleCpf = (e) => {\r\n        this.setState({\r\n            cpf: e.target.value.replace(\".\", \"\").replace(\".\", \"\").replace(\".\", \"\").replace(\"-\", \"\"),\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n\r\n\r\n\r\n            <div className=\"col-lg-12 fundo-login\">\r\n                <div className=\"pendencia-desktop sombra campo-ao-lado text-center\"  style={{paddingLeft:'10%', paddingRight:'10%'}}>\r\n                    <legend>Desligar Funcionario</legend><p></p>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6\" >\r\n                            <div className=\"form-group\">\r\n                                <label>Nome funcionario</label>\r\n                                <input value={this.state.nome} onChange={(e) => { this.handleNome(e) }} type=\"text\" className=\"form-control\" placeholder=\"Nome\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-6\" >\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>CPF </label>\r\n                                <NumberFormat value={this.state.cpf} format=\"###.###.###-##\" value={this.state.cpf} onChange={(e) => { this.handleCpf(e) }} className=\"form-control\" placeholder=\"CPF\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-12\">\r\n                            <div className=\"form-group\">\r\n                                <label>Motivo</label>\r\n                                <textarea value={this.state.motivoDesligamento} onChange={(e) => { this.handlemotivoDesligamento(e) }} className=\"form-control\" rows={3} defaultValue={\"\"} /><p></p>\r\n                            </div>\r\n                            \r\n                        </div>\r\n\r\n                        \r\n                    </div>\r\n                            <button onClick={this.deletarFuncionario} type=\"button\" className=\"btn btn-primary btn-lg botao-tamanho\">Desligar Funcionario</button>\r\n                            <div>\r\n\r\n                                {this.state.mensagemErro ?\r\n                                    <div >\r\n                                        <br></br>\r\n                                        <div className=\"alert alert-dismissible alert-danger\" >\r\n                                            <button type=\"button\" onClick={this.handleCaixaDeErro} className=\"close\" data-dismiss=\"alert\">×</button>\r\n                                            <strong>Ops!</strong> {this.state.mensagemErro}\r\n                                        </div></div> : false}\r\n                                <br></br>\r\n\r\n                                {this.state.mensagemSucesso ?\r\n                                    <div className=\"alert alert-dismissible alert-success\">\r\n                                        <button onClick={this.fecharModal} type=\"button\" className=\"close\" data-dismiss=\"alert\">×</button>\r\n                                        {this.state.mensagemSucesso}\r\n                                    </div>\r\n\r\n                                    : false}\r\n                            </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default DeletarFuncionario;","C:\\temp\\react-rede\\src\\Views\\PromoverFuncionario.js",["210"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport NumberFormat from 'react-number-format'\r\n\r\nclass PromoverFuncionario extends React.Component {\r\n\r\n    state = {\r\n        nome: '',\r\n        data: '',\r\n        motivoDesligamento: '',\r\n        selecione: '',\r\n        mensagemSucesso: null,\r\n        mensagemErro: null,\r\n        listaFuncoes: [],\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.consultarFuncoes()\r\n    }\r\n\r\n    handleFuncao = (e) => {\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            funcao: e.target.value\r\n        }, () => {\r\n            this.setState({\r\n                valueFuncao: this.state.funcao\r\n            })\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.funcao)\r\n\r\n    }\r\n\r\n    consultarFuncoes = () => {\r\n        axios.get('https://java-rede-governanca-brasil.herokuapp.com/funcoes')\r\n            .then(response => {\r\n                this.setState({\r\n                    listaFuncoes: response.data\r\n                })\r\n\r\n            }).catch(erro => {\r\n\r\n            })\r\n    }\r\n    handleNome = (e) => {\r\n\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            nome: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.nome)\r\n\r\n    }\r\n\r\n\r\n\r\n    handlemotivoDesligamento = (e) => {\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            motivoDesligamento: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.motivoDesligamento)\r\n    }\r\n\r\n\r\n\r\n    fecharModal = () => {\r\n        //fazer a modalzinha sumir\r\n        this.setState({\r\n            mensagemSucesso: null,\r\n            mensagemErro: null\r\n        })\r\n\r\n\r\n    }\r\n    promoverFuncionario  = () => {\r\n        // axios.put(`https://java-rede-governanca-brasil.herokuapp.com/funcionarios/${this.state.cpf}`)\r\n        //     .then(response => {\r\n        //         this.setState({\r\n        //             mensagemSucesso: \"Funcionario foi desligado do sistema Rede Governança Brasil!\"\r\n        //         })\r\n\r\n        //     }).catch(erro => {\r\n        //         this.setState({\r\n        //             mensagemErro: erro.response.data.error,\r\n        //         })\r\n        //     })\r\n    }\r\n\r\n    handleCpf = (e) => {\r\n        this.setState({\r\n            cpf: e.target.value.replace(\".\", \"\").replace(\".\", \"\").replace(\".\", \"\").replace(\"-\", \"\"),\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n\r\n\r\n\r\n            <div className=\"col-lg-12 fundo-login\">\r\n                <div className=\"pendencia-desktop sombra campo-ao-lado text-center\"  style={{paddingLeft:'10%', paddingRight:'10%'}}>\r\n                    <legend>Promover Funcionario</legend><p></p>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6\" >\r\n                            <div className=\"form-group\">\r\n                                <label>Nome funcionario</label>\r\n                                <input value={this.state.nome} onChange={(e) => { this.handleNome(e) }} type=\"text\" className=\"form-control\" placeholder=\"Nome\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-6\" >\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>CPF </label>\r\n                                <NumberFormat value={this.state.cpf} format=\"###.###.###-##\" value={this.state.cpf} onChange={(e) => { this.handleCpf(e) }} className=\"form-control\" placeholder=\"CPF\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-12\">\r\n                            <div className=\"form-group\">\r\n                                <label>Motivo</label>\r\n                                <textarea value={this.state.motivoDesligamento} onChange={(e) => { this.handlemotivoDesligamento(e) }} className=\"form-control\" rows={3} defaultValue={\"\"} /><p></p>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className=\"col-lg-12\">\r\n                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"exampleSelect1\">Selecionar Função</label>\r\n                                            <select value={this.state.valueFuncao} onChange={(e) => { this.handleFuncao(e) }} className=\"form-control\" id=\"exampleSelect1\">\r\n\r\n                                                <option>Selecionar</option>\r\n                                                {this.state.listaFuncoes.map(funcaoAtual => (\r\n                                                    <option value={funcaoAtual.id}>{funcaoAtual.funcao}</option>\r\n\r\n                                                ))}\r\n\r\n                                            </select>\r\n                                        </div>\r\n                                        </div>\r\n                        \r\n                    </div>\r\n                            <button onClick={this.deletarFuncionario} type=\"button\" className=\"btn btn-primary btn-lg botao-tamanho\">Promover Funcionario</button>\r\n                            <div>\r\n\r\n                                {this.state.mensagemErro ?\r\n                                    <div >\r\n                                        <br></br>\r\n                                        <div className=\"alert alert-dismissible alert-danger\" >\r\n                                            <button type=\"button\" onClick={this.handleCaixaDeErro} className=\"close\" data-dismiss=\"alert\">×</button>\r\n                                            <strong>Ops!</strong> {this.state.mensagemErro}\r\n                                        </div></div> : false}\r\n                                <br></br>\r\n\r\n                                {this.state.mensagemSucesso ?\r\n                                    <div className=\"alert alert-dismissible alert-success\">\r\n                                        <button onClick={this.fecharModal} type=\"button\" className=\"close\" data-dismiss=\"alert\">×</button>\r\n                                        {this.state.mensagemSucesso}\r\n                                    </div>\r\n\r\n                                    : false}\r\n                            </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default PromoverFuncionario;","C:\\temp\\react-rede\\src\\Views\\HomeUsuario.js",["211","212","213","214","215"],"\r\nimport React from 'react';\r\n\r\nimport axios from 'axios';\r\nimport NumberFormat from 'react-number-format'\r\n// import qs from 'qs'\r\n// import { Redirect } from 'react-router';\r\nimport ImageUploader from 'react-images-upload';\r\nimport FotoUploader from '../Components/FotoUploader'\r\nclass HomeUsuario extends React.Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"col-lg-12 fundo-login\" style={{\r\n                paddingTop: '0%', paddingBottom: '0%',\r\n\r\n            }}>\r\n\r\n\r\n                <div className=\"row\"\r\n                    style={{\r\n                        paddingLeft: '2%', paddingRight: '5%', paddingTop: '1%', paddingBottom: '1%', height: '100%',\r\n                        // border: '8px solid yellow'\r\n                    }}\r\n                >\r\n\r\n                    <div className=\"col-lg-5 paginaLeft \" style={{\r\n                        // border: '8px solid yellow'\r\n                        paddingLeft: '2%', paddingRight: '5%',\r\n                    }}>\r\n                        <div>\r\n\r\n                            <h4 style={{\r\n                                textAlign: 'center', color: 'white', paddingTop: '100px',\r\n                                // border: '2px solid black'\r\n                            }}> Voce acredita no poder de transformação da Rede?</h4>\r\n\r\n\r\n                            <p style={{\r\n                                fontSize: '15px', color: 'white', paddingTop: '50px', paddingLeft: '25px', paddingRight: '25px'\r\n                                // border: '2px solid black'\r\n                            }}>\r\n\r\n                                O cadastro do usuário é feito pelo prórpio funcionário\r\n                                O cadastro é aprovado ou reprovado pelos administrdores do sistema\r\n                                Será possível anexar uma foto ao perfil e anexar currículo\r\n\r\n</p>\r\n                        </div>\r\n                       \r\n                    </div >\r\n\r\n\r\n\r\n                    <div className=\"col-lg-7 paginaRight sombra\"\r\n                        style={{\r\n                            // border: '2px solid red',\r\n                            marginTop: '5%'\r\n                        }}\r\n                    >\r\n\r\n                        {/* INICIO DO FORMULARIO */}\r\n\r\n                        <div style={{\r\n                        }}>\r\n\r\n                       \r\n\r\n\r\n                            <img src = \"https://static.wixstatic.com/media/5a9d77_08550cd696ee49b1bfd900747a560171~mv2.png/v1/fill/w_353,h_123,al_c,q_85,usm_0.66_1.00_0.01/6%20Logo%20Sigla.webp\"></img>\r\n\r\n                            <br></br>\r\n                            <br></br>\r\n\r\n\r\n                            <legend>Você faz parte da transformação Rede e Governança Brasil</legend>\r\n<br></br>\r\n                                <button type=\"button\" class=\"btn btn-info\" style={{width:'250px', marginBottom:'20px', marginRight:'10px'}}>Veja seu Comitê</button>\r\n                           \r\n                            <button type=\"button\" class=\"btn btn-success\" style={{width:'250px', marginBottom:'20px'}}> Encontre-se</button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default HomeUsuario;","C:\\temp\\react-rede\\src\\Views\\EditarFotoComite.js",[],"C:\\temp\\react-rede\\src\\Views\\EditarDadosPessoais.js",["216","217"],"import React from 'react'\r\nimport NumberFormat from 'react-number-format'\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../Main/ProvedorAutenticacao';\r\n\r\nclass EditarDadosPessoais extends React.Component {\r\n\r\n    state = {\r\n        nomeCompleto: '',\r\n        cpf: '',\r\n        data: '',\r\n        selecioneCidade: '',\r\n        selecioneEstado: '',\r\n        descriçao: ''\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.consultarFuncionario()\r\n    }\r\n\r\n\r\n\r\n    consultarFuncionario = () => {\r\n\r\n        axios.get(`https://java-rede-governanca-brasil.herokuapp.com/funcionarios/${this.context.user}`)\r\n            .then(response => {\r\n                this.setState({\r\n                    nome: response.data.nome,\r\n                    cpf: response.data.cpf,\r\n                    email: response.data.email,\r\n                    celular: response.data.celular,\r\n                    estado: response.data.regiao.estado,\r\n                    regiaoId: response.data.regiao.id,\r\n\r\n                    descricao: response.data.descricao,\r\n                    dataNascimento: response.data.dataNascimento,\r\n                    // dataIntegracao:  response.data.dataIntegracao,\r\n                }, () => {\r\n\r\n                    this.encontrarCidadesDoEstadoSemAtualizar(this.state.estado)\r\n                })\r\n\r\n            }).catch(erro => {\r\n                this.setState({\r\n                    mensagemErro: \"Erro ao carregar seus dados. Atualize a página!\"\r\n                })\r\n            })\r\n    }\r\n\r\n    botaoClicado = () => {\r\n        //enviar para o backend as variaveis coletadas\r\n        console.log(\"OS VALORES DIGITADOS FORAM\", this.state.inserir)\r\n    }\r\n\r\n    fecharModal = () => {\r\n        //fazer a modalzinha sumir\r\n        this.setState({\r\n            mensagemSucesso: null\r\n        })\r\n        //fazer o valor que esta no input sumir\r\n        this.setState({\r\n            inserir: ''\r\n        })\r\n\r\n    }\r\n    encontrarCidadesDoEstadoSemAtualizar = (estado) => {\r\n        axios.get(`https://java-rede-governanca-brasil.herokuapp.com/regioes/cidades/${estado}`, {\r\n        }).then(response => {\r\n            this.setState({\r\n                listaDeCidadesDoEstado: response.data\r\n            }, () => {\r\n\r\n                this.setState({\r\n                    mostrarCidade: true\r\n\r\n\r\n\r\n                })\r\n\r\n            })\r\n\r\n\r\n        }).catch(erroResposta => {\r\n            alert(\"ALGUM ERRO\")\r\n\r\n\r\n        })\r\n\r\n    }\r\n    encontrarCidadesDoEstado = (estado) => {\r\n        axios.get(`https://java-rede-governanca-brasil.herokuapp.com/regioes/cidades/${estado}`, {\r\n        }).then(response => {\r\n            this.setState({\r\n                listaDeCidadesDoEstado: response.data\r\n            }, () => {\r\n                this.setState({\r\n                    mostrarCidade: true\r\n                })\r\n            })\r\n\r\n\r\n        }).catch(erroResposta => {\r\n            alert(\"ALGUM ERRO\")\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    // cadastrar chamar a api\r\n\r\n    atualizarDadosPessoais = () => {\r\n        // console.log(\"chamando a api\", this.state.CNPJ)\r\n        axios.put('https://java-rede-governanca-brasil.herokuapp.com/funcionarios/atualizar-dados', {\r\n\r\n            nome: this.state.nome,\r\n            email: this.state.email,\r\n            celular: this.state.celular,\r\n            descricao: this.state.descricao,\r\n            cpf: this.context.user,\r\n            dataNascimento: this.state.dataNascimento,\r\n            dataIntegracao: this.state.dataIntegracao,\r\n            regiao: { id: this.state.regiaoId }\r\n\r\n        }).then(response => {\r\n            this.setState({\r\n                sucesso: true,\r\n                mensagemSucesso: \"Atualizado dados pessoais com sucesso!\"\r\n\r\n            })\r\n\r\n\r\n\r\n\r\n            localStorage.removeItem('cliente-nome');\r\n            localStorage.removeItem('cliente-id');\r\n            localStorage.removeItem('cliente-email');\r\n            localStorage.removeItem('cliente-celular');\r\n            localStorage.removeItem('cliente-senha');\r\n            localStorage.removeItem('cliente-senhaConfirm');\r\n            localStorage.removeItem('cliente-descricao');\r\n            localStorage.removeItem('cliente-cpf');\r\n            localStorage.removeItem('cliente-dataNascimento');\r\n            localStorage.removeItem('cliente-dataIntegracao');\r\n            localStorage.removeItem('cliente-hierarquia');\r\n            localStorage.removeItem('cliente-aprovado');\r\n            localStorage.removeItem('cliente-coordenador');\r\n            localStorage.removeItem('cliente-skill');\r\n            localStorage.removeItem('cliente-funcao');\r\n            localStorage.removeItem('cliente-regiao');\r\n            localStorage.removeItem('cliente-comite');\r\n\r\n\r\n\r\n        }).catch(erroResposta => {\r\n            console.log(\"estrutura de erro\", erroResposta.response.data.error)\r\n            this.setState({\r\n                mensagemErro: erroResposta.response.data.error\r\n            })\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n   \r\n\r\n    consultarFuncionariosAtuais = () => {\r\n        axios.get('https://java-rede-governanca-brasil.herokuapp.com/funcionarios')\r\n            .then(response => {\r\n                this.setState({\r\n                    listaFuncionarios: response.data\r\n                })\r\n                console.log(\"response foi:\", response.data)\r\n\r\n            }).catch(erro => {\r\n                alert(\" nao deu certo\", JSON.stringify(erro))\r\n\r\n            })\r\n    }\r\n\r\n    handleInserir = (e) => {\r\n        //fazer a modalzinha sumir\r\n        this.fecharModal()\r\n\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            inserir: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.inserir)\r\n\r\n    }\r\n\r\n\r\n    // handleId = (e) => {\r\n    //     //variaveis do tipo state para receber valor é daseguinte forma\r\n    //     this.setState({\r\n    //         id: e.target.value\r\n    //     })\r\n\r\n    //     //imprimir ou acessar valores do tipo state\r\n    //     console.log(this.state.id)\r\n\r\n    // }\r\n\r\n    handleEmail = (e) => {\r\n        this.limparMensagens()\r\n\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            email: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.email)\r\n\r\n    }\r\n\r\n    handleCelular = (e) => {\r\n        this.limparMensagens()\r\n\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            celular: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.celular)\r\n\r\n    }\r\n\r\n\r\n    handleDataNascimento = (e) => {\r\n        this.limparMensagens()\r\n\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            dataNascimento: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.dataNascimento)\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    handleSkill = (e) => {\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            skill: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.skill)\r\n\r\n    }\r\n\r\n    limparMensagens = () => {\r\n        if (this.state.mensagemErro != null || this.state.mensagemErro != false ||\r\n            this.state.mensagemSucesso != null || this.state.mensagemSucesso) {\r\n            this.setState({\r\n                mensagemErro: false,\r\n                mensagemSucesso: false\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    handleNome = (e) => {\r\n        this.limparMensagens()\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            nome: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.nome)\r\n\r\n    }\r\n\r\n\r\n\r\n    handleDataNascimento = (e) => {\r\n\r\n        this.limparMensagens()\r\n\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            dataNascimento: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.data)\r\n\r\n    }\r\n\r\n    // handleDataIntegracao = (e) => {\r\n    //     //variaveis do tipo state para receber valor é daseguinte forma\r\n    //     this.setState({\r\n    //         dataIntegracao: e.target.value\r\n    //     })\r\n\r\n    //     //imprimir ou acessar valores do tipo state\r\n    //     console.log(this.state.data)\r\n\r\n    // }\r\n\r\n\r\n\r\n    handleDescricao = (e) => {\r\n        this.limparMensagens()\r\n\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            descricao: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.descricao)\r\n\r\n    }\r\n\r\n    // handleDataIntegracao = (e) => {\r\n    //     this.limparMensagens()\r\n\r\n    //     console.log(\"eai\", this.state.e)\r\n    //     //variaveis do tipo state para receber valor é daseguinte forma\r\n    //     this.setState({\r\n    //         dataIntegracao: e.target.value\r\n    //     })\r\n\r\n    //     //imprimir ou acessar valores do tipo state\r\n    //     console.log(this.state.dataIntegracao)\r\n\r\n    // }\r\n    handleEstado = (e) => {\r\n        this.limparMensagens()\r\n\r\n        this.setState({\r\n            estado: e.target.value\r\n        }, () => {\r\n            this.setState({\r\n                valueEstado: this.state.estado\r\n            }, () => {\r\n                this.encontrarCidadesDoEstado(this.state.estado)\r\n            })\r\n        })\r\n    }\r\n    handleCidade = (e) => {\r\n        this.setState({\r\n\r\n            regiaoId: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"col-lg-12 fundo-login\">\r\n                    <div className=\"login-desktop sombra text-center \">\r\n                        <div style={{\r\n                        }}>\r\n\r\n                            <legend>Alteração Dados Pessoais</legend>\r\n\r\n\r\n\r\n\r\n                            <br></br>\r\n\r\n\r\n                            <div className=\"\" style={{\r\n                                paddingBottom: '1%',\r\n                                // border: '2px solid red'\r\n                            }}>\r\n                                <label htmlFor=\"exampleInputEmail1\">Nome Completo</label>\r\n                                <input value={this.state.nome} onChange={(e) => { this.handleNome(e) }} type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Nome Completo\" />\r\n                                <small id=\"emailHelp\" className=\"form-text text-muted\"></small>\r\n                            </div>\r\n\r\n                            <br></br>\r\n\r\n                            {/* ROW DO CPF E CELULAR */}\r\n\r\n                            <div className=\"row \"\r\n                                style={{\r\n                                    marginLeft: '0.15%', marginRight: '0.15%', paddingBottom: '2%',\r\n                                    textAlign: 'center',\r\n                                    // border: '2px solid yellow'\r\n                                }}\r\n                            >\r\n\r\n\r\n                                {/* DIV DO CPF */}\r\n\r\n                                <div className=\"col-lg-7\" style={{\r\n                                    paddingRight: '1%', paddingLeft: '0px',\r\n                                    // border: '2px solid yellow'\r\n                                }}>\r\n                                    <label htmlFor=\"exampleInputCNPJ1\">CPF</label>\r\n                                    <NumberFormat\r\n                                        //         style={{\r\n                                        //         marginLeft: '0%', marginRight: '1%',\r\n                                        //     // textAlign: 'center', \r\n                                        //     border: '2px solid yellow'\r\n                                        // }} \r\n                                        value={this.state.cpf} disabled={true} format=\"###.###.###-##\" type=\"text\" className=\"form-control\" id=\"CNPJClienteId\" aria-describedby=\"CNPJHelp\" placeholder=\"CPF\" />\r\n                                </div>\r\n\r\n\r\n                                {/* DIV DO CELULAR */}\r\n\r\n                                <br></br>\r\n                                <div className=\"col-lg-5\" style={{\r\n                                    paddingRight: '0%', paddingLeft: '0px',\r\n                                    // border: '2px solid yellow'\r\n                                }} >\r\n                                    <label htmlFor=\"exampleInputCelular1\">Celular</label>\r\n                                    <NumberFormat format=\"(##) #####-####\" onChange={(e) => { this.handleCelular(e) }} type=\"tel\" className=\"form-control\" value={this.state.celular} placeholder=\"Celular\"\r\n\r\n                                    />\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n                            {/* ROW DA DATA DE NASCIMENTO E EMAIL */}\r\n\r\n                            <br></br>\r\n                            <div className=\"row\" style={{\r\n                                marginLeft: '0.15%', marginRight: '0.15%',\r\n                                paddingRight: '0px', paddingLeft: '0px', paddingBottom: '2%',\r\n                                // border: '2px solid blue'\r\n                            }}>\r\n\r\n                                {/* DIV DA DATA DE NASCIMENTO */}\r\n\r\n                                <div className=\"col-lg-5\" style={{\r\n                                    paddingRight: '1%', paddingLeft: '0px',\r\n                                    // border: '2px solid yellow'\r\n                                }}>\r\n                                    <label htmlFor=\"exampleInputEmail1\">Data de Nascimento</label>\r\n                                    <input value={this.state.dataNascimento} onChange={(e) => { this.handleDataNascimento(e) }} type=\"date\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"data de Nascimento\" />\r\n                                    <small id=\"emailHelp\" className=\"form-text text-muted\"></small>\r\n\r\n                                </div>\r\n\r\n\r\n                                {/* DIV DO EMAIL */}\r\n\r\n                                <br></br>\r\n                                <div className=\"col-lg-7\" style={{\r\n                                    paddingRight: '0%', paddingLeft: '0px',\r\n                                    // border: '2px solid yellow'\r\n                                }}>\r\n                                    <label htmlFor=\"exampleInputEmail1\">E-mail</label>\r\n                                    <input value={this.state.email} onChange={(e) => { this.handleEmail(e) }} type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"E-mail\" />\r\n                                    <small id=\"emailHelp\" className=\"form-text text-muted\"></small>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n\r\n                            <br></br>\r\n                            <div className=\"row \"\r\n                                style={{\r\n                                    marginLeft: '0%', marginRight: '0%', paddingBottom: '2%',\r\n                                    // border: '2px solid black'\r\n                                }}\r\n                            >\r\n                                <div className=\"col-lg-5\" style={{\r\n                                    paddingRight: '0px', paddingLeft: '5px',\r\n                                    // border: '2px solid yellow'\r\n\r\n\r\n                                    // border: '2px solid green'\r\n                                }}>\r\n                                    <label htmlFor=\"exampleSelect2\">Selecione o Estado</label>\r\n                                    <select value={this.state.estado} onChange={(e) => { this.handleEstado(e) }} className=\"form-control\" id=\"exampleSelect2\">\r\n                                        <option>Selecionar</option>\r\n                                        <option value=\"RO\">RO</option>\r\n                                        <option value=\"AC\">AC</option>\r\n                                        <option value=\"AM\">AM</option>\r\n                                        <option value=\"RR\">RR</option>\r\n                                        <option value=\"PA\">PA</option>\r\n                                        <option value=\"AP\">AP</option>\r\n                                        <option value=\"TO\">TO</option>\r\n                                        <option value=\"MA\">MA</option>\r\n                                        <option value=\"PI\">PI</option>\r\n                                        <option value=\"CE\">CE</option>\r\n                                        <option value=\"RN\">RN</option>\r\n                                        <option value=\"PB\">PB</option>\r\n                                        <option value=\"PE\">PE</option>\r\n                                        <option value=\"AL\">AL</option>\r\n                                        <option value=\"SE\">SE</option>\r\n                                        <option value=\"BA\">BA</option>\r\n                                        <option value=\"MG\">MG</option>\r\n                                        <option value=\"ES\">ES</option>\r\n                                        <option value=\"RJ\">RJ</option>\r\n                                        <option value=\"SP\">SP</option>\r\n                                        <option value=\"PR\">PR</option>\r\n                                        <option value=\"SC\">SC</option>\r\n                                        <option value=\"RS\">RS</option>\r\n                                        <option value=\"MS\">MS</option>\r\n                                        <option value=\"MT\">MT</option>\r\n                                        <option value=\"GO\">GO</option>\r\n                                        <option value=\"DF\">DF</option>\r\n\r\n                                    </select>\r\n                                </div>\r\n                                {this.state.mostrarCidade ?\r\n\r\n                                    <div style={{\r\n\r\n                                    }} className=\"col-lg-7 \" style={{\r\n                                        paddingRight: '5px', paddingLeft: '0px',\r\n                                        // border: '2px solid yellow'\r\n                                    }}\r\n                                    >\r\n                                        <label htmlFor=\"exampleSelect1\">Selecione a Cidade</label>\r\n                                        <select value={this.state.regiaoId} onChange={(e) => this.handleCidade(e)} style={{\r\n                                            // border: '2px solid blue'\r\n                                        }} className=\"form-control\" id=\"exampleSelect1\">\r\n                                            <option>Selecionar</option>\r\n                                            {this.state.listaDeCidadesDoEstado.map(cidade => (\r\n                                                <option value={cidade.id}>{cidade.cidade}</option>\r\n                                            ))}\r\n\r\n                                        </select>\r\n                                    </div>\r\n                                    : false}\r\n                                <br></br>\r\n\r\n\r\n                            </div>\r\n                            <br></br>\r\n                            <div className=\"\" style={{\r\n                                marginLeft: '0%', marginRight: '0%', paddingBottom: '2%',\r\n                                // border: '2px solid black'\r\n                            }}>\r\n                                <label htmlFor=\"exampleTextarea\">Descrição</label>\r\n                                <textarea className=\"form-control\" value={this.state.descricao} id=\"exampleTextarea\" onChange={(e) => { this.handleDescricao(e) }} rows={3} placeholder=\"Descrição\" />\r\n                            </div>\r\n\r\n                            <br></br>\r\n                            {/* <div className=\"\">\r\n                                    <label htmlFor=\"exampleInputEmail1\">Data de Integração</label>\r\n                                    <input value={this.state.dataIntegracao} onChange={(e) => { this.handleDataIntegracao(e) }} type=\"date\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"DATA DE INTEGRAÇÃO\" />\r\n                                    <small id=\"emailHelp\" className=\"form-text text-muted\"></small>\r\n\r\n                                </div>\r\n                                <br></br> */}\r\n\r\n                            <div style={{\r\n\r\n\r\n                            }}>\r\n                                <br></br>\r\n\r\n                                <button type=\"button\" onClick={this.atualizarDadosPessoais} className=\"btn btn-primary btn-lg botao-tamanho\">Alterar Dados</button>\r\n\r\n                                {this.state.mensagemErro ?\r\n                                    <div style={{ paddingLeft: '12%', paddingRight: '12%' }}>\r\n                                        <div className=\"alert alert-dismissible alert-danger\" >\r\n                                            <button type=\"button\" onClick={this.handleCaixaDeErro} className=\"close\" data-dismiss=\"alert\">×</button>\r\n                                            <strong>Ops!</strong> {this.state.mensagemErro}\r\n                                        </div></div> : false}\r\n\r\n                                <br></br>\r\n                                {this.state.mensagemSucesso ?\r\n                                    <div className=\"alert alert-dismissible alert-success\">\r\n                                        <button onClick={this.fecharModal} type=\"button\" className=\"close\" data-dismiss=\"alert\">×</button>\r\n                                        {this.state.mensagemSucesso}\r\n                                    </div>\r\n\r\n                                    : false}\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nEditarDadosPessoais.contextType = AuthContext;\r\n\r\nexport default EditarDadosPessoais;\r\n\r\n","C:\\temp\\react-rede\\src\\Views\\PerfilColaborador.js",["218","219","220","221"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport user from '../assets/user.svg';\r\nimport Pagination from '../Components/Pagination';\r\nimport { AuthContext } from '../Main/ProvedorAutenticacao';\r\nclass PerfilColaborador extends React.Component {\r\n\r\n  state = {\r\n    funcionario: { skill: [], regiao: {} }, comiteid: '', lideres: null, time: [], listapendencias: [],\r\n    //variáveis referentes a paginação\r\n    paginaMinima: 1,\r\n    currentPage: 1,\r\n    postsPerPage: 5,\r\n    indexOfFirstPost: 1,\r\n    currentPosts: [],\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.consultarFuncionario()\r\n    this.consultarLideres()\r\n    this.consultarTime()\r\n    this.listarPendeciasDoFuncionario()\r\n\r\n  }\r\n  getCurrentPages = (pageNumber) => {\r\n\r\n    this.setState({\r\n      currentPage: pageNumber,\r\n      indexOfLastPost: pageNumber * this.state.postsPerPage,\r\n\r\n      indexOfFirstPost: (pageNumber * this.state.postsPerPage) - this.state.postsPerPage,\r\n    }, () => {\r\n\r\n\r\n\r\n      this.setState({\r\n        currentPosts: this.state.listapendencias.slice(this.state.indexOfFirstPost, this.state.indexOfLastPost)\r\n\r\n      }, () => {\r\n\r\n\r\n      })\r\n\r\n    })\r\n  }\r\n  paginateScroll = (e) => {\r\n    if (this.state.paginaMinima + e > 0 &&\r\n      (this.state.paginaMinima + e) <= Math.ceil((this.state.listapendencias.length / this.state.postsPerPage))) {\r\n      this.setState({\r\n        paginaMinima: this.state.paginaMinima + e\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  listarPendeciasDoFuncionario = () => {\r\n    axios.post('https://java-rede-governanca-brasil.herokuapp.com/pendencias/funcionario', {\r\n\r\n      cpf: this.context.user,\r\n\r\n    }).then(response => {\r\n\r\n      this.setState({\r\n\r\n        listapendencias: response.data\r\n      }, () => {\r\n        this.getCurrentPages(1)\r\n      })\r\n      console.log(\"lista pendencias é\", this.state.listapendencias)\r\n\r\n    }).catch(erroResposta => {\r\n\r\n\r\n    })\r\n\r\n\r\n  }\r\n\r\n  consultarLideres = () => {\r\n    const id = this.props.match.params.id;\r\n    axios.get(`https://java-rede-governanca-brasil.herokuapp.com/hierarquias/encontrar-lider/${id}`)\r\n      .then(response => {\r\n        this.setState({\r\n          lideres: response.data\r\n        })\r\n\r\n\r\n      }).catch(erro => {\r\n        // alert(\"ERRO AO CONSULTAR LÍDERES\")\r\n\r\n      })\r\n  }\r\n  consultarTime = () => {\r\n    const id = this.props.match.params.id;\r\n    axios.get(`https://java-rede-governanca-brasil.herokuapp.com/hierarquias/encontrar-time/${id}`)\r\n      .then(response => {\r\n\r\n        console.log(\"entrou no menor que zero \")\r\n        this.setState({\r\n          time: response.data\r\n        })\r\n\r\n\r\n\r\n      }).catch(erro => {\r\n        //alert(\"ERRO AO CONSULTAR time\")\r\n\r\n      })\r\n  }\r\n\r\n\r\n  consultarFuncionario = () => {\r\n    const id = this.props.match.params.id;\r\n    axios.get(`https://java-rede-governanca-brasil.herokuapp.com/funcionarios/${id}`)\r\n      .then(response => {\r\n        this.setState({\r\n          funcionario: response.data\r\n        }, () => {\r\n          this.consultarComite(this.state.funcionario.comite.id)\r\n          this.consultarFuncao(this.state.funcionario.funcao.id)\r\n        })\r\n\r\n\r\n      }).catch(erro => {\r\n        alert(\" nao deu certo\")\r\n\r\n      })\r\n  }\r\n  consultarComite = (id) => {\r\n\r\n    axios.get(`https://java-rede-governanca-brasil.herokuapp.com/comites/${id}`)\r\n      .then(response => {\r\n        console.log(\"resposen\", response)\r\n        this.setState({\r\n          comite: response.data.comite,\r\n          comiteid: response.data.id\r\n        })\r\n\r\n\r\n      }).catch(erro => {\r\n        alert(\" nao deu certo\")\r\n\r\n      })\r\n  }\r\n  consultarFuncao = (id) => {\r\n\r\n    axios.get(`https://java-rede-governanca-brasil.herokuapp.com/funcoes/${id}`)\r\n      .then(response => {\r\n        this.setState({\r\n          funcao: response.data.funcao\r\n        })\r\n\r\n\r\n      }).catch(erro => {\r\n        alert(\" nao deu certo\")\r\n\r\n      })\r\n  }\r\n\r\n  redirect = () => {\r\n\r\n  }\r\n  render() {\r\n    return (\r\n\r\n\r\n      <div className=\"col-lg-12 fundo-login-perfil\" style={{\r\n        paddingTop: '5,7%', paddingBottom: '5.5%',\r\n\r\n      }}>\r\n\r\n        <div className=\"perfil-desktop sombra \" style={{\r\n          //  border: '7px solid green'\r\n        }}>\r\n\r\n\r\n          <div className=\"row\" style={{\r\n            //  border: '2px solid red',\r\n            paddingTop: '9%', paddingBottom: '9%'\r\n          }}\r\n\r\n          >\r\n            {/* DIV GRANDE DA ESQUERDA */}\r\n            <div className=\"col-lg-4 \"\r\n              style={{\r\n                borderRight: '1px solid #c9c9c9',\r\n\r\n\r\n                // border: '2px solid yellow',\r\n\r\n              }}\r\n            >\r\n              {/* ROW DAS DUAS PRIMEIRAS DIVS DA ESQUERDA */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n              {/* IMAGEM */}\r\n              {this.state.funcionario.urlFoto ?\r\n                <div className=\"fundo-centralizado\">\r\n                  {this.state.funcionario.urlFoto ?\r\n\r\n                    <img className=\"sombra\" src={this.state.funcionario.urlFoto == \"vazio\" ? user : this.state.funcionario.urlFoto} style={{\r\n\r\n                      borderRadius: '100%',\r\n\r\n                      width: '200px', height: '200px',\r\n\r\n                      //  border: '2px solid red'\r\n                    }} />\r\n                    : false}\r\n\r\n                  {/* <img src=\"https://e7.pngegg.com/pngimages/867/694/png-clipart-user-profile-default-computer-icons-network-video-recorder-avatar-cartoon-maker-blue-text.png\" style={{ height: '120px', width: '120px', borderRadius: '80px', backgroundColor: 'blue' }} /> */}\r\n\r\n\r\n                </div>\r\n                : false}\r\n\r\n              <div className=\"\" style={{\r\n                paddingTop: '10%', paddingLeft: '20%', paddingRight: '20%',\r\n                // height: '100%',\r\n                // border: '2px solid black'\r\n              }}>\r\n\r\n                <div className=\"fundo-centralizado\">\r\n\r\n                  <br></br><br></br><br></br><br></br> <h5 >{this.state.funcionario.nome}</h5>\r\n                </div>\r\n                <p> {this.state.funcao}<br></br>\r\n\r\n                  <a href={`http://localhost:3000/#/perfil-comite/${this.state.comiteid}`}>{this.state.comite}</a><br></br>\r\n                  {this.state.funcionario.regiao.cidade}/{this.state.funcionario.regiao.estado}</p>\r\n\r\n                <br></br><br></br> <h5>Líder</h5>\r\n                {this.state.lideres ?\r\n\r\n                  <div>\r\n\r\n                    <a onClick={this.redirect} href={`http://localhost:3000/#/perfil-colaborador/${this.state.lideres.cpf}`}>{this.state.lideres.nome}</a><br></br>\r\n                  </div>\r\n\r\n                  : false}\r\n\r\n\r\n\r\n                {this.state.funcionario.coordenador == 0 ?\r\n                  //this.state.time.length >0?\r\n                  <div>\r\n                    <br></br><br></br> <h5>Time</h5>\r\n\r\n                    {this.state.time.map(atual => (\r\n                      <div>\r\n                        <a href={`http://localhost:3000/#/perfil-colaborador/${atual.cpf}`}>{atual.nome}</a><br></br>\r\n\r\n                      </div>\r\n                    ))}\r\n\r\n                  </div>\r\n                  //:false\r\n                  : false}\r\n\r\n              </div>\r\n\r\n\r\n\r\n\r\n\r\n            </div >\r\n\r\n\r\n\r\n            {/* DIV GRANDE DA DIREITA */}\r\n            <div className=\"col-lg-8\"\r\n              style={{\r\n                // border: '2px solid red',\r\n\r\n\r\n              }}\r\n            >\r\n\r\n\r\n\r\n\r\n            \r\n              {/* <button type=\"button\" className=\"btn btn-success\"> <a className=\"dropdown-item\" href=\"#/editar-dados-pessoais\">Editar Dados Pessoais</a></button> */}\r\n\r\n\r\n\r\n              <div style={{\r\n                // border: '2px solid blue',\r\n                paddingRight: '15%', paddingLeft: '15%', paddingBottom: '10%'\r\n              }}>\r\n\r\n                <div style={{ height: '190px' }}>\r\n                  <h2 style={{ color: '#0d2354' }} style={{ textAlign: 'right' }}> {this.state.funcionario.nome},</h2><br></br>\r\n\r\n                  <p style={{ textAlign: 'right' }}>\r\n                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-telephone\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <path fill-rule=\"evenodd\" d=\"M3.654 1.328a.678.678 0 0 0-1.015-.063L1.605 2.3c-.483.484-.661 1.169-.45 1.77a17.568 17.568 0 0 0 4.168 6.608 17.569 17.569 0 0 0 6.608 4.168c.601.211 1.286.033 1.77-.45l1.034-1.034a.678.678 0 0 0-.063-1.015l-2.307-1.794a.678.678 0 0 0-.58-.122l-2.19.547a1.745 1.745 0 0 1-1.657-.459L5.482 8.062a1.745 1.745 0 0 1-.46-1.657l.548-2.19a.678.678 0 0 0-.122-.58L3.654 1.328zM1.884.511a1.745 1.745 0 0 1 2.612.163L6.29 2.98c.329.423.445.974.315 1.494l-.547 2.19a.678.678 0 0 0 .178.643l2.457 2.457a.678.678 0 0 0 .644.178l2.189-.547a1.745 1.745 0 0 1 1.494.315l2.306 1.794c.829.645.905 1.87.163 2.611l-1.034 1.034c-.74.74-1.846 1.065-2.877.702a18.634 18.634 0 0 1-7.01-4.42 18.634 18.634 0 0 1-4.42-7.009c-.362-1.03-.037-2.137.703-2.877L1.885.511z\" />\r\n                    </svg> Telefone: {this.state.funcionario.celular}, <br></br>\r\n                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-envelope\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <path fill-rule=\"evenodd\" d=\"M0 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V4zm2-1a1 1 0 0 0-1 1v.217l7 4.2 7-4.2V4a1 1 0 0 0-1-1H2zm13 2.383l-4.758 2.855L15 11.114v-5.73zm-.034 6.878L9.271 8.82 8 9.583 6.728 8.82l-5.694 3.44A1 1 0 0 0 2 13h12a1 1 0 0 0 .966-.739zM1 11.114l4.758-2.876L1 5.383v5.73z\" />\r\n                    </svg> Email: {this.state.funcionario.email}, <br></br>\r\n                    {this.state.funcionario.regiao.cidade} - {this.state.funcionario.regiao.estado}\r\n                    <br></br>\r\n                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-cloud-download\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <path fill-rule=\"evenodd\" d=\"M4.406 1.342A5.53 5.53 0 0 1 8 0c2.69 0 4.923 2 5.166 4.579C14.758 4.804 16 6.137 16 7.773 16 9.569 14.502 11 12.687 11H10a.5.5 0 0 1 0-1h2.688C13.979 10 15 8.988 15 7.773c0-1.216-1.02-2.228-2.313-2.228h-.5v-.5C12.188 2.825 10.328 1 8 1a4.53 4.53 0 0 0-2.941 1.1c-.757.652-1.153 1.438-1.153 2.055v.448l-.445.049C2.064 4.805 1 5.952 1 7.318 1 8.785 2.23 10 3.781 10H6a.5.5 0 0 1 0 1H3.781C1.708 11 0 9.366 0 7.318c0-1.763 1.266-3.223 2.942-3.593.143-.863.698-1.723 1.464-2.383z\" />\r\n                      <path fill-rule=\"evenodd\" d=\"M7.646 15.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 14.293V5.5a.5.5 0 0 0-1 0v8.793l-2.146-2.147a.5.5 0 0 0-.708.708l3 3z\" />\r\n                    </svg>   <a href=\"http://localhost:3000/#/perfil-colaborador\">Baixar Currículo</a><br></br>\r\n                  </p>\r\n                </div>\r\n                <br></br><br></br> <h5> <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-person\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path fill-rule=\"evenodd\" d=\"M10 5a2 2 0 1 1-4 0 2 2 0 0 1 4 0zM8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm6 5c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z\" />\r\n                </svg> Descrição</h5>\r\n                <p style={{\r\n                  color: 'grey',\r\n                }}> {this.state.funcionario.descricao}     </p><br></br>\r\n\r\n                <br></br><hr></hr><br></br> <h5><svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-person-badge\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path fill-rule=\"evenodd\" d=\"M2 2.5A2.5 2.5 0 0 1 4.5 0h7A2.5 2.5 0 0 1 14 2.5V14a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2.5zM4.5 1A1.5 1.5 0 0 0 3 2.5v10.795a4.2 4.2 0 0 1 .776-.492C4.608 12.387 5.937 12 8 12s3.392.387 4.224.803a4.2 4.2 0 0 1 .776.492V2.5A1.5 1.5 0 0 0 11.5 1h-7z\" />\r\n                  <path fill-rule=\"evenodd\" d=\"M8 11a3 3 0 1 0 0-6 3 3 0 0 0 0 6zM6 2.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5z\" />\r\n                </svg> Skills</h5>\r\n\r\n                <ul>\r\n                  <div className=\"row\">\r\n                    {this.state.funcionario.skill.map(skillAtual => (\r\n                      <div className=\"col-lg-4\" style={{ width: '110%' }}>\r\n                        <li>{skillAtual.skill}</li>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </ul>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                <br></br><hr></hr><br></br> <h5><svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-list-check\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path fill-rule=\"evenodd\" d=\"M5 11.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zM3.854 2.146a.5.5 0 0 1 0 .708l-1.5 1.5a.5.5 0 0 1-.708 0l-.5-.5a.5.5 0 1 1 .708-.708L2 3.293l1.146-1.147a.5.5 0 0 1 .708 0zm0 4a.5.5 0 0 1 0 .708l-1.5 1.5a.5.5 0 0 1-.708 0l-.5-.5a.5.5 0 1 1 .708-.708L2 7.293l1.146-1.147a.5.5 0 0 1 .708 0zm0 4a.5.5 0 0 1 0 .708l-1.5 1.5a.5.5 0 0 1-.708 0l-.5-.5a.5.5 0 0 1 .708-.708l.146.147 1.146-1.147a.5.5 0 0 1 .708 0z\" />\r\n                </svg> Pendências</h5><br></br>\r\n\r\n                <div className=\"scroll-box\" style={{ maxheight: '500px' }}>\r\n\r\n\r\n                  <div style={{\r\n                    marginTop: '0%',\r\n\r\n\r\n                  }}>\r\n                    <table class=\"table table-hover\">\r\n                      <thead>\r\n                        <tr >\r\n                          <th scope=\"col\">Titulo</th>\r\n                          <th scope=\"col\">Descrição</th>\r\n                          <th scope=\"col\">Data de Criação</th>\r\n                          <th scope=\"col\">Data Limite</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {this.state.currentPosts.map(blocoAtual => (\r\n\r\n                          <tr>\r\n\r\n                            <td>{blocoAtual.titulo}</td>\r\n                            <td>{blocoAtual.descricao}</td>\r\n                            <td>{blocoAtual.dataCriacao}</td>\r\n                            <td>{blocoAtual.dataLimite}</td>\r\n                            <td>{blocoAtual.dataIntegracao}</td>\r\n\r\n                            {/* <td>{blocoAtual.aprovado == 10 ? \"Coordenador\" : \"Voluntário\"}</td> */}\r\n\r\n\r\n                          </tr>\r\n\r\n                        ))}\r\n\r\n\r\n                      </tbody>\r\n                    </table>\r\n                    <div className=\"col-lg-12 fundo-centralizado\">\r\n\r\n                      <div >\r\n                        <Pagination quantidadeShow={3} paginaMinima={this.state.paginaMinima} postsPerPage={this.state.postsPerPage}\r\n                          totalPosts={this.state.listapendencias.length}\r\n                          paginate={this.getCurrentPages} currentPage={this.state.currentPage}\r\n                          paginateScroll={this.paginateScroll}></Pagination>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n\r\n    );\r\n\r\n  }\r\n}\r\nPerfilColaborador.contextType = AuthContext;\r\n\r\nexport default PerfilColaborador;\r\n\r\n","C:\\temp\\react-rede\\src\\Views\\CriarComite.js",["222"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport FotoUploaderComite from '../Components/FotoUploaderComite'\r\n\r\n\r\n\r\nclass CriarComite extends React.Component {\r\n\r\n    state = {\r\n        nome: '',\r\n        data: '',\r\n        descricao: '',\r\n        selecione: '',\r\n        mensagemSucesso: null,\r\n        mensagemErro: null,\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n\r\n    }\r\n\r\n    \r\n    handleDescricao = (e) => {\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            descricao: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.descricao)\r\n\r\n    }\r\n\r\n    handleNome = (e) => {\r\n\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            nome: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.nome)\r\n\r\n    }\r\n\r\n    handleData = (e) => {\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            data: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.data)\r\n\r\n    }\r\n\r\n    handleDescricao = (e) => {\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            descricao: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.descricao)\r\n    }\r\n\r\n    handleSelecione = (e) => {\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            selecione: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.selecione)\r\n    }\r\n\r\n    handleEstado = (e) => {\r\n        this.setState({\r\n            estado: e.target.value\r\n        }, () => {\r\n            this.setState({\r\n                valueEstado: this.state.estado\r\n            }, () => {\r\n                this.encontrarCidadesDoEstado(this.state.estado)\r\n            })\r\n        })\r\n    }\r\n    handleCidade = (e) => {\r\n        this.setState({\r\n            regiaoId: e.target.value\r\n        })\r\n    }\r\n\r\n    botaoClicado = () => {\r\n        //enviar para o backend as variaveis coletadas\r\n        console.log(\"OS VALORES DIGITADOS FORAM\", this.state.nome, this.state.data, this.state.descricao, this.state.selecione)\r\n    }\r\n\r\n    fecharModal = () => {\r\n        //fazer a modalzinha sumir\r\n        this.setState({\r\n            mensagemSucesso: null\r\n        })\r\n        //fazer o valor que esta no input sumir\r\n        this.setState({\r\n            nome: '',\r\n            data: '',\r\n            descricao: '',\r\n            selecione: ''\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    criarComite = () => {\r\n        axios.post('https://java-rede-governanca-brasil.herokuapp.com/comites', {\r\n\r\n            comite: this.state.nome,\r\n            descricao: this.state.descricao,\r\n            urlFoto:\"vazio\",\r\n        \r\n            regiao: {\r\n                id: this.state.regiaoId\r\n            }\r\n        })\r\n            .then(response => {\r\n                //atribuir valor a uma variavel \r\n                this.setState({\r\n                    mensagemSucesso: \"Cadastrado com sucesso!\"\r\n                })\r\n            \r\n\r\n\r\n            }).catch(erro => {\r\n                //atribuir valor a uma variavel \r\n                this.setState({\r\n                    mensagemErro: erro.response.data.error\r\n                })\r\n\r\n            })\r\n    }\r\n\r\n    encontrarCidadesDoEstado = (estado) => {\r\n        axios.get(`https://java-rede-governanca-brasil.herokuapp.com/regioes/cidades/${estado}`, {\r\n        }).then(response => {\r\n            this.setState({\r\n                listaDeCidadesDoEstado: response.data\r\n            }, () => {\r\n                this.setState({\r\n                    mostrarCidade: true\r\n                })\r\n            })\r\n\r\n\r\n        }).catch(erroResposta => {\r\n            alert(\"ALGUM ERRO\")\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n\r\n\r\n\r\n            <div className=\"col-lg-12 fundo-login\">\r\n                <div className=\"pendencia-desktop sombra campo-ao-lado text-center\">\r\n                    <legend>Criar Comitê</legend><p></p>\r\n\r\n                    <div className=\"row\" style={{marginLeft: \"10%\", marginRight: \"10%\" }}>\r\n                        <div className=\"col-lg-6\">\r\n                            <div className=\"form-group\">\r\n\r\n                                <label>Nome</label>\r\n                                <input value={this.state.nome} onChange={(e) => { this.handleNome(e) }} type=\"text\" className=\"form-control\" placeholder=\"Nome\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>Data</label>\r\n                                <input value={this.state.data} onChange={(e) => { this.handleData(e) }} type=\"date\" className=\"form-control\" placeholder=\"Data\" />\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-12\">\r\n                        <div className=\"\" style={{\r\n                                    marginLeft: '0%', marginRight: '0%', paddingBottom: '2%',\r\n                                    // border: '2px solid black'\r\n                                }}>\r\n                                    <label htmlFor=\"exampleTextarea\">Descrição</label>\r\n                                    <textarea className=\"form-control\" value={this.state.descricao} id=\"exampleTextarea\" onChange={(e) => { this.handleDescricao(e) }} rows={3} placeholder=\"Descrição\" />\r\n                                </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-6\" style={{\r\n\r\n                            // border: '2px solid yellow'\r\n\r\n\r\n                            // border: '2px solid green'\r\n                        }}>\r\n                            <label htmlFor=\"exampleSelect2\">Selecione o Estado</label>\r\n                            <select onChange={(e) => { this.handleEstado(e) }} className=\"form-control\" id=\"exampleSelect2\">\r\n                                <option>Selecionar</option>\r\n                                <option value=\"RO\">RO</option>\r\n                                <option value=\"AC\">AC</option>\r\n                                <option value=\"AM\">AM</option>\r\n                                <option value=\"RR\">RR</option>\r\n                                <option value=\"PA\">PA</option>\r\n                                <option value=\"AP\">AP</option>\r\n                                <option value=\"TO\">TO</option>\r\n                                <option value=\"MA\">MA</option>\r\n                                <option value=\"PI\">PI</option>\r\n                                <option value=\"CE\">CE</option>\r\n                                <option value=\"RN\">RN</option>\r\n                                <option value=\"PB\">PB</option>\r\n                                <option value=\"PE\">PE</option>\r\n                                <option value=\"AL\">AL</option>\r\n                                <option value=\"SE\">SE</option>\r\n                                <option value=\"BA\">BA</option>\r\n                                <option value=\"MG\">MG</option>\r\n                                <option value=\"ES\">ES</option>\r\n                                <option value=\"RJ\">RJ</option>\r\n                                <option value=\"SP\">SP</option>\r\n                                <option value=\"PR\">PR</option>\r\n                                <option value=\"SC\">SC</option>\r\n                                <option value=\"RS\">RS</option>\r\n                                <option value=\"MS\">MS</option>\r\n                                <option value=\"MT\">MT</option>\r\n                                <option value=\"GO\">GO</option>\r\n                                <option value=\"DF\">DF</option>\r\n\r\n                            </select>\r\n                        </div>\r\n                        {this.state.mostrarCidade ?\r\n\r\n                            <div style={{\r\n\r\n                            }} className=\"col-lg-6\"\r\n                            >\r\n                                <label value={this.state.cidade} htmlFor=\"exampleSelect1\">Selecione a Cidade</label>\r\n                                <select onChange={(e) => this.handleCidade(e)} style={{\r\n                                    // border: '2px solid blue'\r\n                                }} className=\"form-control\" id=\"exampleSelect1\">\r\n                                    <option>Selecionar</option>\r\n                                    {this.state.listaDeCidadesDoEstado.map(cidade => (\r\n                                        <option value={cidade.id}>{cidade.cidade}</option>\r\n                                    ))}\r\n\r\n                                </select>\r\n                            </div>\r\n                            : false}\r\n                        <br></br>\r\n\r\n                    </div>\r\n\r\n                    <br></br> \r\n\r\n                 \r\n                    <div className=\"\"\r\n                      style={{ marginLeft: \"30%\", marginRight: \"30%\" }}\r\n                    >\r\n                     <button type=\"button\" onClick={this.criarComite} className=\"btn btn-primary btn-lg botao-tamanho\">Criar</button>\r\n                       </div>\r\n\r\n                                         \r\n                    {this.state.mensagemErro ?\r\n                      <div style={{ paddingLeft: '12%', paddingRight: '12%' }}>\r\n                        <div className=\"alert alert-dismissible alert-danger\" >\r\n                          <button type=\"button\" onClick={this.handleCaixaDeErro} className=\"close\" data-dismiss=\"alert\">×</button>\r\n                          <strong>Ops!</strong> {this.state.mensagemErro}\r\n                        </div></div> : false}\r\n\t\t\t\t\t\t\r\n                        <br></br>\r\n\t\t\t\t\t\t   {this.state.mensagemSucesso ?\r\n                                            <div className=\"alert alert-dismissible alert-success\">\r\n                                                    <button onClick={this.fecharModal} type=\"button\" className=\"close\" data-dismiss=\"alert\">×</button>\r\n                                                    {this.state.mensagemSucesso}\r\n                                                </div>\r\n                                    \r\n                                            : false}\r\n\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default CriarComite;","C:\\temp\\react-rede\\src\\Views\\EditarFoto.js",[],"C:\\temp\\react-rede\\src\\Views\\ListaVoluntarios.js",["223","224","225","226","227","228","229","230","231","232","233","234"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport Pagination from '../Components/Pagination';\r\n\r\nimport NumberFormat from 'react-number-format';\r\n\r\nclass ListaVoluntarios extends React.Component {\r\n  \r\n  \r\n  state = {\r\n    \r\n    listaFuncionarios: [],\r\n    listaFuncionariosSelecionados: [],\r\n    mensagemErro: null,\r\n    filtrar: false,\r\n    listaComites: [],\r\n    listaFuncoes: [],\r\n    listaSkills: [],\r\n    expandOrdenar:true,\r\n    paginaMinima: 1,\r\n    currentPage: 1,\r\n    postsPerPage: 15,\r\n    indexOfFirstPost: 1,\r\n    currentPosts: [],\r\n\r\n\r\n    cpf: \"\",\r\n    skill: null,\r\n    id: null,\r\n    funcao: null,\r\n    regiao: null,\r\n    comite: null\r\n    \r\n    \r\n    \r\n  }\r\n  \r\n  \r\n  getCurrentPages = (pageNumber) => {\r\n    \r\n    this.setState({\r\n      currentPage: pageNumber,\r\n      indexOfLastPost: pageNumber * this.state.postsPerPage,\r\n      \r\n      indexOfFirstPost: (pageNumber * this.state.postsPerPage) - this.state.postsPerPage,\r\n    }, () => {\r\n                  \r\n      this.setState({\r\n        currentPosts: this.state.listaFuncionarios.slice(this.state.indexOfFirstPost, this.state.indexOfLastPost)\r\n        \r\n      }, ()=>{\r\n        \r\n        \r\n      })\r\n      \r\n    })\r\n  }\r\n\r\n\r\n  \r\n  paginateScroll = (e) => {\r\n    if (this.state.paginaMinima + e > 0 &&\r\n      (this.state.paginaMinima + e) <= Math.ceil((this.state.listaFuncionarios.length / this.state.postsPerPage))) {\r\n        this.setState({\r\n          paginaMinima: this.state.paginaMinima + e\r\n        })\r\n      }\r\n      \r\n    }\r\n    \r\n    componentDidMount() {\r\n      this.consultarFuncoes()\r\n      this.consultarfuncionariosAtuais()\r\n      this.consultarComites()\r\n      this.consultarSkills()\r\n    \r\n     \r\n    }\r\n   \r\n    \r\n    listarFuncionariosSelecionados = () => {\r\n      var comiteEscolhido = null\r\n      var funcaoEscolhido = null\r\n      var skillEscolhido = null\r\n      var cpfEscolhido = null\r\n      var regiaoEscolhida =null\r\n\r\n      if (this.state.comite != null && this.state.comite != \"Selecionar\") {\r\n        comiteEscolhido = {id: this.state.comite}\r\n      }\r\n      \r\n      if (this.state.funcao != null && this.state.funcao != \"Selecionar\") {\r\n        funcaoEscolhido = {id: this.state.funcao}\r\n      }\r\n\r\n      if (this.state.skill != null && this.state.skill != \"Selecionar\") {\r\n        skillEscolhido = [{id: this.state.skill}]\r\n      }\r\n      if (this.state.regiaoId != null && this.state.regiaoId != \"\") {\r\n        regiaoEscolhida = [{id: this.state.regiaoId}]\r\n      }\r\n      \r\n    \r\n      console.log(\"entrou na api pesquisar\")\r\n      axios.post('https://java-rede-governanca-brasil.herokuapp.com/funcionarios/filtrar', {\r\n          \r\n      cpf : null,\r\n    skill: skillEscolhido,\r\n    funcao: funcaoEscolhido,\r\n    regiao: regiaoEscolhida,\r\n    comite: comiteEscolhido\r\n\r\n      }).then(response => {\r\n\r\n        this.setState({\r\n            \r\n            listaFuncionarios: response.data\r\n        \r\n    },()=>{\r\n        this.getCurrentPages(1)\r\n      })\r\nconsole.log(\"lista funcionarios selecinados é\" , this.state.listaFuncionarios)\r\n\r\n    }).catch(erroResposta => {\r\n      \r\n\r\n     \r\n    })\r\n\r\n    console.log(\"lista funcionários é\" , this.state.listaFuncionarios)\r\n  }\r\n\r\n\r\n    \r\n    handleExpandOrdenar = () => {\r\n\r\n    this.setState({\r\n      expandOrdenar: !this.state.expandOrdenar\r\n    })\r\n  }\r\n\r\n   ordenarAlfabetico =()=> {\r\n\r\n    var ordenados = this.state.listaFuncionarios.sort((livroA, livroB) => livroA['nome'].toUpperCase() > livroB['nome'].toUpperCase() ? 1 : -1);\r\n    \r\n    axios.get(`http://java-rede-governanca-brasil.herokuapp.com/funcionarios/ordenar-alfabetica`, {\r\n\r\n    })\r\n    .then(response => {\r\n      this.setState({\r\n        listaFuncionarios: response.data\r\n      }, () => {\r\n        this.getCurrentPages(1)\r\n        this.handleExpandOrdenar()\r\n      \r\n      })\r\n\r\n    }).catch(erroResposta => {\r\n      alert(\"ALGUM ERRO\")\r\n\r\n\r\n    })\r\n\r\n  }\r\n  \r\n    \r\n    ordenarIntegracao =()=> {\r\n\r\n      axios.get(`http://java-rede-governanca-brasil.herokuapp.com/funcionarios/ordenar-integracao`, {\r\n\r\n      })\r\n      .then(response => {\r\n        this.setState({\r\n          listaFuncionarios: response.data\r\n        }, () => {\r\n          this.getCurrentPages(1)\r\n          this.handleExpandOrdenar()\r\n        \r\n        })\r\n  \r\n      }).catch(erroResposta => {\r\n        alert(\"ALGUM ERRO\")\r\n  \r\n  \r\n      })\r\n\r\n\r\n\r\n      this.handleExpandOrdenar()\r\n  \r\n      }\r\n  \r\n\r\n  handleDataIntegracao = (e) => {\r\n    //variaveis do tipo state para receber valor é daseguinte forma\r\n    this.setState({\r\n      dataIntegracao: e.target.value\r\n    })\r\n\r\n    //imprimir ou acessar valores do tipo state\r\n    console.log(this.state.data)\r\n\r\n  }\r\n\r\n  handleCidade = (e) => {\r\n    this.setState({\r\n      regiaoId: e.target.value\r\n    })\r\n  }\r\n  handleEstado = (e) => {\r\n    this.setState({\r\n      estado: e.target.value\r\n    }, () => {\r\n      this.setState({\r\n        valueEstado: this.state.estado\r\n      }, () => {\r\n        this.encontrarCidadesDoEstado(this.state.estado)\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  encontrarCidadesDoEstado = (estado) => {\r\n    axios.get(`https://java-rede-governanca-brasil.herokuapp.com/regioes/cidades/${estado}`, {\r\n    }).then(response => {\r\n      this.setState({\r\n        listaDeCidadesDoEstado: response.data\r\n      }, () => {\r\n        this.setState({\r\n          mostrarCidade: true\r\n        })\r\n      })\r\n\r\n\r\n    }).catch(erroResposta => {\r\n      alert(\"ALGUM ERRO\")\r\n\r\n\r\n    })\r\n\r\n  }\r\n  consultarComites = () => {\r\n    axios.get('https://java-rede-governanca-brasil.herokuapp.com/comites')\r\n      .then(response => {\r\n        this.setState({\r\n          listaComites: response.data\r\n        })\r\n\r\n      }).catch(erro => {\r\n\r\n      })\r\n  }\r\n\r\n\r\n\r\n  handleComite = (e) => {\r\n    //variaveis do tipo state para receber valor é daseguinte forma\r\n    this.setState({\r\n      comite: e.target.value\r\n    }, () => {\r\n      this.setState({\r\n        comiteValue: this.state.comite\r\n\r\n      })\r\n    })\r\n\r\n    //imprimir ou acessar valores do tipo state\r\n    console.log(this.state.comite)\r\n\r\n  }\r\n\r\n\r\n  consultarfuncionariosAtuais = () => {\r\n    axios.get(`http://java-rede-governanca-brasil.herokuapp.com/funcionarios`)\r\n      .then(response => {\r\n        this.setState({\r\n          listaFuncionarios: response.data\r\n\r\n        },()=>{\r\n          this.getCurrentPages(1)\r\n        })\r\n        console.log(\"response foi:\", response.data)\r\n      }).catch(erro => {\r\n        this.setState({\r\n          mensagemErro: \"Erro ao carregar os dados. Atualize a página!\"\r\n        })\r\n      })\r\n  }\r\n\r\n\r\n  handleFiltrar = () => {\r\n    this.setState({\r\n      filtrar: !this.state.filtrar\r\n    })\r\n  }\r\n\r\n  handleCpf = (e) => {\r\n    //variaveis do tipo state para receber valor é daseguinte forma\r\n    this.setState({\r\n      cpf: e.target.value\r\n    })\r\n\r\n    //imprimir ou acessar valores do tipo state\r\n    console.log(this.state.cpf)\r\n\r\n  }\r\n\r\n  consultarFuncoes = () => {\r\n    axios.get('https://java-rede-governanca-brasil.herokuapp.com/funcoes')\r\n      .then(response => {\r\n        this.setState({\r\n          listaFuncoes: response.data\r\n        })\r\n\r\n      }).catch(erro => {\r\n\r\n      })\r\n  }\r\n\r\n  handleFuncao = (e) => {\r\n    //variaveis do tipo state para receber valor é daseguinte forma\r\n    this.setState({\r\n      funcao: e.target.value\r\n    }, () => {\r\n      this.setState({\r\n        valueFuncao: this.state.funcao\r\n      })\r\n    })\r\n\r\n    //imprimir ou acessar valores do tipo state\r\n    console.log(this.state.funcao)\r\n\r\n  }\r\n\r\n  consultarSkills = () => {\r\n    axios.get('https://java-rede-governanca-brasil.herokuapp.com/skills')\r\n    \r\n    .then(response => {\r\n      this.setState({\r\n        listaSkills: response.data\r\n      })\r\n\r\n    }).catch(erro => {\r\n\r\n    })\r\n}\r\n\r\n  handleSkill = (e) => {\r\n   //variaveis do tipo state para receber valor é daseguinte forma\r\n   this.setState({\r\n    skill: e.target.value\r\n  }, () => {\r\n    this.setState({\r\n      valueSkill: this.state.skill\r\n    })\r\n  })\r\n\r\n  //imprimir ou acessar valores do tipo state\r\n  console.log(this.state.skill)\r\n\r\n}\r\n\r\n\r\n  handleAtuacao = (e) => {\r\n    //variaveis do tipo state para receber valor é daseguinte forma\r\n    this.setState({\r\n      atuacao: e.target.value\r\n    }, () => {\r\n      this.setState({\r\n        valueAtuacao: this.state.atuacao\r\n      })\r\n    })\r\n\r\n    //imprimir ou acessar valores do tipo state\r\n    console.log(this.state.atuacao)\r\n\r\n  }\r\n\r\n  handleDataNascimento = (e) => {\r\n    //variaveis do tipo state para receber valor é daseguinte forma\r\n    this.setState({\r\n        dataNascimento: e.target.value\r\n    })\r\n\r\n    //imprimir ou acessar valores do tipo state\r\n    console.log(this.state.dataNascimento)\r\n\r\n}\r\n\r\nformatDate =(date)=> {\r\n  var d = new Date(date),\r\n      month = '' + (d.getMonth() + 1),\r\n      day = '' + d.getDate(),\r\n      year = d.getFullYear();\r\n\r\n  if (month.length < 2) \r\n      month = '0' + month;\r\n  if (day.length < 2) \r\n      day = '0' + day;\r\n\r\n  return [year, month, day].join('-');\r\n}\r\n\r\n  render() {\r\n    return (\r\n\r\n\r\n      <div className=\"col-lg-12 fundo-login\" style={{\r\n        paddingTop: '4%', paddingBottom: '4%',\r\n\r\n      }}>\r\n\r\n        {this.state.filtrar ?\r\n        \r\n        <div className=\"perfil-desktop-aprovacao sombra \" style={{\r\n          paddingTop: '35px', marginBottom: '20px',\r\n          paddingLeft: '5%', paddingRight: '5%', paddingBottom: '5%'\r\n        }}>\r\n          \r\n          <div className=\"col-lg-12\" style={{\r\n            textAlign: 'right',\r\n          }}>\r\n\r\n          <button type=\"button\" onClick={this.handleFiltrar}className=\"btn btn-success\">Voltar</button>\r\n          {/* <button type=\"button\" onClick={this.handleFiltrar} className=\"close\" data-dismiss=\"alert\">Voltar</button> */}\r\n\r\n          </div>\r\n\r\n          <h4 style={{ paddingBottom: '3%',\r\n            textAlign: 'center',\r\n            // border: '2px solid black'\r\n          }}\r\n          \r\n          >Filtrar Voluntários </h4>\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"row\">\r\n{/* \r\n              <div className=\"col-lg-4\">\r\n                <div className=\"form-group\">\r\n                  <label>CPF</label>\r\n                  <NumberFormat format=\"###.###.###-##\" value={this.state.cpf} onChange={(e) => { this.handleCpf(e) }} type=\"text\" className=\"form-control\" placeholder=\"CPF\" />\r\n                </div>\r\n              </div> */}\r\n{/* \r\n              <div className=\"col-lg-4\">\r\n                <label htmlFor=\"exampleInputEmail1\">Data de Integração</label>\r\n                <input value={this.state.dataIntegracao} onChange={(e) => { this.handleDataIntegracao(e) }} type=\"date\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"DATA DE INTEGRAÇÃO\" />\r\n              </div> */}\r\n\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"exampleSelect1\">Selecionar Função</label>\r\n                  <select value={this.state.valueFuncao} onChange={(e) => { this.handleFuncao(e) }} className=\"form-control\" id=\"exampleSelect1\">\r\n                  <option value = {null}>Selecionar</option>\r\n                  {this.state.listaFuncoes.map(funcaoAtual => (\r\n                      <option value={funcaoAtual.id}>{funcaoAtual.funcao}</option>\r\n\r\n                    ))}\r\n\r\n                  </select>\r\n                </div>\r\n              </div>\r\n{/* \r\n              <div className=\"col-lg-4\">\r\n              <label htmlFor=\"exampleInputEmail1\">Data de Nascimento</label>\r\n                                        <input value={this.state.dataNascimento} onChange={(e) => { this.handleDataNascimento(e) }} type=\"date\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"data de Nascimento\" />\r\n\r\n              </div>  */}\r\n\r\n              {/* <div className=\"col-lg-4\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"exampleSelect1\">Selecionar Função</label>\r\n                  <select value={this.state.valueFuncao} onChange={(e) => { this.handleFuncao(e) }} className=\"form-control\" id=\"exampleSelect1\">\r\n\r\n                    <option>Selecionar</option>\r\n                    {this.state.listaFuncoes.map(funcaoAtual => (\r\n                      <option value={funcaoAtual.id}>{funcaoAtual.funcao}</option>\r\n\r\n                    ))}\r\n\r\n                  </select>\r\n                </div>\r\n              </div> */}\r\n\r\n\r\n                 <div className=\"col-lg-4\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"exampleSelect1\">Selecionar Skill</label>\r\n                  <select value={this.state.valueSkill} onChange={(e) => { this.handleSkill(e) }} className=\"form-control\" id=\"exampleSelect1\">\r\n                  <option value = {null}>Selecionar</option>\r\n                    {this.state.listaSkills.map(skillAtual => (\r\n                      <option value={skillAtual.id}>{skillAtual.skill}</option>\r\n                      \r\n\r\n                    ))}\r\n\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n\r\n              {/* <div className=\"col-lg-4\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"exampleSelect1\">Atuação</label>\r\n                  <select value={this.state.atuacaoValue} onChange={(e) => { this.handleAtuacao(e) }} className=\"form-control\" id=\"exampleSelect1\">\r\n\r\n                    <option>Selecionar</option>\r\n                    <option value={10}>Coordenador</option>\r\n                    <option value={1}>Voluntário</option>\r\n                    <option value={3}>Reprovado</option>\r\n\r\n                  </select>\r\n                </div>\r\n              </div> */}\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"exampleSelect1\">Selecionar Comitê</label>\r\n                  <select value={this.state.comiteValue} onChange={(e) => { this.handleComite(e) }} className=\"form-control\" id=\"exampleSelect1\">\r\n                    <option value = {null}>Selecionar</option>\r\n                    {this.state.listaComites.map(comiteAtual => (\r\n                      <option value={comiteAtual.id}>{comiteAtual.comite}</option>\r\n\r\n                      \r\n\r\n                    ))}\r\n\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"exampleSelect2\">Selecione o Estado</label>\r\n                  <select onChange={(e) => { this.handleEstado(e) }} className=\"form-control\" id=\"exampleSelect2\">\r\n                    <option>Selecionar</option>\r\n                    <option value=\"RO\">RO</option>\r\n                    <option value=\"AC\">AC</option>\r\n                    <option value=\"AM\">AM</option>\r\n                    <option value=\"RR\">RR</option>\r\n                    <option value=\"PA\">PA</option>\r\n                    <option value=\"AP\">AP</option>\r\n                    <option value=\"TO\">TO</option>\r\n                    <option value=\"MA\">MA</option>\r\n                    <option value=\"PI\">PI</option>\r\n                    <option value=\"CE\">CE</option>\r\n                    <option value=\"RN\">RN</option>\r\n                    <option value=\"PB\">PB</option>\r\n                    <option value=\"PE\">PE</option>\r\n                    <option value=\"AL\">AL</option>\r\n                    <option value=\"SE\">SE</option>\r\n                    <option value=\"BA\">BA</option>\r\n                    <option value=\"MG\">MG</option>\r\n                    <option value=\"ES\">ES</option>\r\n                    <option value=\"RJ\">RJ</option>\r\n                    <option value=\"SP\">SP</option>\r\n                    <option value=\"PR\">PR</option>\r\n                    <option value=\"SC\">SC</option>\r\n                    <option value=\"RS\">RS</option>\r\n                    <option value=\"MS\">MS</option>\r\n                    <option value=\"MT\">MT</option>\r\n                    <option value=\"GO\">GO</option>\r\n                    <option value=\"DF\">DF</option>\r\n\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-lg-4\">\r\n                {this.state.mostrarCidade ?\r\n\r\n                  <div>\r\n                    <label value={this.state.cidade} htmlFor=\"exampleSelect1\">Selecione a Cidade</label>\r\n                    <select onChange={(e) => this.handleCidade(e)} style={{\r\n                      // border: '2px solid blue'\r\n                    }} className=\"form-control\" id=\"exampleSelect1\">\r\n                      <option>Selecionar</option>\r\n                      {this.state.listaDeCidadesDoEstado.map(cidade => (\r\n                        <option value={cidade.id}>{cidade.cidade}</option>\r\n                      ))}\r\n\r\n                    </select>\r\n                  </div>\r\n\r\n                  : false}\r\n              </div>\r\n\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n          <div className=\"fundo-centralizado\" style={{ paddingTop: '10%' }}>\r\n\r\n            <button type=\"button\" onClick={this.listarFuncionariosSelecionados} className=\"btn btn-primary\">Listar funcionários selecionados</button>\r\n          </div>\r\n        </div>\r\n\r\n          : <div className=\"col-lg-12\" style={{ paddingBottom: '20px' }}>\r\n            <div className=\"row\" >\r\n              <div className=\"col-lg-8\" >\r\n\r\n              </div>\r\n              <div className=\"col-lg-2 row \" style={{\r\n           \r\n          //  border: '2px solid black'\r\n         }} >\r\n              <div className={this.state.expandOrdenar?\"btn-group\": \"btn-group show\"} role=\"group\" aria-label=\"Button group with nested dropdown\">\r\n        <button \r\n        \r\n          type=\"button\" className=\"btn btn-primary\" style={{\r\n           \r\n          //  border: '2px solid black'\r\n         }} onClick ={this.handleExpandOrdenar}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ordernar&nbsp;&nbsp;&nbsp;</button>\r\n        <div className=\"btn-group\" role=\"group\">\r\n          <button  onClick ={this.handleExpandOrdenar} id=\"btnGroupDrop1\" type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded={this.state.expandOrdenar?\"false\":\"true\"} />\r\n          <div className={this.state.expandOrdenar?\"dropdown-menu\":\"dropdown-menu show\"} aria-labelledby=\"btnGroupDrop1\" style={{}}>\r\n            <a className=\"dropdown-item\" onClick ={this.ordenarAlfabetico} >Ordem Alfabética</a>\r\n            <a className=\"dropdown-item\" onClick ={this.ordenarIntegracao}>Data de Integração</a>\r\n            {/* <a className=\"dropdown-item\" onClick ={this.handleExpandOrdenar}>Data de Integração</a> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n              </div>\r\n              <div className=\"col-lg-2 \" >\r\n                <button onClick={this.handleFiltrar} type=\"button\" className=\"btn btn-secondary\">Filtrar Funcionários</button>\r\n\r\n\r\n              </div>\r\n            </div>\r\n          </div>}\r\n\r\n\r\n        <div className=\"perfil-desktop-aprovacao sombra \" style={{\r\n          paddingTop: '35px',\r\n          paddingLeft: '5%', paddingRight: '5%', paddingBottom: '5%'\r\n        }}>\r\n          <h4 style={{\r\n            textAlign: 'center',\r\n            // border: '2px solid black'\r\n          }}>Lista de Funcionários </h4>\r\n\r\n          <p style={{ color: 'grey', fontSize: '15px', textAlign: 'right' }}>\r\n            <br></br>\r\n            {this.state.listaFuncionarios.length} funcionario(s) encontrado(s)\r\n          <br></br>\r\n          </p>\r\n\r\n\r\n\r\n          <br></br>\r\n          <div className=\"scroll-box\" style={{ maxheight: '500px' }}>\r\n\r\n\r\n            <div style={{\r\n              marginTop: '0%',\r\n\r\n\r\n            }}>\r\n\r\n\r\n              <table class=\"table table-hover\">\r\n                <thead>\r\n                  <tr >\r\n                    <th scope=\"col\">Nome</th>\r\n                    <th scope=\"col\">CPF</th>\r\n                    <th scope=\"col\">Email</th>\r\n                    <th scope=\"col\">Celular</th>\r\n                    <th scope=\"col\">Nascimento</th>\r\n                    <th scope=\"col\">Ingresso</th>\r\n                    <th scope=\"col\">Função</th>\r\n                    <th scope=\"col\">Região</th>\r\n                    <th scope=\"col\">Comitê</th>\r\n                    <th scope=\"col\">Atuação</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.currentPosts.map(blocoAtual => (\r\n\r\n                    <tr>\r\n                      <th scope=\"\"><a href={`http://localhost:3000/#/perfil-funcionarios/${blocoAtual.cpf}`}>{blocoAtual.nome}</a></th>\r\n                      <td>{blocoAtual.cpf}</td>\r\n                      <td>{blocoAtual.email}</td>\r\n                      <td>{blocoAtual.celular}</td>\r\n                      <td>{blocoAtual.dataNascimento}</td>\r\n                      <td>{blocoAtual.dataIntegracao}</td>\r\n                      <td>{blocoAtual.funcao.funcao}</td>\r\n                      <td>{`${blocoAtual.regiao.cidade}/${blocoAtual.regiao.estado}`}</td>\r\n                      <td>{blocoAtual.comite.comite}</td>\r\n                      <td>{blocoAtual.coordenador == 1 ? \"Coordenador\" : blocoAtual.aprovado == 0 ? \"Pendente\"  :blocoAtual.aprovado == 3 ? \"Reprovado\" : \"Voluntário\"}</td>\r\n\r\n\r\n                    </tr>\r\n\r\n                  ))}\r\n\r\n\r\n                </tbody>\r\n              </table>\r\n              <div className=\"col-lg-12 fundo-centralizado\">\r\n\r\n\r\n<div >\r\n  <Pagination quantidadeShow={3} paginaMinima={this.state.paginaMinima} postsPerPage={this.state.postsPerPage}\r\n    totalPosts={this.state.listaFuncionarios.length}\r\n    paginate={this.getCurrentPages} currentPage= {this.state.currentPage}\r\n    paginateScroll={this.paginateScroll}></Pagination>\r\n</div>\r\n</div>\r\n\r\n\r\n            </div>\r\n            {this.state.mensagemErro ?\r\n              <div style={{ paddingLeft: '12%', paddingRight: '12%' }}>\r\n                <div className=\"alert alert-dismissible alert-danger\" >\r\n                  <button type=\"button\" onClick={this.handleCaixaDeErro} className=\"close\" data-dismiss=\"alert\">×</button>\r\n                  <strong>Ops!</strong> {this.state.mensagemErro}\r\n                </div></div> : false}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    );\r\n\r\n\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default ListaVoluntarios;","C:\\temp\\react-rede\\src\\Views\\AprovacaoVoluntarios.js",["235"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport NumberFormat from 'react-number-format';\r\nimport Pagination from '../Components/Pagination';\r\n\r\n\r\n\r\nclass AprovacaoVoluntarios extends React.Component {\r\n\r\n\r\n  state = {\r\n    segundaPagina: false,\r\n    confirmarCadastro: false,\r\n    cpf: '',\r\n    nome: '',\r\n    inserir: '',\r\n    data: '',\r\n    endereco: '',\r\n    lider: '',\r\n    perfil: '',\r\n    cidade: '',\r\n    estado: '',\r\n    descricao: '',\r\n    dataIntegracao: '',\r\n    aprovado: '',\r\n    coordenador: '',\r\n    skill: '',\r\n    funcionarios: '',\r\n    regiao: '',\r\n    comite: '',\r\n    funcao: '',\r\n    celular: '',\r\n    mensagemErro: null,\r\n    mensagemSucesso: null,\r\n    dataNascimento: '',\r\n    email: '',\r\n    hierarquia: \"\",\r\n    senha: '',\r\n    senhaConfirm: '',\r\n    listaFuncoes: [],\r\n    listaSkills: [],\r\n    listaComites: [],\r\n    itemsSkills: [],\r\n    sucesso: false,\r\n    erro: null,\r\n    listaFuncionarios: [],\r\n    listaFuncionariosPendentes: [],\r\n    expandOrdenar: true,\r\n    paginaMinima: 1,\r\n    currentPage: 1,\r\n    postsPerPage: 15,\r\n    indexOfFirstPost: 1,\r\n    currentPosts: [],\r\n    // redirect: false\r\n\r\n  }\r\n\r\n\r\n  getCurrentPages = (pageNumber) => {\r\n\r\n    this.setState({\r\n      currentPage: pageNumber,\r\n      indexOfLastPost: pageNumber * this.state.postsPerPage,\r\n\r\n      indexOfFirstPost: (pageNumber * this.state.postsPerPage) - this.state.postsPerPage,\r\n    }, () => {\r\n\r\n\r\n\r\n      this.setState({\r\n        currentPosts: this.state.listaFuncionariosPendentes.slice(this.state.indexOfFirstPost, this.state.indexOfLastPost)\r\n\r\n      }, () => {\r\n\r\n\r\n      })\r\n\r\n    })\r\n  }\r\n  paginateScroll = (e) => {\r\n    if (this.state.paginaMinima + e > 0 &&\r\n      (this.state.paginaMinima + e) <= Math.ceil((this.state.listaFuncionariosPendentes.length / this.state.postsPerPage))) {\r\n      this.setState({\r\n        paginaMinima: this.state.paginaMinima + e\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.consultarfuncionariosAtuaisPendentes()\r\n    this.consultarfuncionariosAtuais()\r\n\r\n  }\r\n\r\n  consultarfuncionariosAtuaisPendentes = () => {\r\n    axios.get(`http://java-rede-governanca-brasil.herokuapp.com/funcionarios/pendentes`)\r\n      .then(response => {\r\n        this.setState({\r\n          listaFuncionariosPendentes: response.data\r\n        }, () => {\r\n          this.getCurrentPages(1)\r\n        })\r\n        console.log(\"response Pendentes foi:\", response.data)\r\n\r\n      }).catch(erro => {\r\n        this.setState({\r\n          mensagemErro: \"Erro no carregamento dos dados! Atualize a página!\"\r\n        })\r\n      })\r\n  }\r\n\r\n  consultarfuncionariosAtuais = () => {\r\n    axios.get(`http://java-rede-governanca-brasil.herokuapp.com/funcionarios`)\r\n      .then(response => {\r\n        this.setState({\r\n          listaFuncionarios: response.data\r\n\r\n        },()=>{\r\n          this.getCurrentPages(1)\r\n        })\r\n        console.log(\"response Atuais foi:\", response.data)\r\n      }).catch(erro => {\r\n        this.setState({\r\n          mensagemErro: \"Erro ao carregar os dados. Atualize a página!\"\r\n        })\r\n      })\r\n  }\r\n\r\n  // moverListaReprovados = () => {\r\n  //   axios.get(`http://java-rede-governanca-brasil.herokuapp.com/funcionarios/reprovados`)\r\n  //     .then(response => {\r\n  //       this.setState({\r\n  //         listaFuncionarios: response.data\r\n  //       }, () => {\r\n  //         this.getCurrentPages(1)\r\n         \r\n  //       })\r\n  //       console.log(\"response foi:\", response.data)\r\n\r\n  //     }).catch(erro => {\r\n  //       this.setState({\r\n  //         mensagemErro: \"Erro no carregamento dos dados! Atualize a página!\"\r\n  //       })\r\n  //     })\r\n  // }\r\n\r\n\r\n  realizarAprovacao = (cpf, aprovado) => {\r\n    axios.post('https://java-rede-governanca-brasil.herokuapp.com/funcionarios/pendentes/aprovar/',\r\n      [{\r\n        cpf, aprovado\r\n      }])\r\n      .then(response => {\r\n        this.consultarfuncionariosAtuaisPendentes()\r\n        this.setState({\r\n          mensagemSucesso: \"Aprovação Realizada!\"\r\n        })\r\n      \r\n        // this.consultarfuncionariosAtuais()\r\n      }).catch(erro => {\r\n        this.setState({\r\n          mensagemErro: erro.response.data.error\r\n        })\r\n      })\r\n  }\r\n\r\n \r\n\r\n  render() {\r\n    return (\r\n\r\n\r\n      <div className=\"col-lg-12 fundo-login\" style={{\r\n        paddingTop: '4%', paddingBottom: '4%',\r\n\r\n      }}>\r\n\r\n\r\n        <div className=\"perfil-desktop-aprovacao sombra \" style={{\r\n          paddingTop: '35px',\r\n          paddingLeft: '4%', paddingRight: '4%', paddingBottom: '5%'\r\n        }}>\r\n          <h4 style={{\r\n            textAlign: 'center',\r\n            // border: '2px solid black'\r\n          }}>Aprovação de Voluntários </h4>\r\n\r\n<p style={{ color: 'grey', fontSize: '15px', textAlign: 'right' }}>\r\n            <br></br>\r\n            {this.state.listaFuncionariosPendentes.length} funcionarios encontrados\r\n          <br></br>\r\n          </p>\r\n\r\n\r\n\r\n          <br></br>\r\n          <div className=\"scroll-box\" style={{ maxheight: '500px' }}>\r\n\r\n\r\n            <div style={{\r\n              marginTop: '0%',\r\n              \r\n              \r\n            }}>\r\n\r\n\r\n              <table class=\"table table-hover\" >\r\n\r\n\r\n                <thead>\r\n                  <tr style={{ textAlign: \"center\" }}>\r\n                    <th scope=\"col\">Nome</th>\r\n                    <th scope=\"col\">CPF</th>\r\n                    <th scope=\"col\">Valor do aprovao</th>\r\n                    <th scope=\"col\">Email</th>\r\n                    <th scope=\"col\">Celular</th>\r\n                    <th scope=\"col\">Nascimento</th>\r\n                    <th scope=\"col\">Ingresso</th>\r\n                    <th scope=\"col\">Região</th>\r\n                    <th scope=\"col\">Comitê</th>\r\n                    <th scope=\"col\">Aprovar</th>\r\n                    <th scope=\"col\">Reprovar</th>\r\n                    <th scope=\"col\">Coordenador</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  \r\n               \r\n                     \r\n                  {this.state.currentPosts.map(blocoAtual => (\r\n\r\n                    <tr>\r\n                       <th scope=\"\"><a href={`http://localhost:3000/#/perfil-colaborador/${blocoAtual.cpf}`}>{blocoAtual.nome}</a></th>\r\n                      <td>{blocoAtual.cpf}</td>\r\n                      {/* <td>{blocoLista.aprovado}</td> */}\r\n                      <td>{blocoAtual.email}</td>\r\n                      <td>{blocoAtual.celular}</td>\r\n                      <td>{blocoAtual.dataNascimento}</td>\r\n                      <td>{blocoAtual.dataIntegracao}</td>\r\n                      <td>{`${blocoAtual.regiao.cidade}/${blocoAtual.regiao.estado}`}</td>\r\n                      <td>{blocoAtual.comite.comite}</td>\r\n                      <td><button type=\"button\" onClick={(e) => { this.realizarAprovacao(blocoAtual.cpf, 1) }} className=\"btn btn-primary\">Aprovar</button></td>\r\n                      <td><button type=\"button\" onClick={(e) => { this.realizarAprovacao(blocoAtual.cpf, 3) }} className=\"btn btn-secondary\">Reprovar</button></td>\r\n                      <td><button type=\"button\" onClick={(e) => { this.realizarAprovacao(blocoAtual.cpf, 2) }} className=\"btn btn-danger\">Coordenador</button></td>\r\n                    </tr>\r\n                  ))\r\n                  \r\n                   \r\n                  }\r\n                 \r\n                </tbody>\r\n                </table>\r\n                \r\n                <div className=\"col-lg-12 fundo-centralizado\">\r\n\r\n                <div >\r\n                  <Pagination quantidadeShow={3} paginaMinima={this.state.paginaMinima} postsPerPage={this.state.postsPerPage}\r\n                    totalPosts={this.state.listaFuncionariosPendentes.length}\r\n                    paginate={this.getCurrentPages} currentPage={this.state.currentPage}\r\n                    paginateScroll={this.paginateScroll}></Pagination>\r\n                </div>\r\n              </div>\r\n\r\n\r\n\r\n          </div>\r\n            </div>\r\n            {this.state.mensagemErro ?\r\n              <div style={{ paddingLeft: '12%', paddingRight: '12%' }}>\r\n                <div className=\"alert alert-dismissible alert-danger\" >\r\n                  <button type=\"button\" onClick={this.handleCaixaDeErro} className=\"close\" data-dismiss=\"alert\">×</button>\r\n                  <strong>Ops!</strong> {this.state.mensagemErro}\r\n                </div></div> : false}\r\n        </div>\r\n      </div>\r\n\r\n\r\n    );\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default AprovacaoVoluntarios;","C:\\temp\\react-rede\\src\\Views\\ListaComites.js",["236","237"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport NumberFormat from 'react-number-format';\r\n\r\n\r\nclass ListaComites extends React.Component {\r\n\r\n\r\n  state = {\r\n    segundaPagina: false,\r\n    confirmarCadastro: false,\r\n    cpf: '',\r\n    nome: '',\r\n    inserir: '',\r\n    data: '',\r\n    endereco: '',\r\n    lider: '',\r\n    perfil: '',\r\n    cidade: '',\r\n    estado: '',\r\n    descricao: '',\r\n    dataIntegracao: '',\r\n    aprovado: '',\r\n    coordenador: '',\r\n    skill: '',\r\n    funcionarios: '',\r\n    regiao: '',\r\n    comite: '',\r\n    funcao: '',\r\n    celular: '',\r\n    mensagemErro:null,\r\n    mensagemSucesso:null,\r\n    dataNascimento: '',\r\n    email: '',\r\n    hierarquia: \"\",\r\n    senha: '',\r\n    senhaConfirm: '',\r\n    listaFuncoes: [],\r\n    listaSkills: [],\r\n    listaComites: [],\r\n    itemsSkills: [],\r\n    sucesso: false,\r\n    erro: null,\r\n    listaComites: [],\r\n    // redirect: false\r\n\r\n  }\r\n \r\n  componentDidMount() {\r\n    this.consultarfuncionariosAtuais()\r\n  \r\n  }\r\n\r\n  consultarfuncionariosAtuais = () => {\r\n    axios.get(`http://java-rede-governanca-brasil.herokuapp.com/comites`)\r\n      .then(response => {\r\n        this.setState({\r\n          listaComites: response.data\r\n        })\r\n        console.log(\"response foi:\", response.data)\r\n\r\n      }).catch(erro => {\r\n        this.setState({\r\n          mensagemErro: \"Erro no carregamento dos dados! Atualize a página!\"\r\n        })\r\n      })\r\n  }\r\n\r\n  realizarAprovacao = (cpf, aprovado ) => {\r\n    axios.put(`http://java-rede-governanca-brasil.herokuapp.com/funcionarios/pendentes/aprovar`,\r\n    {\r\n      \"cpf\": 11231321321,\r\n      \"aprovado\": 1\r\n    })\r\n      .then(response => {\r\n        this.setState({\r\n          mensagemSucesso: \"Aprovação Realizada!\"\r\n        })\r\n      // this.consultarfuncionariosAtuais()\r\n      }).catch(erro => {\r\n        this.setState({\r\n          mensagemErro: erro.response.data.error\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n\r\n      <div className=\"col-lg-12 fundo-login\" style={{\r\n        paddingTop: '4%', paddingBottom: '4%',\r\n\r\n      }}>\r\n\r\n\r\n        <div className=\"perfil-desktop-aprovacao sombra \" style={{\r\n          paddingTop: '35px',\r\n          paddingLeft: '5%', paddingRight: '5%', paddingBottom: '5%'\r\n        }}>\r\n          <h4 style={{\r\n            textAlign: 'center',\r\n            // border: '2px solid black'\r\n          }}>Aprovação de Voluntários </h4>\r\n\r\n          <br></br>\r\n          <div className=\"scroll-box\" style={{ maxheight: '500px' }}>\r\n\r\n\r\n            <div style={{\r\n              marginTop: '0%',\r\n\r\n\r\n            }}>\r\n\r\n\r\n\r\n\r\n              {/* <table class=\" table table-striped table-round-corner table-condensed table-bordered \">\r\n              <thead class=\"table-sm  \"\r\n              // style={{// border: ' 3px solid yellow',}}\r\n              >\r\n\r\n                <tr class=\" table-th table-striped table-round-corner table-condensed table-bordered\" style={{\r\n                  backgroundColor: '#19296B',\r\n                  // border: ' 3px solid yellow',\r\n\r\n                }}>\r\n                  <th form-control scope=\"col\"> nome </th>\r\n                  <th scope=\"col\"> email</th>\r\n                  <th scope=\"col\">  Celular </th>\r\n                  <th scope=\"col\"> data de Nascimento </th>\r\n                  <th scope=\"col\"> Perfil</th>\r\n                  <th scope=\"col\"> Aprovado</th>\r\n                  <th scope=\"col\"> Reprovado</th>\r\n                  <th scope=\"col\"> ID</th>\r\n\r\n                </tr>\r\n\r\n              </thead>\r\n              <tbody  >\r\n\r\n                          {this.state.listaComites.map(blocoAtual => (\r\n                  <tr className=\"table-td table-sm table-round-corner table-striped table-condensed table-bordered td \"\r\n                    style={{backgroundColor: '#C6D0E0',\r\n                      // border: ' 3px solid yellow',\r\n                    }} >\r\n\r\n                    <th scope=\"row \" style={{\r\n                      textAlign: 'Left'\r\n                      // border: ' 3px solid yellow',\r\n\r\n                    }}>{blocoAtual.nome}</th>\r\n                    <td>{blocoAtual.email}</td>\r\n                    <td>{blocoAtual.celular}</td>\r\n                    <td>{blocoAtual.dataNascimento}</td>\r\n                    <td>  <button style={{\r\n                      border: 'none'\r\n\r\n\r\n                    }} type=\"button\" class=\"btn btn-success botao-perfil-lista\"> <svg width=\"1.2em\" height=\"1.2em\" viewBox=\"0 0 16 16\" class=\"bi bi-search \" fill=\"#19296B\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path fill-rule=\"evenodd\" d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\" />\r\n                        <path fill-rule=\"evenodd\" d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\" />\r\n                      </svg></button>\r\n                    </td>\r\n                    <td> <button style={{ border: 'none', color: '#19296B' }} type=\"button\" className=\"btn btn-success  botao-perfil-lista\">Sim</button></td>\r\n                    <td> <button style={{ border: 'none', color: '#19296B' }} type=\"button\" className=\"btn btn-success  botao-perfil-lista\">Sim</button></td>\r\n                    <td>{blocoAtual.id}</td>\r\n\r\n                  </tr>\r\n\r\n                ))}\r\n\r\n              </tbody>\r\n            </table> */}\r\n              <table class=\"table table-hover\">\r\n                <thead>\r\n                  <tr >\r\n                    <th scope=\"col\">Nome</th>\r\n                    <th scope=\"col\">Descrição</th>\r\n                    <th scope=\"col\">DataCriação</th>\r\n                    <th scope=\"col\">Regiao</th>\r\n                    <th scope=\"col\">Celular</th>\r\n                    <th scope=\"col\">Região</th>\r\n                    <th scope=\"col\">Criação</th>\r\n                    <th scope=\"col\">Coordenador</th>\r\n           \r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.listaComites.map(blocoAtual => (\r\n\r\n                    <tr>\r\n                      <th scope=\"\"><a href={`#/perfil-comite/${blocoAtual.id}`}>{blocoAtual.comite}</a></th>\r\n                      <th scope=\"\">{blocoAtual.descricao}</th>\r\n                      <th scope=\"\">{blocoAtual.dataCriacao}</th>\r\n                      \r\n                      {/* <th scope=\"\">{`${blocoAtual.regiao.cidade} - ${blocoAtual.regiao.estado}`}</th> */}\r\n                    \r\n                    </tr>\r\n\r\n                  ))}\r\n\r\n\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            {this.state.mensagemErro ?\r\n                      <div style={{ paddingLeft: '12%', paddingRight: '12%' }}>\r\n                        <div className=\"alert alert-dismissible alert-danger\" >\r\n                          <button type=\"button\" onClick={this.handleCaixaDeErro} className=\"close\" data-dismiss=\"alert\">×</button>\r\n                          <strong>Ops!</strong> {this.state.mensagemErro}\r\n                        </div></div> : false}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    );\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default ListaComites;","C:\\temp\\react-rede\\src\\Views\\PerfilCoordenador.js",["238"],"import React from 'react';\r\n\r\n\r\nclass PerfilCoordenador extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n\r\n\r\n      <div className=\"col-lg-12 fundo-login\" style={{\r\n        paddingTop: '5,7%', paddingBottom: '5.5%',\r\n\r\n      }}>\r\n        <div className=\"perfil-desktop sombra \" style={{\r\n          //  border: '7px solid green'\r\n        }}>\r\n\r\n\r\n          <div className=\"row\" style={{\r\n            // border: '2px solid red'\r\n          }}\r\n\r\n          >\r\n            {/* DIV GRANDE DA ESQUERDA */}\r\n            <div className=\"col-lg-4\"\r\n              style={{\r\n                paddingTop: '7%', paddingLeft: '2%', paddingRight: '4%',\r\n                // border: '2px solid yellow',\r\n\r\n              }}\r\n            >\r\n{/* ROW DAS DUAS PRIMEIRAS DIVS DA ESQUERDA */}\r\n\r\n              <div className=\"row col-lg-12 linha-vertical\" style={{ marginLeft: '0%',\r\n\r\n\r\n                // border: '2px solid blue'\r\n              }}\r\n              >\r\n\r\n\r\n\r\n{/* IMAGEM */}\r\n                <div className=\"col-lg-12\" style={{\r\n                 \r\n                  // border: '2px solid green'\r\n                }}>\r\n\r\n                  <div  style={{textAlign: 'center',\r\n                 \r\n                //  border: '2px solid green'\r\n               }}>\r\n\r\n\r\n                  <img src=\"https://e7.pngegg.com/pngimages/867/694/png-clipart-user-profile-default-computer-icons-network-video-recorder-avatar-cartoon-maker-blue-text.png\" style={{ height: '120px', width: '120px', borderRadius: '80px', backgroundColor: 'blue' }} />\r\n\r\n                  </div>\r\n\r\n                  <div className=\"\"   style={{paddingTop: '10%', paddingLeft: '0%',\r\n                  // height: '100%',\r\n                  // border: '2px solid black'\r\n                }}>\r\n\r\n\r\n                  <h5 style={{\r\n                    color: '#171E9F',\r\n                  }} > Juliana Rodrigues</h5>\r\n                  <h7 style={{\r\n                    color: '#171E9F',\r\n                  }}> Coordenadora</h7><br></br>\r\n                  <h7 style={{\r\n                    color: '#171E9F',\r\n                  }}> Comitê Administrativo</h7><br></br><br></br><br></br>\r\n                  <h7 style={{\r\n                    color: '#171E9F', paddingTop: '40px',\r\n                  }}> Time   </h7><br></br>\r\n\r\n                  <h7 style={{\r\n                    color: '#171E9F', paddingTop: '10px',\r\n                  }}> &nbsp; &nbsp;&nbsp; &nbsp;       \r\n                  - Maria de Souza     </h7><br></br>\r\n                  <h7 style={{\r\n                    color: '#171E9F',\r\n                  }}> &nbsp; &nbsp;&nbsp; &nbsp;  - Luiza Silveira     </h7><br></br><br></br><br></br>\r\n\r\n\r\n                </div>\r\n\r\n                </div>\r\n\r\n             \r\n\r\n\r\n              </div>\r\n\r\n            </div >\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {/* DIV GRANDE DA DIREITA */}\r\n            <div className=\"col-lg-8\"\r\n              style={{\r\n                // border: '2px solid red',\r\n                paddingTop: '30px',\r\n                width: '100%', paddingRight: '5%',\r\n\r\n              }}\r\n            >\r\n\r\n              <div style={{\r\n                // border: '2px solid blue',\r\n                color: '#171E9F', paddingBottom: '420px', height: '40px',\r\n              }}>\r\n\r\n\r\n                <h4 style={{\r\n                  color: '#171E9F', paddingTop: '40px',\r\n                }} > Juliana Rodrigues</h4>\r\n                <h7 style={{\r\n                  color: '#171E9F',\r\n                }}> Telefone (12) 996457463</h7><br></br>\r\n                <h7 style={{\r\n                  color: '#171E9F',\r\n                }}> e-mail: julianarodrigues@gmail.com</h7><br></br>\r\n                <h7 style={{\r\n                  color: '#171E9F', paddingTop: '10px',\r\n                }}> Brasília - DF    </h7>\r\n                <h5 style={{\r\n                  color: '#171E9F', paddingTop: '10px',\r\n                }}>  Descrição</h5>\r\n                <h7 style={{\r\n                  color: '#171E9F',\r\n                }}>  Eu trabalho na rede desde sua fundação atuando principalmente na estruturação da instituição no atual cenário político brasileiro   </h7><br></br>\r\n                <h7 style={{\r\n                  color: '#171E9F' \r\n                }}>  Na rede desde 05/01/2019    </h7>\r\n                <h5 style={{\r\n                  color: '#171E9F', paddingTop: '10px',\r\n                }}>  Skills    </h5>\r\n                <h7 style={{\r\n                  color: '#171E9F', paddingTop: '10px',\r\n                }}> - Gestão digital     </h7><br></br>\r\n                <h7 style={{\r\n                  color: '#171E9F',\r\n                }}> - Marketing     </h7><br></br><br></br>\r\n                <h5 style={{\r\n                  color: '#171E9F', paddingTop: '3%',\r\n                }}> Pendências     </h5>\r\n                <h5>      </h5>\r\n\r\n\r\n              </div>\r\n\r\n              <div style={{\r\n                marginTop: '0%',\r\n                // border: '2px solid blue',\r\n\r\n              }}>\r\n\r\n\r\n                <table className=\" table-th table-round-corner table-striped table-condensed table-bordered\" style={{\r\n                  width: '100%',\r\n                  // border: ' 3px solid yellow',\r\n                  textAlign: 'center'\r\n                }} >\r\n                  <thead \r\n                  style={{\r\n                    backgroundColor: '#19296B',\r\n                    // border: ' 3px solid yellow',\r\n                    textAlign: 'center'\r\n                  }}\r\n                  >\r\n                    <tr>\r\n                      <th form-control scope=\"col \"\r\n                      //            \r\n                      >Código </th>\r\n                      <th scope=\"col\"> Atribuidor</th>\r\n                      <th scope=\"col\"> Entrega</th>\r\n                    </tr>\r\n\r\n                  </thead>\r\n                  <tbody >\r\n\r\n\r\n                    <tr className=\"table-td \" style={{\r\n                      backgroundColor: '#19296B',\r\n                      // border: ' 3px solid yellow',\r\n                      textAlign: 'center'\r\n                    }}>\r\n                      <th scope=\"row\">34</th>\r\n                      <td>Juliana</td>\r\n                      <td>20/08/2020</td>\r\n\r\n\r\n                    </tr>\r\n\r\n                    <tr className=\"table-td table-round-corner table-striped table-condensed table-bordered td\" style={{\r\n                      backgroundColor: '#D4D4DD',\r\n                      // border: ' 3px solid yellow',\r\n                      textAlign: 'center'\r\n                    }}>\r\n                      <th scope=\"row\">23</th>\r\n                      <td>Carlos</td>\r\n                      <td>26/08/2020</td>\r\n\r\n\r\n                    </tr>\r\n\r\n                  </tbody>\r\n\r\n                </table>\r\n\r\n              </div>\r\n\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default PerfilCoordenador;",["239","240"],"C:\\temp\\react-rede\\src\\Views\\PerfilComite.js",["241","242","243","244","245"],"import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport user from '../assets/user.svg';\r\n\r\nclass PerfilComite extends React.Component {\r\n\r\n    state = {\r\n        funcionario: { skill: [], regiao: {} },\r\n        segundaPagina: false, comite:{ regiao:{}}\r\n\r\n    }\r\n\r\n\r\n    handleSegundaPagina = () => {\r\n        this.setState({\r\n            segundaPagina: !this.state.segundaPagina\r\n        })\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n       \r\n        this.consultarComite()\r\n    }\r\n\r\n    consultarComite = () => {\r\n        const id = this.props.match.params.id;\r\n        axios.get(`https://java-rede-governanca-brasil.herokuapp.com/comites/${id}`)\r\n          .then(response => {\r\n            this.setState({\r\n                comite: response.data\r\n            })\r\n    \r\n    \r\n          }).catch(erro => {\r\n            alert(\" nao deu certo\")\r\n    \r\n          })\r\n      }\r\n\r\n\r\n  \r\n    render() {\r\n        return (\r\n\r\n\r\n\r\n            <div className=\"col-lg-12 fundo-login-perfil\" style={{\r\n                paddingTop: '5,7%', paddingBottom: '5.5%',\r\n\r\n            }}>\r\n                <div className=\"fundo-centralizado\">\r\n                {this.state.comite.urlFoto? \r\n                \r\n                <img className=\"sombra\" src={this.state.comite.urlFoto == \"vazio\"  ? user : this.state.comite.urlFoto} style={{\r\n                 \r\n                  borderRadius: '100%',\r\n\r\n                  width: '200px', height: '200px',\r\n\r\n                  //  border: '2px solid red'\r\n                }} />\r\n                :false}\r\n\r\n\r\n                    {/* <img src=\"https://e7.pngegg.com/pngimages/867/694/png-clipart-user-profile-default-computer-icons-network-video-recorder-avatar-cartoon-maker-blue-text.png\" style={{ height: '120px', width: '120px', borderRadius: '80px', backgroundColor: 'blue' }} /> */}\r\n\r\n\r\n                </div>\r\n                <div className=\"perfil-desktop sombra \" style={{\r\n                    marginTop: '-100px'\r\n                    //  border: '7px solid green'\r\n                }}>\r\n\r\n\r\n                    <div className=\"row\" style={{\r\n                        //  border: '2px solid red',\r\n                        paddingTop: '9%', paddingBottom: '9%'\r\n                    }}\r\n\r\n                    >\r\n                        {/* DIV GRANDE DA ESQUERDA */}\r\n                        <div className=\"col-lg-4 \"\r\n                            style={{\r\n                                borderRight: '1px solid #c9c9c9',\r\n\r\n\r\n                                // border: '2px solid yellow',\r\n\r\n                            }}\r\n                        >\r\n                            {/* ROW DAS DUAS PRIMEIRAS DIVS DA ESQUERDA */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            {/* IMAGEM */}\r\n\r\n\r\n                            <div className=\"\" style={{\r\n                                paddingTop: '10%', paddingLeft: '20%', paddingRight: '20%',\r\n                                // height: '100%',\r\n                                // border: '2px solid black'\r\n                            }}>\r\n\r\n                                <div className=\"fundo-centralizado\">\r\n\r\n                                    {/* <br></br><br></br> <h5 >Equipe</h5> */}\r\n                                </div>\r\n\r\n\r\n                                <br></br><br></br> <h5>Líderes</h5>\r\n                                <a href=\"http://localhost:3000/#/perfil-colaborador\">Lucas Mariano</a><br></br>\r\n                                <a href=\"http://localhost:3000/#/perfil-colaborador\">Olinto Mariano</a><br></br>\r\n                                <a href=\"http://localhost:3000/#/perfil-colaborador\">Lucas Pedreiros</a><br></br>\r\n\r\n\r\n                                {this.state.funcionario.coordenador == 0 ?\r\n                                    <div>\r\n\r\n                                        <br></br><br></br> <h5>Time</h5>\r\n                                        <a href=\"http://localhost:3000/#/perfil-colaborador\">Felipe dos Santos</a><br></br>\r\n                                        <a href=\"http://localhost:3000/#/perfil-colaborador\">Mariana dos Santos</a><br></br>\r\n                                        <a href=\"http://localhost:3000/#/perfil-colaborador\">Pedro Araujo</a><br></br>\r\n                                    </div> : false}\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n                        </div >\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-lg-8\"\r\n                                style={{\r\n                                    // border: '2px solid red',\r\n                                    paddingTop: '30px',\r\n                                     paddingRight: '5%',\r\n\r\n                                }}\r\n                            >\r\n                                   <div style={{ height: '190px' }}>\r\n                  <h4 style={{ color: '#0d2354' }} style={{ textAlign: 'right' }}> {this.state.comite.comite}</h4><br></br>\r\n\r\n                  <p style={{ textAlign: 'right' }}>\r\n                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-telephone\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <path fill-rule=\"evenodd\" d=\"M3.654 1.328a.678.678 0 0 0-1.015-.063L1.605 2.3c-.483.484-.661 1.169-.45 1.77a17.568 17.568 0 0 0 4.168 6.608 17.569 17.569 0 0 0 6.608 4.168c.601.211 1.286.033 1.77-.45l1.034-1.034a.678.678 0 0 0-.063-1.015l-2.307-1.794a.678.678 0 0 0-.58-.122l-2.19.547a1.745 1.745 0 0 1-1.657-.459L5.482 8.062a1.745 1.745 0 0 1-.46-1.657l.548-2.19a.678.678 0 0 0-.122-.58L3.654 1.328zM1.884.511a1.745 1.745 0 0 1 2.612.163L6.29 2.98c.329.423.445.974.315 1.494l-.547 2.19a.678.678 0 0 0 .178.643l2.457 2.457a.678.678 0 0 0 .644.178l2.189-.547a1.745 1.745 0 0 1 1.494.315l2.306 1.794c.829.645.905 1.87.163 2.611l-1.034 1.034c-.74.74-1.846 1.065-2.877.702a18.634 18.634 0 0 1-7.01-4.42 18.634 18.634 0 0 1-4.42-7.009c-.362-1.03-.037-2.137.703-2.877L1.885.511z\" />\r\n                    </svg> Telefone: {this.state.comite.celular}, <br></br>\r\n                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-envelope\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <path fill-rule=\"evenodd\" d=\"M0 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V4zm2-1a1 1 0 0 0-1 1v.217l7 4.2 7-4.2V4a1 1 0 0 0-1-1H2zm13 2.383l-4.758 2.855L15 11.114v-5.73zm-.034 6.878L9.271 8.82 8 9.583 6.728 8.82l-5.694 3.44A1 1 0 0 0 2 13h12a1 1 0 0 0 .966-.739zM1 11.114l4.758-2.876L1 5.383v5.73z\" />\r\n                    </svg> Email: {this.state.funcionario.email}, <br></br>\r\n                    {this.state.comite.regiao.cidade} - {this.state.comite.regiao.estado}\r\n                    <br></br>\r\n                      <br></br>\r\n                  </p>\r\n                </div>\r\n                <br></br><br></br>    <legend style ={{textAlign:'center'}}>Objetivos e Metas</legend>\r\n                <br></br>\r\n             \r\n\r\n\r\n                        {this.state.segundaPagina == false ?\r\n\r\n\r\n                         \r\n                                    <div>\r\n\r\n                                <div style={{\r\n                                    // border: '2px solid blue',\r\n                                    color: '#171E9F', paddingBottom: '50px',\r\n                                }}>\r\n\r\n                                    <div className=\"row\" style={{\r\n                                        paddingLeft: '10%',\r\n                                        // border: '2px solid blue'\r\n                                    }}>\r\n                                                                                <button onClick={this.handleSegundaPagina} style={{ fontSize: '15px', textAlign: 'center' }} type=\"button\" class=\"btn btn-info botao-objetivos-tamanho\">Compra do Sistema de Gestão</button> &nbsp;\r\n\r\n                                        <button onClick={this.handleSegundaPagina} style={{ fontSize: '15px', textAlign: 'center' }} type=\"button\" class=\"btn btn-info botao-objetivos-tamanho\">Compra do Sistema de Gestão</button> &nbsp;\r\n                                        <button onClick={this.handleSegundaPagina} style={{ fontSize: '15px', textAlign: 'center' }} type=\"button\" class=\"btn btn-info botao-objetivos-tamanho\">Estruturação do Site</button> &nbsp;\r\n\r\n                <button style={{ fontSize: '15px', textAlign: 'center' }} type=\"button\" class=\"btn btn-info botao-objetivos-tamanho\">Planejamento estratégico do RGB</button>\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"row\" style={{\r\n                                        paddingLeft: '10%',\r\n                                        // border: '2px solid blue'\r\n                                    }}>\r\n                                                                                <button onClick={this.handleSegundaPagina} style={{ fontSize: '15px', textAlign: 'center' }} type=\"button\" class=\"btn btn-info botao-objetivos-tamanho\">Compra do Sistema de Gestão</button> &nbsp;\r\n\r\n                                        <button style={{ fontSize: '15px', textAlign: 'center' }}\r\n                                            type=\"button\" class=\"btn btn-info botao-objetivos-tamanho\">Aprovação de novos colaboradores</button> &nbsp;\r\n\r\n                <button style={{ fontSize: '15px', textAlign: 'center' }} type=\"button\" class=\"btn btn-info botao-objetivos-tamanho\">Planejamento estratégico do RGB</button>\r\n\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginTop: '0%',\r\n                                    // border: '2px solid blue',\r\n\r\n                                }}>\r\n\r\n\r\n\r\n                                </div>\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                            : <div>\r\n\r\n                                {/* COMEÇO SEGUNDA PAGINA */}\r\n\r\n\r\n\r\n\r\n                                <div>\r\n\r\n                                    <div style={{\r\n                                        // border: '2px solid yellow',\r\n                                        color: '#171E9F', height: '100%', textAlign: 'center'\r\n                                    }}>\r\n\r\n<br></br><br></br> <h5 style={{textAlign:'center'}}>Objetivo: Compra do sistema de gestão</h5>\r\n\r\n\r\n\r\n\r\n                                        <div className=\"\" style={{\r\n                                            paddingRight: '10%',\r\n                                            // border: '2px solid blue'\r\n                                        }}>\r\n\r\n                                            <button style={{ fontSize: '22px', textAlign: 'center', }} type=\"button\" class=\"btn btn-info botao-compra\">Ação 1: Conversa com os técnicos</button>\r\n\r\n                                        </div>\r\n\r\n                                        <br></br>\r\n\r\n                                        <div className=\"\" style={{\r\n                                            paddingRight: '10%',\r\n                                            // border: '2px solid blue'\r\n                                        }}>\r\n                                            < button style={{ fontSize: '20px', textAlign: 'center', }} type=\"button\" class=\"btn btn-info botao-compra\">Ação 2: Estruturação do Servidor</button >\r\n\r\n                                        </div>\r\n                                        <br></br>\r\n\r\n                                        <div className=\"\" style={{\r\n                                            paddingRight: '10%',\r\n                                            // border: '2px solid blue'\r\n                                        }}>\r\n\r\n                                            <button style={{ fontSize: '20px', textAlign: 'center' }}\r\n                                                type=\"button\" class=\"btn btn-info botao-compra\">Ação 1: Pesquisa de Mercado</button>\r\n\r\n                                        </div>\r\n\r\n                                        <br></br>\r\n\r\n                                        <div className=\"\" style={{\r\n                                            paddingRight: '10%',\r\n                                            // border: '2px solid blue'\r\n                                        }}>\r\n                                            <button style={{ fontSize: '20px', textAlign: 'center' }} type=\"button\" class=\"btn btn-info botao-compra\">Ação 1: Aprovação do Valor</button>\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            </div>}\r\n                            </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default PerfilComite;","C:\\temp\\react-rede\\src\\Views\\ListaPendencia.js",["246"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport Pagination from '../Components/Pagination';\r\nimport { AuthContext } from '../Main/ProvedorAutenticacao';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nclass ListaPendencia extends React.Component {\r\n\r\n    state = {\r\n\r\n        listapendencias: [],\r\n        mensagemErro: null,\r\n        filtrar: false,\r\n        listaComites: [],\r\n        expandOrdenar:true,\r\n        paginaMinima: 1,\r\n    currentPage: 1,\r\n    postsPerPage: 5,\r\n    indexOfFirstPost: 1,\r\n    currentPosts: [],\r\n  }\r\n\r\n  \r\n  getCurrentPages = (pageNumber) => {\r\n\r\n    this.setState({\r\n      currentPage: pageNumber,\r\n      indexOfLastPost: pageNumber * this.state.postsPerPage,\r\n\r\n      indexOfFirstPost: (pageNumber * this.state.postsPerPage) - this.state.postsPerPage,\r\n    }, () => {\r\n\r\n\r\n\r\n      this.setState({\r\n        currentPosts: this.state.listapendencias.slice(this.state.indexOfFirstPost, this.state.indexOfLastPost)\r\n\r\n      }, ()=>{\r\n  \r\n\r\n      })\r\n\r\n    })\r\n  }\r\n  paginateScroll = (e) => {\r\n    if (this.state.paginaMinima + e > 0 &&\r\n      (this.state.paginaMinima + e) <= Math.ceil((this.state.listapendencias.length / this.state.postsPerPage))) {\r\n      this.setState({\r\n        paginaMinima: this.state.paginaMinima + e\r\n      })\r\n    }\r\n\r\n  }\r\n        \r\n    \r\n    \r\n\r\n      componentDidMount() {\r\n        this.listarPendeciasDoFuncionario()\r\n            }\r\n\r\n      listarPendeciasDoFuncionario= () => {\r\n\r\n        console.log(\"entrou na api Pendencias\")\r\n        axios.post('https://java-rede-governanca-brasil.herokuapp.com/pendencias/funcionario', {\r\n            cpf:this.context.user,\r\n        \r\n        }).then(response => {\r\n\r\n            this.setState({\r\n\r\n                listapendencias: response.data\r\n            \r\n        },()=>{\r\n            this.getCurrentPages(1)\r\n          })\r\nconsole.log(\"lista pendencias é\" , this.state.listapendencias)\r\n\r\n        }).catch(erroResposta => {\r\n          \r\n\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n    \r\n    \r\n          <div className=\"col-lg-12 fundo-login\" style={{\r\n            paddingTop: '4%', paddingBottom: '4%',\r\n    \r\n          }}>\r\n    \r\n        \r\n            <div className=\"perfil-desktop-aprovacao sombra \" style={{\r\n              paddingTop: '35px',\r\n              paddingLeft: '5%', paddingRight: '5%', paddingBottom: '5%'\r\n            }}>\r\n              <h4 style={{\r\n                textAlign: 'center',\r\n                // border: '2px solid black'\r\n              }}>Lista de pendências </h4>\r\n    \r\n              <p style={{ color: 'grey', fontSize: '15px', textAlign: 'right' }}>\r\n                <br></br>\r\n                {this.state.listapendencias.length} pendências encontrados\r\n              <br></br>\r\n              </p>\r\n    \r\n    \r\n    \r\n              <br></br>\r\n              <div className=\"scroll-box\" style={{ maxheight: '500px' }}>\r\n    \r\n    \r\n                <div style={{\r\n                  marginTop: '0%',\r\n    \r\n    \r\n                }}>\r\n                  <table class=\"table table-hover\">\r\n                    <thead>\r\n                      <tr >\r\n                        <th scope=\"col\">Titulo</th>\r\n                        <th scope=\"col\">Descrição</th>\r\n                        <th scope=\"col\">Data de Criação</th>\r\n                        <th scope=\"col\">Data Limite</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {this.state.currentPosts.map(blocoAtual => (\r\n    \r\n                        <tr>\r\n                          \r\n                          <td>{blocoAtual.titulo}</td>\r\n                          <td>{blocoAtual.descricao}</td>\r\n                          <td>{blocoAtual.dataCriacao}</td>\r\n                          <td>{blocoAtual.dataLimite}</td>\r\n                          <td>{blocoAtual.dataIntegracao}</td>\r\n                         \r\n                          {/* <td>{blocoAtual.aprovado == 10 ? \"Coordenador\" : \"Voluntário\"}</td> */}\r\n    \r\n    \r\n                        </tr>\r\n    \r\n                      ))}\r\n    \r\n    \r\n                    </tbody>\r\n                  </table>\r\n                  <div className=\"col-lg-12 fundo-centralizado\">\r\n\r\n<div >\r\n  <Pagination quantidadeShow={3} paginaMinima={this.state.paginaMinima} postsPerPage={this.state.postsPerPage}\r\n    totalPosts={this.state.listapendencias.length}\r\n    paginate={this.getCurrentPages} currentPage= {this.state.currentPage}\r\n    paginateScroll={this.paginateScroll}></Pagination>\r\n</div>\r\n</div>\r\n                </div>\r\n                {this.state.mensagemErro ?\r\n                  <div style={{ paddingLeft: '12%', paddingRight: '12%' }}>\r\n                    <div className=\"alert alert-dismissible alert-danger\" >\r\n                      <button type=\"button\" onClick={this.handleCaixaDeErro} className=\"close\" data-dismiss=\"alert\">×</button>\r\n                      <strong>Ops!</strong> {this.state.mensagemErro}\r\n                    </div></div> : false}\r\n              </div>\r\n            </div>\r\n          </div>\r\n    \r\n    \r\n        );\r\n    \r\n      }\r\n    }\r\n    \r\n    ListaPendencia.contextType = AuthContext;\r\n\r\n    export default ListaPendencia;\r\n\r\n","C:\\temp\\react-rede\\src\\Components\\Pagination.js",["247","248","249","250","251"],"import React from 'react';\r\n\r\nconst Pagination = ({currentPage, quantidadeShow, paginaMinima, postsPerPage, totalPosts, paginate, paginateScroll }) => {\r\n    const pageNumbers = [];\r\n\r\n    for (let i = paginaMinima; i <= Math.ceil((totalPosts / postsPerPage)); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n\r\n\r\n      \r\n\r\n        <div className=\"col-lg-12\">\r\n            {pageNumbers.length>0 ? \r\n              <div className=\"row\">\r\n            \r\n           \r\n            <ul class=\"pagination pagination-lg pagination-container\" style={{'overflow': 'hidden'}}>\r\n                <li class=\"page-item\">\r\n                    <a class=\"page-link\" onClick={() => paginateScroll(-quantidadeShow)}style={{color:'white'}}>&laquo;</a>\r\n                </li>\r\n                {pageNumbers.map((number,index) => (\r\n                    number <= paginaMinima + quantidadeShow-1?\r\n                    currentPage != number ?\r\n                    <li key={number} className='page-item'>\r\n                        <a onClick={() => paginate(number)} className='page-link' style={{color:'white'}}>\r\n                            {number}\r\n                        </a>\r\n                    </li>\r\n                    :\r\n                    <li key={number} className='page-item '>\r\n                    <a onClick={() => paginate(number)} className='page-link' style={{color:'white'}}>\r\n                            {number}\r\n                    </a>\r\n                </li>\r\n                    :false\r\n                ))}\r\n                <li class=\"page-item\">\r\n                    <a class=\"page-link\" onClick={() => paginateScroll(quantidadeShow)} style={{color:'white'}}> &raquo;</a>\r\n                </li>\r\n            </ul>\r\n        </div>:false}\r\n         </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;","C:\\temp\\react-rede\\src\\Components\\FotoUploader.js",["252"],"import ReactDOM from 'react-dom';\r\nimport React, { PureComponent } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport { storage } from '../firebase/Index'\r\nimport axios from 'axios';\r\n\r\nimport { AuthContext } from '../Main/ProvedorAutenticacao';\r\n\r\n\r\nclass FotoUploader extends PureComponent {\r\n    state = {\r\n        src: null,\r\n        salvar: false,\r\n        fim: false,\r\n        cpf: this.context.user,\r\n        crop: {\r\n            unit: '%',\r\n            width: 100,\r\n            aspect: 16 / 16,\r\n            carregando: false\r\n\r\n        },\r\n    };\r\n\r\n    handleCaixaDeErro = () => {\r\n        this.setState({\r\n            carregando: false,\r\n            mensagemSucesso: null,\r\n            mensagemErro: null\r\n        })\r\n    }\r\n    onSelectFile = e => {\r\n        console.log(\"selectectFile\")\r\n\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            const reader = new FileReader();\r\n            reader.addEventListener('load', () =>\r\n                this.setState({ src: reader.result })\r\n            );\r\n            reader.readAsDataURL(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    // If you setState the crop in here you should return false.\r\n    onImageLoaded = image => {\r\n        this.imageRef = image;\r\n    };\r\n\r\n    onCropComplete = crop => {\r\n        console.log(\"onCropComplete\")\r\n        this.makeClientCrop(crop);\r\n    };\r\n\r\n    onCropChange = (crop, percentCrop) => {\r\n        console.log(\"onCropChange\")\r\n\r\n        // You could also use percentCrop:\r\n        // this.setState({ crop: percentCrop });\r\n        this.setState({ crop });\r\n    };\r\n\r\n    async makeClientCrop(crop) {\r\n        console.log(\"makeClientCrop\")\r\n        if (this.imageRef && crop.width && crop.height) {\r\n            const croppedImageUrl = await this.getCroppedImg(\r\n                this.imageRef,\r\n                crop,\r\n                'newFile.jpeg'\r\n            );\r\n            this.setState({ croppedImageUrl });\r\n        }\r\n    }\r\n\r\n    getCroppedImg(image, crop, fileName) {\r\n        this.setState({\r\n            salvar: true\r\n        })\r\n        console.log(\"getCropedImg\")\r\n\r\n        const canvas = document.createElement('canvas');\r\n        const scaleX = image.naturalWidth / image.width;\r\n        const scaleY = image.naturalHeight / image.height;\r\n        canvas.width = crop.width;\r\n        canvas.height = crop.height;\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        ctx.drawImage(\r\n            image,\r\n            crop.x * scaleX,\r\n            crop.y * scaleY,\r\n            crop.width * scaleX,\r\n            crop.height * scaleY,\r\n            0,\r\n            0,\r\n            crop.width,\r\n            crop.height\r\n        );\r\n\r\n        return new Promise((resolve, reject) => {\r\n            console.log(\"promisse\")\r\n\r\n            canvas.toBlob(blob => {\r\n                if (!blob) {\r\n                    //reject(new Error('Canvas is empty'));\r\n                    console.error('Canvas is empty');\r\n                    return;\r\n                }\r\n                this.setState({\r\n                    blob: blob\r\n                })\r\n                blob.name = fileName;\r\n                console.log(\"blob.name\", blob)\r\n                console.log(\"\")\r\n                window.URL.revokeObjectURL(this.fileUrl);\r\n                this.fileUrl = window.URL.createObjectURL(blob);\r\n                resolve(this.fileUrl);\r\n            }, 'image/jpeg');\r\n        });\r\n    }\r\n\r\n\r\n    // }\r\n\r\n    enviar = () => {\r\n\r\n        this.setState({\r\n            carregando: true\r\n        })\r\n\r\n        var data = new Date();\r\n        var DataAtual = `${data.getFullYear()}-${data.getMonth() + 1}-${data.getDate()}-${data.getHours()}_${data.getMinutes()}:${data.getSeconds()}:${data.getMilliseconds()}`;\r\n\r\n        const uploadTask = storage.ref(`FOTO/D${DataAtual}`).put(this.state.blob);\r\n        uploadTask.on('state_changed',\r\n            snapshot => {\r\n                const progresso = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\r\n                this.setState({\r\n                    progress: progresso,\r\n                    progressPerCent: progresso / 100\r\n                })\r\n            }, (error) => {\r\n                console.log(error)\r\n                this.setState({\r\n                    carregando: null,\r\n                    mensagemErro: \"Houve problemas no upload da imagem! Tente novamente!\",\r\n                    mensagemSucesso: null\r\n                })\r\n            },\r\n            () => {\r\n                console.log(\"UPLOAD:\", uploadTask.snapshot.ref.getMetadata());\r\n\r\n                uploadTask.snapshot.ref.getDownloadURL().then(url => {\r\n                    this.setState({\r\n                        diretorio: url,\r\n\r\n                    }, () => {\r\n                        this.cadastrar(this.state.diretorio)\r\n                        console.log(this.state.diretorio)\r\n                    })\r\n                })\r\n\r\n            })\r\n\r\n    }\r\n\r\n\r\n    cadastrar = (url) => {\r\n        axios.put('https://java-rede-governanca-brasil.herokuapp.com/funcionarios/atualizar-foto', {\r\n            cpf: this.context.user,\r\n            urlFoto: url\r\n\r\n        },\r\n            {\r\n                headers: { Authorization: 'Bearer ' + sessionStorage.getItem('app-token') }\r\n            }).then(response => {\r\n                this.setState({\r\n                    mensagemSucesso: \"Foto atualizada com sucesso!\",\r\n                    carregando: false,\r\n                    fim: true\r\n                })\r\n\r\n                console.log(\"Valor uploderFoto\", this.state.cpf)\r\n\r\n            }).catch(erroResposta => {\r\n                console.log(\"estrutura de erro\", erroResposta.response.data.error)\r\n                this.setState({\r\n                    mensagemErro: erroResposta.response.data.error,\r\n                    carregando: false\r\n                })\r\n\r\n            })\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n\r\n        this.setState({ files: e.target.files }, () => {\r\n            console.log(\"file\", this.state.files)\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const { crop, croppedImageUrl, src } = this.state;\r\n\r\n        return (\r\n            <div className=\"\">\r\n                {!this.state.fim ?\r\n                    <div>\r\n                        {this.state.carregando ?\r\n                            <div className=\"\" style={{ marginTop: '15%', marginBottom: '2%' }}>\r\n                                Carregando ...\r\n                            </div>\r\n                            :\r\n                            this.state.mensagemSucesso || this.state.mensagemErro ?\r\n                                <div>\r\n                                    {this.state.mensagemErro ?\r\n                                        <div style={{ paddingLeft: '12%', paddingRight: '12%' }}>\r\n                                            <div className=\"alert alert-dismissible alert-danger\" >\r\n                                                <button type=\"button\" onClick={this.handleCaixaDeErro} className=\"close\" data-dismiss=\"alert\">×</button>\r\n                                                <strong>Ops!</strong> {this.state.mensagemErro}\r\n                                            </div></div> : false}\r\n                                    {this.state.mensagemSucesso ?\r\n                                        <div style={{ paddingLeft: '12%', paddingRight: '12%' }}>\r\n                                            <div className=\"alert alert-dismissible alert-success\" >\r\n                                                <button type=\"button\" onClick={this.handleCaixaDeErro} className=\"close\" data-dismiss=\"alert\">×</button>\r\n                                                <strong>Ops!</strong> {this.state.mensagemSucesso}\r\n                                            </div></div> : false}\r\n                                </div>\r\n                                :\r\n                                <div>\r\n\r\n\r\n                                    <br></br>                      <br></br>\r\n                                    <div>\r\n                                        <input type=\"file\" accept=\"image/*\" onChange={this.onSelectFile} />\r\n                                    </div>\r\n\r\n                                    {src && (\r\n                                        <div>\r\n\r\n                                            <br></br>\r\n\r\n                                            <ReactCrop\r\n                                                src={src}\r\n                                                crop={crop}\r\n                                                ruleOfThirds\r\n                                                onImageLoaded={this.onImageLoaded}\r\n                                                onComplete={this.onCropComplete}\r\n                                                onChange={this.onCropChange}\r\n                                            />\r\n                                        </div>\r\n                                    )}\r\n                                    <br></br><br></br>\r\n                                    {croppedImageUrl && (\r\n                                        <img alt=\"Crop\" style={{ maxWidth: '100%' }} src={croppedImageUrl} />\r\n                                    )}\r\n                                    <br></br><br></br>\r\n                                    {this.state.salvar ?\r\n                                        <button type=\"button\" onClick={(e) => this.enviar()} className=\"btn btn-primary btn-lg botao-tamanho\">Salvar</button>\r\n                                        : false}\r\n                                </div>\r\n                        }\r\n                    </div> :\r\n                    this.state.diretorio ?\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <img className=\"sombra\" src={this.state.diretorio} style={{\r\n                                    backgroundColor: '#19296B',\r\n                                    borderRadius: '100%',\r\n\r\n                                    width: '200px', height: '200px',\r\n\r\n                                    //  border: '2px solid red'\r\n                                }} />\r\n                            </div>\r\n                            <div className=\"col-lg-8\">\r\n\r\n                                <br></br>\r\n\r\n                                 <a href=\"http://http://localhost:3000/#/editar-dados-pessoais\"><button type=\"button\" class=\"btn btn-secondary\" style={{ width: '250px', marginBottom: '20px' }}>Atualizar Dados Pessoais</button></a>\r\n                                <br></br>\r\n\r\n\r\n                                <a href=\"http://localhost:3000/#/atualizar-skill\"><button type=\"button\" class=\"btn btn-info\" style={{ width: '250px', marginBottom: '20px' }}>Atualizar Skills</button></a>\r\n                                <br></br>\r\n\r\n\r\n                                <a href={`#/perfil-colaborador/${this.state.cpf}`}><button type=\"button\" class=\"btn btn-success\" style={{ width: '250px', marginBottom: '20px' }}> Visitar Meu Perfil</button></a>\r\n\r\n                            </div>\r\n                        </div>\r\n                        : false\r\n\r\n\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nFotoUploader.contextType = AuthContext;\r\nexport default FotoUploader;\r\nReactDOM.render(<FotoUploader />, document.getElementById('root'));\r\n","C:\\temp\\react-rede\\src\\Components\\FotoUploaderComite.js",["253"],"import ReactDOM from 'react-dom';\r\nimport React, { PureComponent } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport { storage } from '../firebase/Index'\r\nimport axios from 'axios';\r\n\r\nimport { AuthContext } from '../Main/ProvedorAutenticacao';\r\n\r\nclass FotoUploaderComite extends PureComponent {\r\n    state = {\r\n        src: null,\r\n        salvar: false,\r\n        fim: false,\r\n        cpf: this.context.user,\r\n        crop: {\r\n            unit: '%',\r\n            width: 100,\r\n            aspect: 16 / 16,\r\n            carregando: false\r\n\r\n        },\r\n    };\r\n\r\n    handleCaixaDeErro = () => {\r\n        this.setState({\r\n            carregando: false,\r\n            mensagemSucesso: null,\r\n            mensagemErro: null\r\n        })\r\n    }\r\n    onSelectFile = e => {\r\n        console.log(\"selectectFile\")\r\n\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            const reader = new FileReader();\r\n            reader.addEventListener('load', () =>\r\n                this.setState({ src: reader.result })\r\n            );\r\n            reader.readAsDataURL(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    // If you setState the crop in here you should return false.\r\n    onImageLoaded = image => {\r\n        this.imageRef = image;\r\n    };\r\n\r\n    onCropComplete = crop => {\r\n        console.log(\"onCropComplete\")\r\n        this.makeClientCrop(crop);\r\n    };\r\n\r\n    onCropChange = (crop, percentCrop) => {\r\n        console.log(\"onCropChange\")\r\n\r\n        // You could also use percentCrop:\r\n        // this.setState({ crop: percentCrop });\r\n        this.setState({ crop });\r\n    };\r\n\r\n    async makeClientCrop(crop) {\r\n        console.log(\"makeClientCrop\")\r\n        if (this.imageRef && crop.width && crop.height) {\r\n            const croppedImageUrl = await this.getCroppedImg(\r\n                this.imageRef,\r\n                crop,\r\n                'newFile.jpeg'\r\n            );\r\n            this.setState({ croppedImageUrl });\r\n        }\r\n    }\r\n\r\n    getCroppedImg(image, crop, fileName) {\r\n        this.setState({\r\n            salvar: true\r\n        })\r\n        console.log(\"getCropedImg\")\r\n\r\n        const canvas = document.createElement('canvas');\r\n        const scaleX = image.naturalWidth / image.width;\r\n        const scaleY = image.naturalHeight / image.height;\r\n        canvas.width = crop.width;\r\n        canvas.height = crop.height;\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        ctx.drawImage(\r\n            image,\r\n            crop.x * scaleX,\r\n            crop.y * scaleY,\r\n            crop.width * scaleX,\r\n            crop.height * scaleY,\r\n            0,\r\n            0,\r\n            crop.width,\r\n            crop.height\r\n        );\r\n\r\n        return new Promise((resolve, reject) => {\r\n            console.log(\"promisse\")\r\n\r\n            canvas.toBlob(blob => {\r\n                if (!blob) {\r\n                    //reject(new Error('Canvas is empty'));\r\n                    console.error('Canvas is empty');\r\n                    return;\r\n                }\r\n                this.setState({\r\n                    blob: blob\r\n                })\r\n                blob.name = fileName;\r\n                console.log(\"blob.name\", blob)\r\n                console.log(\"\")\r\n                window.URL.revokeObjectURL(this.fileUrl);\r\n                this.fileUrl = window.URL.createObjectURL(blob);\r\n                resolve(this.fileUrl);\r\n            }, 'image/jpeg');\r\n        });\r\n    }\r\n\r\n\r\n    // }\r\n\r\n    enviar = () => {\r\n\r\n        this.setState({\r\n            carregando: true\r\n        })\r\n\r\n        var data = new Date();\r\n        var DataAtual = `${data.getFullYear()}-${data.getMonth() + 1}-${data.getDate()}-${data.getHours()}_${data.getMinutes()}:${data.getSeconds()}:${data.getMilliseconds()}`;\r\n\r\n        const uploadTask = storage.ref(`FOTO/D${DataAtual}`).put(this.state.blob);\r\n        uploadTask.on('state_changed',\r\n            snapshot => {\r\n                const progresso = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\r\n                this.setState({\r\n                    progress: progresso,\r\n                    progressPerCent: progresso / 100\r\n                })\r\n            }, (error) => {\r\n                console.log(error)\r\n                this.setState({\r\n                    carregando: null,\r\n                    mensagemErro: \"Houve problemas no upload da imagem! Tente novamente!\",\r\n                    mensagemSucesso: null\r\n                })\r\n            },\r\n            () => {\r\n                console.log(\"UPLOAD:\", uploadTask.snapshot.ref.getMetadata());\r\n\r\n                uploadTask.snapshot.ref.getDownloadURL().then(url => {\r\n                    this.setState({\r\n                        diretorio: url,\r\n\r\n                    }, () => {\r\n                        this.cadastrar(this.state.diretorio)\r\n                        console.log(this.state.diretorio)\r\n                    })\r\n                })\r\n\r\n            })\r\n\r\n    }\r\n\r\n\r\n    cadastrar = (url) => {\r\n        axios.put('https://java-rede-governanca-brasil.herokuapp.com/funcionarios/atualizar-foto', {\r\n            cpf: this.context.user,\r\n            urlFoto: url\r\n\r\n        },\r\n            {\r\n                headers: { Authorization: 'Bearer ' + sessionStorage.getItem('app-token') }\r\n            }).then(response => {\r\n                this.setState({\r\n                    mensagemSucesso: \"Foto atualizada com sucesso!\",\r\n                    carregando: false,\r\n                    fim: true\r\n                })\r\n\r\n                console.log(\"Valor uploderFoto\", this.state.cpf)\r\n\r\n            }).catch(erroResposta => {\r\n                console.log(\"estrutura de erro\", erroResposta.response.data.error)\r\n                this.setState({\r\n                    mensagemErro: erroResposta.response.data.error,\r\n                    carregando: false\r\n                })\r\n\r\n            })\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n\r\n        this.setState({ files: e.target.files }, () => {\r\n            console.log(\"file\", this.state.files)\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const { crop, croppedImageUrl, src } = this.state;\r\n\r\n        return (\r\n            <div className=\"\">\r\n                {!this.state.fim ?\r\n                    <div>\r\n                        {this.state.carregando ?\r\n                            <div className=\"\" style={{ marginTop: '15%', marginBottom: '2%' }}>\r\n                                Carregando ...\r\n                            </div>\r\n                            :\r\n                            this.state.mensagemSucesso || this.state.mensagemErro ?\r\n                                <div>\r\n                                    {this.state.mensagemErro ?\r\n                                        <div style={{ paddingLeft: '12%', paddingRight: '12%' }}>\r\n                                            <div className=\"alert alert-dismissible alert-danger\" >\r\n                                                <button type=\"button\" onClick={this.handleCaixaDeErro} className=\"close\" data-dismiss=\"alert\">×</button>\r\n                                                <strong>Ops!</strong> {this.state.mensagemErro}\r\n                                            </div></div> : false}\r\n                                    {this.state.mensagemSucesso ?\r\n                                        <div style={{ paddingLeft: '12%', paddingRight: '12%' }}>\r\n                                            <div className=\"alert alert-dismissible alert-success\" >\r\n                                                <button type=\"button\" onClick={this.handleCaixaDeErro} className=\"close\" data-dismiss=\"alert\">×</button>\r\n                                                <strong>Ops!</strong> {this.state.mensagemSucesso}\r\n                                            </div></div> : false}\r\n                                </div>\r\n                                :\r\n                                <div>\r\n\r\n\r\n                                    <br></br>                      <br></br>\r\n                                    <div>\r\n                                        <input type=\"file\" accept=\"image/*\" onChange={this.onSelectFile} />\r\n                                    </div>\r\n\r\n                                    {src && (\r\n                                        <div>\r\n\r\n                                            <br></br>\r\n\r\n                                            <ReactCrop\r\n                                                src={src}\r\n                                                crop={crop}\r\n                                                ruleOfThirds\r\n                                                onImageLoaded={this.onImageLoaded}\r\n                                                onComplete={this.onCropComplete}\r\n                                                onChange={this.onCropChange}\r\n                                            />\r\n                                        </div>\r\n                                    )}\r\n                                    <br></br><br></br>\r\n                                    {croppedImageUrl && (\r\n                                        <img alt=\"Crop\" style={{ maxWidth: '100%' }} src={croppedImageUrl} />\r\n                                    )}\r\n                                    <br></br><br></br>\r\n                                    {this.state.salvar ?\r\n                                        <button type=\"button\" onClick={(e) => this.enviar()} className=\"btn btn-primary btn-lg botao-tamanho\">Salvar</button>\r\n                                        : false}\r\n                                </div>\r\n                        }\r\n                    </div> :\r\n                    this.state.diretorio ?\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <img className=\"sombra\" src={this.state.diretorio} style={{\r\n                                    backgroundColor: '#19296B',\r\n                                    borderRadius: '100%',\r\n\r\n                                    width: '200px', height: '200px',\r\n\r\n                                    //  border: '2px solid red'\r\n                                }} />\r\n                            </div>\r\n                            <div className=\"col-lg-8\">\r\n\r\n                                <br></br>\r\n\r\n                                 <a href=\"http://http://localhost:3000/#/editar-dados-pessoais\"><button type=\"button\" class=\"btn btn-secondary\" style={{ width: '250px', marginBottom: '20px' }}>Atualizar Dados Pessoais</button></a>\r\n                                <br></br>\r\n\r\n\r\n                                <a href=\"http://localhost:3000/#/atualizar-skill\"><button type=\"button\" class=\"btn btn-info\" style={{ width: '250px', marginBottom: '20px' }}>Atualizar Skills</button></a>\r\n                                <br></br>\r\n\r\n\r\n                                <a href={`#/perfil-colaborador/${this.state.cpf}`}><button type=\"button\" class=\"btn btn-success\" style={{ width: '250px', marginBottom: '20px' }}> Visitar Meu Perfil</button></a>\r\n\r\n                            </div>\r\n                        </div>\r\n                        : false\r\n\r\n\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFotoUploaderComite.contextType = AuthContext;\r\n\r\nexport default FotoUploaderComite;\r\n\r\nReactDOM.render(<FotoUploaderComite />, document.getElementById('root'));\r\n","C:\\temp\\react-rede\\src\\firebase\\Index.js",[],"C:\\temp\\react-rede\\src\\Views\\ListaReprovados.js",["254"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport NumberFormat from 'react-number-format';\r\nimport Pagination from '../Components/Pagination';\r\n\r\n\r\n\r\nclass ListaReprovados extends React.Component {\r\n\r\n\r\n  state = {\r\n    segundaPagina: false,\r\n    confirmarCadastro: false,\r\n    cpf: '',\r\n    nome: '',\r\n    inserir: '',\r\n    data: '',\r\n    endereco: '',\r\n    lider: '',\r\n    perfil: '',\r\n    cidade: '',\r\n    estado: '',\r\n    descricao: '',\r\n    dataIntegracao: '',\r\n    aprovado: '',\r\n    coordenador: '',\r\n    skill: '',\r\n    funcionarios: '',\r\n    regiao: '',\r\n    comite: '',\r\n    funcao: '',\r\n    celular: '',\r\n    mensagemErro: null,\r\n    mensagemSucesso: null,\r\n    dataNascimento: '',\r\n    email: '',\r\n    hierarquia: \"\",\r\n    senha: '',\r\n    senhaConfirm: '',\r\n    listaFuncoes: [],\r\n    listaSkills: [],\r\n    listaComites: [],\r\n    itemsSkills: [],\r\n    sucesso: false,\r\n    erro: null,\r\n    listaFuncionarios: [],\r\n    expandOrdenar: true,\r\n    paginaMinima: 1,\r\n    currentPage: 1,\r\n    postsPerPage: 5,\r\n    indexOfFirstPost: 1,\r\n    currentPosts: [],\r\n    // redirect: false\r\n\r\n  }\r\n\r\n  excluirReprovados = (cpf) => {\r\n    axios.delete(`https://java-rede-governanca-brasil.herokuapp.com/funcionarios/${cpf}`)\r\n        .then(response => {\r\n          \r\n            this.setState({\r\n              \r\n                mensagemSucesso: \"Funcionario foi desligado do sistema Rede Governança Brasil!\"\r\n            })\r\n            this.moverListaReprovados()\r\n        }).catch(erro => {\r\n            this.setState({\r\n                mensagemErro: erro.response.data.error,\r\n            })\r\n        })\r\n}\r\n\r\n\r\n  getCurrentPages = (pageNumber) => {\r\n\r\n    this.setState({\r\n      currentPage: pageNumber,\r\n      indexOfLastPost: pageNumber * this.state.postsPerPage,\r\n\r\n      indexOfFirstPost: (pageNumber * this.state.postsPerPage) - this.state.postsPerPage,\r\n    }, () => {\r\n\r\n\r\n\r\n      this.setState({\r\n        currentPosts: this.state.listaFuncionarios.slice(this.state.indexOfFirstPost, this.state.indexOfLastPost)\r\n\r\n      }, () => {\r\n\r\n\r\n      })\r\n\r\n    })\r\n  }\r\n  paginateScroll = (e) => {\r\n    if (this.state.paginaMinima + e > 0 &&\r\n      (this.state.paginaMinima + e) <= Math.ceil((this.state.listaFuncionarios.length / this.state.postsPerPage))) {\r\n      this.setState({\r\n        paginaMinima: this.state.paginaMinima + e\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    // this.consultarfuncionariosAtuais()\r\n    this.moverListaReprovados()\r\n  }\r\n\r\n  consultarfuncionariosAtuais = () => {\r\n    axios.get(`http://java-rede-governanca-brasil.herokuapp.com/funcionarios`)\r\n      .then(response => {\r\n        this.setState({\r\n          listaFuncionarios: response.data\r\n        }, () => {\r\n          this.getCurrentPages(1)\r\n        })\r\n        console.log(\"response foi:\", response.data)\r\n\r\n      }).catch(erro => {\r\n        this.setState({\r\n          mensagemErro: \"Erro no carregamento dos dados! Atualize a página!\"\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  moverListaReprovados = () => {\r\n    axios.get(`http://java-rede-governanca-brasil.herokuapp.com/funcionarios/reprovados`)\r\n      .then(response => {\r\n        this.setState({\r\n          listaFuncionarios: response.data\r\n        }, () => {\r\n          this.getCurrentPages(1)\r\n        })\r\n        console.log(\"response foi:\", response.data)\r\n\r\n      }).catch(erro => {\r\n        this.setState({\r\n          mensagemErro: \"Erro no carregamento dos dados! Atualize a página!\"\r\n        })\r\n      })\r\n  }\r\n\r\n\r\n  realizarAprovacao = (cpf, aprovado) => {\r\n    axios.post('https://java-rede-governanca-brasil.herokuapp.com/funcionarios/pendentes/aprovar/',\r\n      [{\r\n        cpf, aprovado\r\n      }])\r\n      .then(response => {\r\n        this.moverListaReprovados()\r\n        this.setState({\r\n          mensagemSucesso: \"Aprovação Realizada!\"\r\n        })\r\n        // this.consultarfuncionariosAtuais()\r\n      }).catch(erro => {\r\n        this.setState({\r\n          mensagemErro: erro.response.data.error\r\n        })\r\n      })\r\n  }\r\n\r\n \r\n\r\n  render() {\r\n    return (\r\n\r\n\r\n      <div className=\"col-lg-12 fundo-login\" style={{\r\n        paddingTop: '4%', paddingBottom: '4%',\r\n\r\n      }}>\r\n\r\n\r\n        <div className=\"perfil-desktop-aprovacao sombra \" style={{\r\n          paddingTop: '35px',\r\n          paddingLeft: '4%', paddingRight: '4%', paddingBottom: '5%'\r\n        }}>\r\n          <h4 style={{\r\n            textAlign: 'center',\r\n            // border: '2px solid black'\r\n          }}>Lista de Reprovados </h4>\r\n\r\n<p style={{ color: 'grey', fontSize: '15px', textAlign: 'right' }}>\r\n            <br></br>\r\n            {this.state.listaFuncionarios.length} funcionario(s) encontrados())\r\n          <br></br>\r\n          </p>\r\n\r\n\r\n\r\n          <br></br> \r\n\r\n          <br></br>\r\n          <div className=\"scroll-box\" style={{ maxheight: '500px' }}>\r\n\r\n\r\n            <div style={{\r\n              marginTop: '0%',\r\n\r\n\r\n            }}>\r\n\r\n\r\n\r\n\r\n              {/* <table class=\" table table-striped table-round-corner table-condensed table-bordered \">\r\n              <thead class=\"table-sm  \"\r\n              // style={{// border: ' 3px solid yellow',}}\r\n              >\r\n\r\n                <tr class=\" table-th table-striped table-round-corner table-condensed table-bordered\" style={{\r\n                  backgroundColor: '#19296B',\r\n                  // border: ' 3px solid yellow',\r\n\r\n                }}>\r\n                  <th form-control scope=\"col\"> nome </th>\r\n                  <th scope=\"col\"> email</th>\r\n                  <th scope=\"col\">  Celular </th>\r\n                  <th scope=\"col\"> data de Nascimento </th>\r\n                  <th scope=\"col\"> Perfil</th>\r\n                  <th scope=\"col\"> Aprovado</th>\r\n                  <th scope=\"col\"> Reprovado</th>\r\n                  <th scope=\"col\"> ID</th>\r\n\r\n                </tr>\r\n\r\n              </thead>\r\n              <tbody  >\r\n\r\n                          {this.state.listaFuncionarios.map(blocoAtual => (\r\n                  <tr className=\"table-td table-sm table-round-corner table-striped table-condensed table-bordered td \"\r\n                    style={{backgroundColor: '#C6D0E0',\r\n                      // border: ' 3px solid yellow',\r\n                    }} >\r\n\r\n                    <th scope=\"row \" style={{\r\n                      textAlign: 'Left'\r\n                      // border: ' 3px solid yellow',\r\n\r\n                    }}>{blocoAtual.nome}</th>\r\n                    <td>{blocoAtual.email}</td>\r\n                    <td>{blocoAtual.celular}</td>\r\n                    <td>{blocoAtual.dataNascimento}</td>\r\n                    <td>  <button style={{\r\n                      border: 'none'\r\n\r\n\r\n                    }} type=\"button\" class=\"btn btn-success botao-perfil-lista\"> <svg width=\"1.2em\" height=\"1.2em\" viewBox=\"0 0 16 16\" class=\"bi bi-search \" fill=\"#19296B\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path fill-rule=\"evenodd\" d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\" />\r\n                        <path fill-rule=\"evenodd\" d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\" />\r\n                      </svg></button>\r\n                    </td>\r\n                    <td> <button style={{ border: 'none', color: '#19296B' }} type=\"button\" className=\"btn btn-success  botao-perfil-lista\">Sim</button></td>\r\n                    <td> <button style={{ border: 'none', color: '#19296B' }} type=\"button\" className=\"btn btn-success  botao-perfil-lista\">Sim</button></td>\r\n                    <td>{blocoAtual.id}</td>\r\n\r\n                  </tr>\r\n\r\n                ))}\r\n\r\n              </tbody>\r\n            </table> */}\r\n              <table class=\"table table-hover\" >\r\n                <thead>\r\n                  <tr style={{ textAlign: \"center\" }}>\r\n                    <th scope=\"col\">Nome</th>\r\n                    <th scope=\"col\">CPF</th>\r\n                    <th scope=\"col\">Email</th>\r\n                    <th scope=\"col\">Celular</th>\r\n                    <th scope=\"col\">Nascimento</th>\r\n                    <th scope=\"col\">Ingresso</th>\r\n                    <th scope=\"col\">Região</th>\r\n                    <th scope=\"col\">Comitê</th>\r\n                    <th scope=\"col\">Recuperar</th>\r\n                    <th scope=\"col\">Excluir</th>\r\n                    {/* <th scope=\"col\">Coordenador</th> */}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.currentPosts.map(blocoAtual => (\r\n\r\n                    <tr>\r\n                       <th scope=\"\"><a href={`http://localhost:3000/#/perfil-colaborador/${blocoAtual.cpf}`}>{blocoAtual.nome}</a></th>\r\n                      <td>{blocoAtual.cpf}</td>\r\n                      <td>{blocoAtual.email}</td>\r\n                      <td>{blocoAtual.celular}</td>\r\n                      <td>{blocoAtual.dataNascimento}</td>\r\n                      <td>{blocoAtual.dataIntegracao}</td>\r\n                      <td>{`${blocoAtual.regiao.cidade}/${blocoAtual.regiao.estado}`}</td>\r\n                      <td>{blocoAtual.comite.comite}</td>\r\n                       <td><button type=\"button\" onClick={(e) => { this.realizarAprovacao(blocoAtual.cpf, 0) }} className=\"btn btn-primary\">Recuperar</button></td>\r\n                      <td><button type=\"button\" onClick={(e) => { this.excluirReprovados(blocoAtual.cpf) }} className=\"btn btn-secondary\">Excluir</button></td> \r\n                      {/* <td><button type=\"button\" onClick={(e) => { this.realizarAprovacao(blocoAtual.cpf, 10) }} className=\"btn btn-danger\">Coordenador</button></td> */}\r\n\r\n                    </tr>\r\n\r\n                  ))}\r\n\r\n\r\n                </tbody>\r\n              </table>\r\n\r\n              <div className=\"col-lg-12 fundo-centralizado\">\r\n\r\n                <div >\r\n                  <Pagination quantidadeShow={3} paginaMinima={this.state.paginaMinima} postsPerPage={this.state.postsPerPage}\r\n                    totalPosts={this.state.listaFuncionarios.length}\r\n                    paginate={this.getCurrentPages} currentPage={this.state.currentPage}\r\n                    paginateScroll={this.paginateScroll}></Pagination>\r\n                </div>\r\n              </div>\r\n\r\n\r\n\r\n            </div>\r\n            {this.state.mensagemErro ?\r\n              <div style={{ paddingLeft: '12%', paddingRight: '12%' }}>\r\n                <div className=\"alert alert-dismissible alert-danger\" >\r\n                  <button type=\"button\" onClick={this.handleCaixaDeErro} className=\"close\" data-dismiss=\"alert\">×</button>\r\n                  <strong>Ops!</strong> {this.state.mensagemErro}\r\n                </div></div> : false}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    );\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default ListaReprovados;","C:\\temp\\react-rede\\src\\Views\\PerfilFuncionarios.js",["255","256","257","258"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport user from '../assets/user.svg';\r\nimport Pagination from '../Components/Pagination';\r\nimport { AuthContext } from '../Main/ProvedorAutenticacao';\r\nclass PerfilFuncionarios extends React.Component {\r\n\r\n  state = {\r\n    funcionario: { skill: [], regiao: {} },comiteid:'', lideres:null, time:[], listapendencias:[],\r\n    //variáveis referentes a paginação\r\n    paginaMinima: 1,\r\n    currentPage: 1,\r\n    postsPerPage: 5,\r\n    indexOfFirstPost: 1,\r\n    currentPosts: [],\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.consultarFuncionario()\r\n    this.consultarLideres()\r\n    this.consultarTime()\r\n    this.listarPendeciasDoFuncionario()\r\n    \r\n  }\r\n  getCurrentPages = (pageNumber) => {\r\n\r\n    this.setState({\r\n      currentPage: pageNumber,\r\n      indexOfLastPost: pageNumber * this.state.postsPerPage,\r\n\r\n      indexOfFirstPost: (pageNumber * this.state.postsPerPage) - this.state.postsPerPage,\r\n    }, () => {\r\n\r\n\r\n\r\n      this.setState({\r\n        currentPosts: this.state.listapendencias.slice(this.state.indexOfFirstPost, this.state.indexOfLastPost)\r\n\r\n      }, ()=>{\r\n  \r\n\r\n      })\r\n\r\n    })\r\n  }\r\n  paginateScroll = (e) => {\r\n    if (this.state.paginaMinima + e > 0 &&\r\n      (this.state.paginaMinima + e) <= Math.ceil((this.state.listapendencias.length / this.state.postsPerPage))) {\r\n      this.setState({\r\n        paginaMinima: this.state.paginaMinima + e\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  listarPendeciasDoFuncionario= () => {\r\n    axios.post('https://java-rede-governanca-brasil.herokuapp.com/pendencias/funcionario', {\r\n\r\n        cpf:this.context.user,\r\n    \r\n    }).then(response => {\r\n\r\n        this.setState({\r\n\r\n            listapendencias: response.data\r\n        },()=>{\r\n          this.getCurrentPages(1)\r\n        })\r\nconsole.log(\"lista pendencias é\" , this.state.listapendencias)\r\n\r\n    }).catch(erroResposta => {\r\n        \r\n\r\n    })\r\n\r\n\r\n}\r\n\r\n  consultarLideres = () => {\r\n    const id = this.props.match.params.id;\r\n    axios.get(`https://java-rede-governanca-brasil.herokuapp.com/hierarquias/encontrar-lider/${id}`)\r\n      .then(response => {\r\n        this.setState({\r\n          lideres : response.data\r\n        })\r\n\r\n\r\n      }).catch(erro => {\r\n       // alert(\"ERRO AO CONSULTAR LÍDERES\")\r\n\r\n      })\r\n  }\r\n  consultarTime = () => {\r\n    const id = this.props.match.params.id;\r\n    axios.get(`https://java-rede-governanca-brasil.herokuapp.com/hierarquias/encontrar-time/${id}`)\r\n      .then(response => {\r\n    \r\n          console.log(\"entrou no menor que zero \")\r\n        this.setState({\r\n          time : response.data\r\n        })\r\n      \r\n\r\n\r\n      }).catch(erro => {\r\n        //alert(\"ERRO AO CONSULTAR time\")\r\n\r\n      })\r\n  }\r\n\r\n\r\n  consultarFuncionario = () => {\r\n    const id = this.props.match.params.id;\r\n    axios.get(`https://java-rede-governanca-brasil.herokuapp.com/funcionarios/${id}`)\r\n      .then(response => {\r\n        this.setState({\r\n          funcionario: response.data\r\n        }, ()=>{\r\n          this.consultarComite(this.state.funcionario.comite.id)\r\n          this.consultarFuncao(this.state.funcionario.funcao.id)\r\n        })\r\n\r\n\r\n      }).catch(erro => {\r\n        alert(\" nao deu certo\")\r\n\r\n      })\r\n  }\r\n  consultarComite = (id) => {\r\n    \r\n    axios.get(`https://java-rede-governanca-brasil.herokuapp.com/comites/${id}`)\r\n      .then(response => {\r\n        console.log(\"resposen\", response)\r\n        this.setState({\r\n          comite: response.data.comite,\r\n          comiteid: response.data.id\r\n        })\r\n\r\n\r\n      }).catch(erro => {\r\n        alert(\" nao deu certo\")\r\n\r\n      })\r\n  }\r\n  consultarFuncao = (id) => {\r\n    \r\n    axios.get(`https://java-rede-governanca-brasil.herokuapp.com/funcoes/${id}`)\r\n      .then(response => {\r\n        this.setState({\r\n          funcao: response.data.funcao\r\n        })\r\n\r\n\r\n      }).catch(erro => {\r\n        alert(\" nao deu certo\")\r\n\r\n      })\r\n  }\r\n\r\n  redirect =()=>{\r\n    \r\n  }\r\n  render() {\r\n    return (\r\n\r\n\r\n      <div className=\"col-lg-12 fundo-login-perfil\" style={{\r\n        paddingTop: '5,7%', paddingBottom: '5.5%',\r\n\r\n      }}>\r\n\r\n        <div className=\"perfil-desktop sombra \" style={{\r\n          //  border: '7px solid green'\r\n        }}>\r\n\r\n\r\n          <div className=\"row\" style={{\r\n            //  border: '2px solid red',\r\n            paddingTop: '9%', paddingBottom: '9%'\r\n          }}\r\n\r\n          >\r\n            {/* DIV GRANDE DA ESQUERDA */}\r\n            <div className=\"col-lg-4 \"\r\n              style={{\r\n                borderRight: '1px solid #c9c9c9',\r\n\r\n\r\n                // border: '2px solid yellow',\r\n\r\n              }}\r\n            >\r\n              {/* ROW DAS DUAS PRIMEIRAS DIVS DA ESQUERDA */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n              {/* IMAGEM */}\r\n              {this.state.funcionario.urlFoto?\r\n              <div className=\"fundo-centralizado\">\r\n                {this.state.funcionario.urlFoto? \r\n                \r\n                <img className=\"sombra\" src={this.state.funcionario.urlFoto == \"vazio\"? user : this.state.funcionario.urlFoto} style={{\r\n                 \r\n                  borderRadius: '100%',\r\n\r\n                  width: '200px', height: '200px',\r\n\r\n                  //  border: '2px solid red'\r\n                }} />\r\n                :false}\r\n\r\n                {/* <img src=\"https://e7.pngegg.com/pngimages/867/694/png-clipart-user-profile-default-computer-icons-network-video-recorder-avatar-cartoon-maker-blue-text.png\" style={{ height: '120px', width: '120px', borderRadius: '80px', backgroundColor: 'blue' }} /> */}\r\n\r\n\r\n              </div>\r\n              :false}\r\n\r\n              <div className=\"\" style={{\r\n                paddingTop: '10%', paddingLeft: '20%', paddingRight: '20%',\r\n                // height: '100%',\r\n                // border: '2px solid black'\r\n              }}>\r\n\r\n                <div className=\"fundo-centralizado\">\r\n\r\n                  <br></br><br></br><br></br><br></br> <h5 >{this.state.funcionario.nome}</h5>\r\n                </div>\r\n                <p> {this.state.funcao}<br></br>\r\n            \r\n                  <a href={`http://localhost:3000/#/perfil-comite/${this.state.comiteid}`}>{this.state.comite}</a><br></br>\r\n                  {this.state.funcionario.regiao.cidade}/{this.state.funcionario.regiao.estado}</p>\r\n\r\n                <br></br><br></br> <h5>Líder</h5>\r\n                {this.state.lideres?\r\n         \r\n                  <div>\r\n\r\n                    <a onClick ={this.redirect} href={`http://localhost:3000/#/perfil-colaborador/${this.state.lideres.cpf}`}>{this.state.lideres.nome}</a><br></br>\r\n                  </div>\r\n              \r\n                :false}\r\n               \r\n\r\n\r\n                {this.state.funcionario.coordenador == 0 ? \r\n                //this.state.time.length >0?\r\n                <div>\r\n                   <br></br><br></br> <h5>Time</h5>\r\n\r\n                {this.state.time.map(atual =>(\r\n                  <div>\r\n                <a href={`http://localhost:3000/#/perfil-colaborador/${atual.cpf}`}>{atual.nome}</a><br></br>\r\n\r\n                </div>\r\n                ))}\r\n              \r\n              </div>\r\n              //:false\r\n              :false}\r\n\r\n              </div>\r\n\r\n\r\n\r\n\r\n\r\n            </div >\r\n\r\n\r\n\r\n            {/* DIV GRANDE DA DIREITA */}\r\n            <div className=\"col-lg-8\"\r\n              style={{\r\n                // border: '2px solid red',\r\n\r\n\r\n              }}\r\n            >\r\n\r\n\r\n\r\n\r\n\r\n\r\n              <div style={{\r\n                // border: '2px solid blue',\r\n                paddingRight: '15%', paddingLeft: '15%', paddingBottom: '10%'\r\n              }}>\r\n\r\n                <div style={{ height: '190px' }}>\r\n                  <h2 style={{ color: '#0d2354' }} style={{ textAlign: 'right' }}> {this.state.funcionario.nome},</h2><br></br>\r\n\r\n                  <p style={{ textAlign: 'right' }}>\r\n                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-telephone\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <path fill-rule=\"evenodd\" d=\"M3.654 1.328a.678.678 0 0 0-1.015-.063L1.605 2.3c-.483.484-.661 1.169-.45 1.77a17.568 17.568 0 0 0 4.168 6.608 17.569 17.569 0 0 0 6.608 4.168c.601.211 1.286.033 1.77-.45l1.034-1.034a.678.678 0 0 0-.063-1.015l-2.307-1.794a.678.678 0 0 0-.58-.122l-2.19.547a1.745 1.745 0 0 1-1.657-.459L5.482 8.062a1.745 1.745 0 0 1-.46-1.657l.548-2.19a.678.678 0 0 0-.122-.58L3.654 1.328zM1.884.511a1.745 1.745 0 0 1 2.612.163L6.29 2.98c.329.423.445.974.315 1.494l-.547 2.19a.678.678 0 0 0 .178.643l2.457 2.457a.678.678 0 0 0 .644.178l2.189-.547a1.745 1.745 0 0 1 1.494.315l2.306 1.794c.829.645.905 1.87.163 2.611l-1.034 1.034c-.74.74-1.846 1.065-2.877.702a18.634 18.634 0 0 1-7.01-4.42 18.634 18.634 0 0 1-4.42-7.009c-.362-1.03-.037-2.137.703-2.877L1.885.511z\" />\r\n                    </svg> Telefone: {this.state.funcionario.celular}, <br></br>\r\n                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-envelope\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <path fill-rule=\"evenodd\" d=\"M0 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V4zm2-1a1 1 0 0 0-1 1v.217l7 4.2 7-4.2V4a1 1 0 0 0-1-1H2zm13 2.383l-4.758 2.855L15 11.114v-5.73zm-.034 6.878L9.271 8.82 8 9.583 6.728 8.82l-5.694 3.44A1 1 0 0 0 2 13h12a1 1 0 0 0 .966-.739zM1 11.114l4.758-2.876L1 5.383v5.73z\" />\r\n                    </svg> Email: {this.state.funcionario.email}, <br></br>\r\n                    {this.state.funcionario.regiao.cidade} - {this.state.funcionario.regiao.estado}\r\n                    <br></br>\r\n                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-cloud-download\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <path fill-rule=\"evenodd\" d=\"M4.406 1.342A5.53 5.53 0 0 1 8 0c2.69 0 4.923 2 5.166 4.579C14.758 4.804 16 6.137 16 7.773 16 9.569 14.502 11 12.687 11H10a.5.5 0 0 1 0-1h2.688C13.979 10 15 8.988 15 7.773c0-1.216-1.02-2.228-2.313-2.228h-.5v-.5C12.188 2.825 10.328 1 8 1a4.53 4.53 0 0 0-2.941 1.1c-.757.652-1.153 1.438-1.153 2.055v.448l-.445.049C2.064 4.805 1 5.952 1 7.318 1 8.785 2.23 10 3.781 10H6a.5.5 0 0 1 0 1H3.781C1.708 11 0 9.366 0 7.318c0-1.763 1.266-3.223 2.942-3.593.143-.863.698-1.723 1.464-2.383z\" />\r\n                      <path fill-rule=\"evenodd\" d=\"M7.646 15.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 14.293V5.5a.5.5 0 0 0-1 0v8.793l-2.146-2.147a.5.5 0 0 0-.708.708l3 3z\" />\r\n                    </svg>   <a href=\"http://localhost:3000/#/perfil-colaborador\">Baixar Currículo</a><br></br>\r\n                  </p>\r\n                </div>\r\n                <br></br><br></br> <h5> <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-person\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path fill-rule=\"evenodd\" d=\"M10 5a2 2 0 1 1-4 0 2 2 0 0 1 4 0zM8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm6 5c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z\" />\r\n                </svg> Descrição</h5>\r\n                <p style={{\r\n                  color: 'grey',\r\n                }}> {this.state.funcionario.descricao}     </p><br></br>\r\n\r\n                <br></br><hr></hr><br></br> <h5><svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-person-badge\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path fill-rule=\"evenodd\" d=\"M2 2.5A2.5 2.5 0 0 1 4.5 0h7A2.5 2.5 0 0 1 14 2.5V14a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2.5zM4.5 1A1.5 1.5 0 0 0 3 2.5v10.795a4.2 4.2 0 0 1 .776-.492C4.608 12.387 5.937 12 8 12s3.392.387 4.224.803a4.2 4.2 0 0 1 .776.492V2.5A1.5 1.5 0 0 0 11.5 1h-7z\" />\r\n                  <path fill-rule=\"evenodd\" d=\"M8 11a3 3 0 1 0 0-6 3 3 0 0 0 0 6zM6 2.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5z\" />\r\n                </svg> Skills</h5>\r\n\r\n                <ul>\r\n                  <div className=\"row\">\r\n                    {this.state.funcionario.skill.map(skillAtual => (\r\n                      <div className=\"col-lg-4\" style={{ width: '110%' }}>\r\n                        <li>{skillAtual.skill}</li>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </ul>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                <br></br><hr></hr><br></br> <h5><svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-list-check\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path fill-rule=\"evenodd\" d=\"M5 11.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zM3.854 2.146a.5.5 0 0 1 0 .708l-1.5 1.5a.5.5 0 0 1-.708 0l-.5-.5a.5.5 0 1 1 .708-.708L2 3.293l1.146-1.147a.5.5 0 0 1 .708 0zm0 4a.5.5 0 0 1 0 .708l-1.5 1.5a.5.5 0 0 1-.708 0l-.5-.5a.5.5 0 1 1 .708-.708L2 7.293l1.146-1.147a.5.5 0 0 1 .708 0zm0 4a.5.5 0 0 1 0 .708l-1.5 1.5a.5.5 0 0 1-.708 0l-.5-.5a.5.5 0 0 1 .708-.708l.146.147 1.146-1.147a.5.5 0 0 1 .708 0z\" />\r\n                </svg> Pendências</h5><br></br>\r\n\r\n                <div className=\"scroll-box\" style={{ maxheight: '500px' }}>\r\n    \r\n    \r\n    <div style={{\r\n      marginTop: '0%',\r\n\r\n\r\n    }}>\r\n      <table class=\"table table-hover\">\r\n        <thead>\r\n          <tr >\r\n            <th scope=\"col\">Titulo</th>\r\n            <th scope=\"col\">Descrição</th>\r\n            <th scope=\"col\">Data de Criação</th>\r\n            <th scope=\"col\">Data Limite</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.state.currentPosts.map(blocoAtual => (\r\n\r\n            <tr>\r\n              \r\n              <td>{blocoAtual.titulo}</td>\r\n              <td>{blocoAtual.descricao}</td>\r\n              <td>{blocoAtual.dataCriacao}</td>\r\n              <td>{blocoAtual.dataLimite}</td>\r\n              <td>{blocoAtual.dataIntegracao}</td>\r\n             \r\n              {/* <td>{blocoAtual.aprovado == 10 ? \"Coordenador\" : \"Voluntário\"}</td> */}\r\n\r\n\r\n            </tr>\r\n\r\n          ))}\r\n\r\n\r\n        </tbody>\r\n      </table>\r\n      <div className=\"col-lg-12 fundo-centralizado\">\r\n\r\n<div >\r\n  <Pagination quantidadeShow={3} paginaMinima={this.state.paginaMinima} postsPerPage={this.state.postsPerPage}\r\n    totalPosts={this.state.listapendencias.length}\r\n    paginate={this.getCurrentPages} currentPage= {this.state.currentPage}\r\n    paginateScroll={this.paginateScroll}></Pagination>\r\n</div>\r\n</div>\r\n    </div>\r\n    \r\n  </div>\r\n\r\n\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n\r\n    );\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\nPerfilFuncionarios.contextType = AuthContext;\r\n\r\nexport default PerfilFuncionarios;","C:\\temp\\react-rede\\src\\Views\\EditarDadosComite.js",["259","260","261","262","263"],"import React from 'react'\r\nimport NumberFormat from 'react-number-format'\r\nimport axios from 'axios';\r\nimport FotoUploaderComite from '../Components/FotoUploaderComite'\r\n\r\n\r\nclass EditarDadosComite extends React.Component {\r\n\r\n    state = {\r\n        nomeCompleto: '',\r\n        listaComites: [],\r\n        id: '',\r\n        cpf: '',\r\n        data: '',\r\n        selecioneCidade: '',\r\n        selecioneEstado: '',\r\n        descriçao: ''\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.consultarComite();\r\n        this.consultarComitesAtuais()\r\n    }\r\n\r\n    consultarComitesAtuais = () => {\r\n        axios.get(`http://java-rede-governanca-brasil.herokuapp.com/comites`)\r\n            .then(response => {\r\n                this.setState({\r\n                    listaComites: response.data\r\n                })\r\n                console.log(\"response foi:\", response.data)\r\n\r\n            }).catch(erro => {\r\n                this.setState({\r\n                    mensagemErro: \"Erro no carregamento Comites atuais! Atualize a página!\"\r\n                })\r\n            })\r\n    }\r\n    formatDate = (date) => {\r\n        var d = new Date(date),\r\n            month = '' + (d.getMonth() + 1),\r\n            day = '' + d.getDate(),\r\n            year = d.getFullYear();\r\n\r\n        if (month.length < 2)\r\n            month = '0' + month;\r\n        if (day.length < 2)\r\n            day = '0' + day;\r\n\r\n        return [day, month, year].join('-');\r\n    }\r\n\r\n    consultarComite = () => {\r\n        const id = this.props.match.params.id;\r\n        axios.get(`https://java-rede-governanca-brasil.herokuapp.com/comites/${id}`)\r\n            .then(response => {\r\n                this.setState({\r\n                    nome: response.data.comite,\r\n                    dataCriacao: this.formatDate(new Date(response.data.dataCriacao)),\r\n                    dataCriacao: response.data.dataCriacao,\r\n                    estado: response.data.regiao.estado,\r\n                    regiaoId: response.data.regiao.id,\r\n                    descricao: response.data.descricao,\r\n                   \r\n                }, () => {\r\n\r\n                    // console.log(\"data teste\", this.formatDate(new Date(response.data.dataCriacao)))\r\n                    this.encontrarCidadesDoEstadoSemAtualizar(this.state.estado)\r\n                })\r\n\r\n                console.log(\"Erro nome\", this.state.nome)\r\n                console.log(\"Erro descrição\", this.state.descricao)\r\n                console.log(\"Erro data\", this.state.dataCriacao)\r\n                console.log(\"Erro região\", this.state.regiaoId)\r\n\r\n\r\n            }).catch(erro => {\r\n                this.setState({\r\n                    mensagemErro: \"Erro ao carregar seus dados do Comite. Atualize a página!\"\r\n                })\r\n            })\r\n    }\r\n\r\n    botaoClicado = () => {\r\n        //enviar para o backend as variaveis coletadas\r\n        console.log(\"OS VALORES DIGITADOS FORAM\", this.state.inserir)\r\n    }\r\n\r\n    fecharModal = () => {\r\n        //fazer a modalzinha sumir\r\n        this.setState({\r\n            mensagemSucesso: null\r\n        })\r\n        //fazer o valor que esta no input sumir\r\n        this.setState({\r\n            inserir: ''\r\n        })\r\n\r\n    }\r\n    encontrarCidadesDoEstadoSemAtualizar = (estado) => {\r\n        axios.get(`https://java-rede-governanca-brasil.herokuapp.com/regioes/cidades/${estado}`, {\r\n        }).then(response => {\r\n            this.setState({\r\n                listaDeCidadesDoEstado: response.data\r\n            }, () => {\r\n\r\n                this.setState({\r\n                    mostrarCidade: true\r\n\r\n\r\n\r\n                })\r\n\r\n            })\r\n\r\n\r\n        }).catch(erroResposta => {\r\n            alert(\"ALGUM ERRO\")\r\n\r\n\r\n        })\r\n\r\n    }\r\n    encontrarCidadesDoEstado = (estado) => {\r\n        axios.get(`https://java-rede-governanca-brasil.herokuapp.com/regioes/cidades/${estado}`, {\r\n        }).then(response => {\r\n            this.setState({\r\n                listaDeCidadesDoEstado: response.data\r\n            }, () => {\r\n                this.setState({\r\n                    mostrarCidade: true\r\n                })\r\n            })\r\n\r\n\r\n        }).catch(erroResposta => {\r\n            alert(\"ALGUM ERRO\")\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    // cadastrar chamar a api\r\n\r\n    atualizarDadosComite = () => {\r\n        console.log(\"chamando a api\")\r\n        axios.put('https://java-rede-governanca-brasil.herokuapp.com/comites/atualizar-dados', {\r\n            id: this.props.match.params.id,\r\n            comite: this.state.nome,\r\n\r\n            // email: this.state.email,\r\n            // celular: this.state.celular,\r\n            descricao: this.state.descricao,\r\n            // cpf: sessionStorage.getItem('app-id'),   c\r\n            // dataNascimento: this.state.dataNascimento,\r\n            dataCriacao: this.state.dataCriacao,\r\n            regiao: { id: this.state.regiaoId }\r\n\r\n\r\n        }).then(response => {\r\n\r\n            console.log(\"entrou no than\")\r\n            this.setState({\r\n                sucesso: true,\r\n                mensagemSucesso: \"Atualizado dados do Comite com sucesso!\"\r\n\r\n            })\r\n\r\n        }).catch(erroResposta => {\r\n            console.log(\"Erro no Alterar dados do Comite\", erroResposta.response.data.error)\r\n            this.setState({\r\n                mensagemErro: erroResposta.response.data.error\r\n            })\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n    handleData = (e) => {\r\n        this.limparMensagens()\r\n        console.log(\" e.target.value\", e.target.value)\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            dataCriacao: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.data)\r\n\r\n    }\r\n\r\n    handleInserir = (e) => {\r\n        //fazer a modalzinha sumir\r\n        this.fecharModal()\r\n\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            inserir: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.inserir)\r\n\r\n    }\r\n\r\n\r\n    limparMensagens = () => {\r\n        if (this.state.mensagemErro != null || this.state.mensagemErro != false ||\r\n            this.state.mensagemSucesso != null || this.state.mensagemSucesso) {\r\n            this.setState({\r\n                mensagemErro: false,\r\n                mensagemSucesso: false\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    handleNome = (e) => {\r\n        this.limparMensagens()\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            nome: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.nome)\r\n\r\n    }\r\n\r\n\r\n\r\n    // handleDataNascimento = (e) => {\r\n\r\n    //     this.limparMensagens()\r\n\r\n    //     //variaveis do tipo state para receber valor é daseguinte forma\r\n    //     this.setState({\r\n    //         dataNascimento: e.target.value\r\n    //     })\r\n\r\n    //     //imprimir ou acessar valores do tipo state\r\n    //     console.log(this.state.data)\r\n\r\n    // }\r\n\r\n    // handleDataIntegracao = (e) => {\r\n    //     //variaveis do tipo state para receber valor é daseguinte forma\r\n    //     this.setState({\r\n    //         dataIntegracao: e.target.value\r\n    //     })\r\n\r\n    //     //imprimir ou acessar valores do tipo state\r\n    //     console.log(this.state.data)\r\n\r\n    // }\r\n\r\n\r\n\r\n    handleDescricao = (e) => {\r\n        this.limparMensagens()\r\n\r\n        //variaveis do tipo state para receber valor é daseguinte forma\r\n        this.setState({\r\n            descricao: e.target.value\r\n        })\r\n\r\n        //imprimir ou acessar valores do tipo state\r\n        console.log(this.state.descricao)\r\n\r\n    }\r\n\r\n    // handleDataIntegracao = (e) => {\r\n    //     this.limparMensagens()\r\n\r\n    //     console.log(\"eai\", this.state.e)\r\n    //     //variaveis do tipo state para receber valor é daseguinte forma\r\n    //     this.setState({\r\n    //         dataIntegracao: e.target.value\r\n    //     })\r\n\r\n    //     //imprimir ou acessar valores do tipo state\r\n    //     console.log(this.state.dataIntegracao)\r\n\r\n    // }\r\n    handleEstado = (e) => {\r\n        this.limparMensagens()\r\n\r\n        this.setState({\r\n            estado: e.target.value\r\n        }, () => {\r\n            this.setState({\r\n                valueEstado: this.state.estado\r\n            }, () => {\r\n                this.encontrarCidadesDoEstado(this.state.estado)\r\n            })\r\n        })\r\n    }\r\n    handleCidade = (e) => {\r\n        this.setState({\r\n\r\n            regiaoId: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"col-lg-12 fundo-login\">\r\n                <div className=\"pendencia-desktop sombra campo-ao-lado text-center\">\r\n                    <legend>Alterar dados do Comitê</legend><p></p>\r\n\r\n                    <div className=\"row\" style={{ marginLeft: \"10%\", marginRight: \"10%\" }}>\r\n                        <div className=\"col-lg-6\">\r\n                            <div className=\"form-group\">\r\n\r\n                                <label>Nome</label>\r\n                                <input value={this.state.nome} onChange={(e) => { this.handleNome(e) }} type=\"text\" className=\"form-control\" placeholder=\"Nome\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>Data da Criação</label>\r\n                                <input value={this.state.dataCriacao} onChange={(e) => { this.handleData(e) }} type=\"date\" className=\"form-control\" placeholder=\"Data\" />\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-12\">\r\n                            <div className=\"\" style={{\r\n                                marginLeft: '0%', marginRight: '0%', paddingBottom: '2%',\r\n                                // border: '2px solid black'\r\n                            }}>\r\n                                <label htmlFor=\"exampleTextarea\">Descrição</label>\r\n                                <textarea className=\"form-control\" value={this.state.descricao} id=\"exampleTextarea\" onChange={(e) => { this.handleDescricao(e) }} rows={3} placeholder=\"Descrição\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-6\" style={{\r\n\r\n                            // border: '2px solid yellow'\r\n\r\n\r\n                            // border: '2px solid green'\r\n                        }}>\r\n                            <label htmlFor=\"exampleSelect2\">Selecione o Estado</label>\r\n                            <select value={this.state.estado} onChange={(e) => { this.handleEstado(e) }} className=\"form-control\" id=\"exampleSelect2\">\r\n                                <option>Selecionar</option>\r\n                                <option value=\"RO\">RO</option>\r\n                                <option value=\"AC\">AC</option>\r\n                                <option value=\"AM\">AM</option>\r\n                                <option value=\"RR\">RR</option>\r\n                                <option value=\"PA\">PA</option>\r\n                                <option value=\"AP\">AP</option>\r\n                                <option value=\"TO\">TO</option>\r\n                                <option value=\"MA\">MA</option>\r\n                                <option value=\"PI\">PI</option>\r\n                                <option value=\"CE\">CE</option>\r\n                                <option value=\"RN\">RN</option>\r\n                                <option value=\"PB\">PB</option>\r\n                                <option value=\"PE\">PE</option>\r\n                                <option value=\"AL\">AL</option>\r\n                                <option value=\"SE\">SE</option>\r\n                                <option value=\"BA\">BA</option>\r\n                                <option value=\"MG\">MG</option>\r\n                                <option value=\"ES\">ES</option>\r\n                                <option value=\"RJ\">RJ</option>\r\n                                <option value=\"SP\">SP</option>\r\n                                <option value=\"PR\">PR</option>\r\n                                <option value=\"SC\">SC</option>\r\n                                <option value=\"RS\">RS</option>\r\n                                <option value=\"MS\">MS</option>\r\n                                <option value=\"MT\">MT</option>\r\n                                <option value=\"GO\">GO</option>\r\n                                <option value=\"DF\">DF</option>\r\n\r\n                            </select>\r\n                        </div>\r\n                        {this.state.mostrarCidade ?\r\n\r\n                            <div style={{\r\n\r\n                            }} className=\"col-lg-6 \" style={{\r\n                                paddingRight: '5px', paddingLeft: '0px',\r\n                                // border: '2px solid yellow'\r\n                            }}\r\n                            >\r\n                                <label htmlFor=\"exampleSelect1\">Selecione a Cidade</label>\r\n                                <select value={this.state.regiaoId} onChange={(e) => this.handleCidade(e)} style={{\r\n                                    // border: '2px solid blue'\r\n                                }} className=\"form-control\" id=\"exampleSelect1\">\r\n                                    <option>Selecionar</option>\r\n                                    {this.state.listaDeCidadesDoEstado.map(cidade => (\r\n                                        <option value={cidade.id}>{cidade.cidade}</option>\r\n                                    ))}\r\n\r\n                                </select>\r\n                            </div>\r\n                            : false}\r\n                        <br></br>\r\n\r\n                    </div>\r\n\r\n                    <br></br> <br></br>\r\n\r\n\r\n                    {/* DIV DA FOTO UPLOADER DO COMITE - VOU COMENTAR\r\n\r\n\r\n                    <div className=\"col-lg-12\" style={{paddingTop: '0px', marginLeft: \"0%\", marginRight: \"15%\" }}>\r\n                          \r\n\r\n\r\n                          <label>Selecionar foto do Comitê</label>\r\n                          <div style={{ paddingBotton: '80px', height: '80px', marginLeft: \"14%\", marginRight: \"15%\" }}>\r\n                          <FotoUploaderComite></FotoUploaderComite >\r\n                          </div>\r\n                          \r\n                          <br></br> <br></br>\r\n                        \r\n                      </div> */}\r\n\r\n                    <div className=\"\"\r\n                        style={{ marginLeft: \"30%\", marginRight: \"30%\" }}\r\n                    >\r\n\r\n                        <button type=\"button\" onClick={this.atualizarDadosComite} className=\"btn btn-primary btn-lg botao-tamanho\">Criar</button>\r\n                    </div>\r\n\r\n                    <br></br>\r\n\r\n                    {this.state.mensagemErro ?\r\n                        <div style={{ paddingLeft: '12%', paddingRight: '12%' }}>\r\n                            <div className=\"alert alert-dismissible alert-danger\" >\r\n                                <button type=\"button\" onClick={this.handleCaixaDeErro} className=\"close\" data-dismiss=\"alert\">×</button>\r\n                                <strong>Ops!</strong> {this.state.mensagemErro}\r\n                            </div></div> : false}\r\n\r\n                    <br></br>\r\n                    {this.state.mensagemSucesso ?\r\n                        <div className=\"alert alert-dismissible alert-success\">\r\n                            <button onClick={this.fecharModal} type=\"button\" className=\"close\" data-dismiss=\"alert\">×</button>\r\n                            {this.state.mensagemSucesso}\r\n                        </div>\r\n\r\n                        : false}\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default EditarDadosComite;",{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","replacedBy":"267"},{"ruleId":"268","severity":1,"message":"269","line":44,"column":16,"nodeType":"270","messageId":"271","endLine":44,"endColumn":18},{"ruleId":"268","severity":1,"message":"269","line":46,"column":23,"nodeType":"270","messageId":"271","endLine":46,"endColumn":25},{"ruleId":"268","severity":1,"message":"269","line":49,"column":23,"nodeType":"270","messageId":"271","endLine":49,"endColumn":25},{"ruleId":"272","severity":1,"message":"273","line":4,"column":8,"nodeType":"274","messageId":"275","endLine":4,"endColumn":16},{"ruleId":"268","severity":1,"message":"269","line":189,"column":70,"nodeType":"270","messageId":"271","endLine":189,"endColumn":72},{"ruleId":"276","severity":1,"message":"277","line":194,"column":19,"nodeType":"278","endLine":194,"endColumn":184},{"ruleId":"276","severity":1,"message":"277","line":206,"column":19,"nodeType":"278","endLine":206,"endColumn":182},{"ruleId":"276","severity":1,"message":"277","line":227,"column":21,"nodeType":"278","endLine":227,"endColumn":184},{"ruleId":"276","severity":1,"message":"277","line":254,"column":21,"nodeType":"278","endLine":254,"endColumn":190},{"ruleId":"276","severity":1,"message":"277","line":264,"column":21,"nodeType":"278","endLine":264,"endColumn":193},{"ruleId":"272","severity":1,"message":"279","line":3,"column":10,"nodeType":"274","messageId":"275","endLine":3,"endColumn":15},{"ruleId":"268","severity":1,"message":"269","line":12,"column":39,"nodeType":"270","messageId":"271","endLine":12,"endColumn":41},{"ruleId":"268","severity":1,"message":"269","line":14,"column":44,"nodeType":"270","messageId":"271","endLine":14,"endColumn":46},{"ruleId":"272","severity":1,"message":"280","line":44,"column":13,"nodeType":"274","messageId":"275","endLine":44,"endColumn":18},{"ruleId":"268","severity":1,"message":"269","line":8,"column":20,"nodeType":"270","messageId":"271","endLine":8,"endColumn":22},{"ruleId":"272","severity":1,"message":"281","line":2,"column":10,"nodeType":"274","messageId":"275","endLine":2,"endColumn":21},{"ruleId":"268","severity":1,"message":"269","line":18,"column":59,"nodeType":"270","messageId":"271","endLine":18,"endColumn":61},{"ruleId":"282","severity":1,"message":"283","line":47,"column":11,"nodeType":"284","messageId":"285","endLine":47,"endColumn":78},{"ruleId":"272","severity":1,"message":"286","line":8,"column":8,"nodeType":"274","messageId":"275","endLine":8,"endColumn":21},{"ruleId":"272","severity":1,"message":"287","line":9,"column":8,"nodeType":"274","messageId":"275","endLine":9,"endColumn":20},{"ruleId":"288","severity":1,"message":"289","line":43,"column":9,"nodeType":"290","messageId":"271","endLine":43,"endColumn":14},{"ruleId":"268","severity":1,"message":"291","line":71,"column":36,"nodeType":"270","messageId":"271","endLine":71,"endColumn":38},{"ruleId":"268","severity":1,"message":"269","line":74,"column":69,"nodeType":"270","messageId":"271","endLine":74,"endColumn":71},{"ruleId":"272","severity":1,"message":"292","line":135,"column":9,"nodeType":"274","messageId":"275","endLine":135,"endColumn":17},{"ruleId":"288","severity":1,"message":"293","line":188,"column":13,"nodeType":"290","messageId":"271","endLine":188,"endColumn":27},{"ruleId":"268","severity":1,"message":"269","line":628,"column":30,"nodeType":"270","messageId":"271","endLine":628,"endColumn":32},{"ruleId":"268","severity":1,"message":"291","line":635,"column":80,"nodeType":"270","messageId":"271","endLine":635,"endColumn":82},{"ruleId":"268","severity":1,"message":"269","line":655,"column":44,"nodeType":"270","messageId":"271","endLine":655,"endColumn":46},{"ruleId":"294","severity":1,"message":"295","line":892,"column":62,"nodeType":"296","endLine":895,"endColumn":39},{"ruleId":"268","severity":1,"message":"269","line":951,"column":48,"nodeType":"270","messageId":"271","endLine":951,"endColumn":50},{"ruleId":"268","severity":1,"message":"269","line":114,"column":34,"nodeType":"270","messageId":"271","endLine":114,"endColumn":36},{"ruleId":"268","severity":1,"message":"291","line":121,"column":84,"nodeType":"270","messageId":"271","endLine":121,"endColumn":86},{"ruleId":"268","severity":1,"message":"291","line":129,"column":53,"nodeType":"270","messageId":"271","endLine":129,"endColumn":55},{"ruleId":"268","severity":1,"message":"269","line":131,"column":86,"nodeType":"270","messageId":"271","endLine":131,"endColumn":88},{"ruleId":"268","severity":1,"message":"269","line":164,"column":45,"nodeType":"270","messageId":"271","endLine":164,"endColumn":47},{"ruleId":"268","severity":1,"message":"269","line":198,"column":49,"nodeType":"270","messageId":"271","endLine":198,"endColumn":51},{"ruleId":"294","severity":1,"message":"295","line":98,"column":94,"nodeType":"296","endLine":98,"endColumn":116},{"ruleId":"294","severity":1,"message":"295","line":125,"column":94,"nodeType":"296","endLine":125,"endColumn":116},{"ruleId":"272","severity":1,"message":"297","line":4,"column":8,"nodeType":"274","messageId":"275","endLine":4,"endColumn":13},{"ruleId":"272","severity":1,"message":"298","line":5,"column":8,"nodeType":"274","messageId":"275","endLine":5,"endColumn":20},{"ruleId":"272","severity":1,"message":"286","line":8,"column":8,"nodeType":"274","messageId":"275","endLine":8,"endColumn":21},{"ruleId":"272","severity":1,"message":"287","line":9,"column":8,"nodeType":"274","messageId":"275","endLine":9,"endColumn":20},{"ruleId":"299","severity":1,"message":"300","line":72,"column":29,"nodeType":"278","endLine":72,"endColumn":196},{"ruleId":"268","severity":1,"message":"291","line":266,"column":72,"nodeType":"270","messageId":"271","endLine":266,"endColumn":74},{"ruleId":"294","severity":1,"message":"295","line":526,"column":62,"nodeType":"296","endLine":529,"endColumn":39},{"ruleId":"299","severity":1,"message":"300","line":206,"column":21,"nodeType":"278","endLine":213,"endColumn":26},{"ruleId":"268","severity":1,"message":"269","line":206,"column":81,"nodeType":"270","messageId":"271","endLine":206,"endColumn":83},{"ruleId":"268","severity":1,"message":"269","line":249,"column":53,"nodeType":"270","messageId":"271","endLine":249,"endColumn":55},{"ruleId":"294","severity":1,"message":"295","line":298,"column":52,"nodeType":"296","endLine":298,"endColumn":82},{"ruleId":"272","severity":1,"message":"301","line":3,"column":8,"nodeType":"274","messageId":"275","endLine":3,"endColumn":26},{"ruleId":"272","severity":1,"message":"298","line":5,"column":8,"nodeType":"274","messageId":"275","endLine":5,"endColumn":20},{"ruleId":"272","severity":1,"message":"302","line":85,"column":11,"nodeType":"274","messageId":"275","endLine":85,"endColumn":23},{"ruleId":"268","severity":1,"message":"291","line":88,"column":58,"nodeType":"270","messageId":"271","endLine":88,"endColumn":60},{"ruleId":"268","severity":1,"message":"291","line":92,"column":58,"nodeType":"270","messageId":"271","endLine":92,"endColumn":60},{"ruleId":"268","severity":1,"message":"291","line":96,"column":56,"nodeType":"270","messageId":"271","endLine":96,"endColumn":58},{"ruleId":"268","severity":1,"message":"291","line":99,"column":62,"nodeType":"270","messageId":"271","endLine":99,"endColumn":64},{"ruleId":"272","severity":1,"message":"303","line":144,"column":9,"nodeType":"274","messageId":"275","endLine":144,"endColumn":18},{"ruleId":"276","severity":1,"message":"277","line":619,"column":13,"nodeType":"278","endLine":619,"endColumn":77},{"ruleId":"276","severity":1,"message":"277","line":620,"column":13,"nodeType":"278","endLine":620,"endColumn":76},{"ruleId":"268","severity":1,"message":"269","line":694,"column":51,"nodeType":"270","messageId":"271","endLine":694,"endColumn":53},{"ruleId":"268","severity":1,"message":"269","line":694,"column":94,"nodeType":"270","messageId":"271","endLine":694,"endColumn":96},{"ruleId":"268","severity":1,"message":"269","line":694,"column":134,"nodeType":"270","messageId":"271","endLine":694,"endColumn":136},{"ruleId":"272","severity":1,"message":"298","line":3,"column":8,"nodeType":"274","messageId":"275","endLine":3,"endColumn":20},{"ruleId":"272","severity":1,"message":"298","line":3,"column":8,"nodeType":"274","messageId":"275","endLine":3,"endColumn":20},{"ruleId":"288","severity":1,"message":"304","line":44,"column":5,"nodeType":"290","messageId":"271","endLine":44,"endColumn":17},{"ruleId":"299","severity":1,"message":"300","line":55,"column":19,"nodeType":"278","endLine":55,"endColumn":269},{"ruleId":"264","replacedBy":"305"},{"ruleId":"266","replacedBy":"306"},{"ruleId":"299","severity":1,"message":"300","line":56,"column":17,"nodeType":"278","endLine":63,"endColumn":22},{"ruleId":"268","severity":1,"message":"269","line":56,"column":72,"nodeType":"270","messageId":"271","endLine":56,"endColumn":74},{"ruleId":"268","severity":1,"message":"269","line":122,"column":69,"nodeType":"270","messageId":"271","endLine":122,"endColumn":71},{"ruleId":"294","severity":1,"message":"295","line":153,"column":52,"nodeType":"296","endLine":153,"endColumn":82},{"ruleId":"268","severity":1,"message":"269","line":172,"column":51,"nodeType":"270","messageId":"271","endLine":172,"endColumn":53},{"ruleId":"272","severity":1,"message":"298","line":5,"column":8,"nodeType":"274","messageId":"275","endLine":5,"endColumn":20},{"ruleId":"276","severity":1,"message":"277","line":22,"column":21,"nodeType":"278","endLine":22,"endColumn":113},{"ruleId":"268","severity":1,"message":"291","line":26,"column":33,"nodeType":"270","messageId":"271","endLine":26,"endColumn":35},{"ruleId":"276","severity":1,"message":"277","line":28,"column":25,"nodeType":"278","endLine":28,"endColumn":107},{"ruleId":"276","severity":1,"message":"277","line":34,"column":21,"nodeType":"278","endLine":34,"endColumn":103},{"ruleId":"276","severity":1,"message":"277","line":41,"column":21,"nodeType":"278","endLine":41,"endColumn":113},{"ruleId":"299","severity":1,"message":"300","line":269,"column":33,"nodeType":"278","endLine":276,"endColumn":38},{"ruleId":"299","severity":1,"message":"300","line":268,"column":33,"nodeType":"278","endLine":275,"endColumn":38},{"ruleId":"272","severity":1,"message":"298","line":3,"column":8,"nodeType":"274","messageId":"275","endLine":3,"endColumn":20},{"ruleId":"299","severity":1,"message":"300","line":206,"column":17,"nodeType":"278","endLine":213,"endColumn":22},{"ruleId":"268","severity":1,"message":"269","line":206,"column":77,"nodeType":"270","messageId":"271","endLine":206,"endColumn":79},{"ruleId":"268","severity":1,"message":"269","line":249,"column":53,"nodeType":"270","messageId":"271","endLine":249,"endColumn":55},{"ruleId":"294","severity":1,"message":"295","line":295,"column":52,"nodeType":"296","endLine":295,"endColumn":82},{"ruleId":"272","severity":1,"message":"298","line":2,"column":8,"nodeType":"274","messageId":"275","endLine":2,"endColumn":20},{"ruleId":"272","severity":1,"message":"301","line":4,"column":8,"nodeType":"274","messageId":"275","endLine":4,"endColumn":26},{"ruleId":"288","severity":1,"message":"307","line":61,"column":21,"nodeType":"290","messageId":"271","endLine":61,"endColumn":32},{"ruleId":"268","severity":1,"message":"291","line":211,"column":72,"nodeType":"270","messageId":"271","endLine":211,"endColumn":74},{"ruleId":"294","severity":1,"message":"295","line":388,"column":54,"nodeType":"296","endLine":391,"endColumn":31},"no-native-reassign",["308"],"no-negated-in-lhs",["309"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'Pesquisa' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'delay' is defined but never used.","'token' is assigned a value but never used.","'whithRouter' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'ImageUploader' is defined but never used.","'FotoUploader' is defined but never used.","no-dupe-keys","Duplicate key 'senha'.","ObjectExpression","Expected '!==' and instead saw '!='.","'validado' is assigned a value but never used.","Duplicate key 'dataNascimento'.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'axios' is defined but never used.","'NumberFormat' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'FotoUploaderComite' is defined but never used.","'cpfEscolhido' is assigned a value but never used.","'ordenados' is assigned a value but never used.","Duplicate key 'listaComites'.",["308"],["309"],"Duplicate key 'dataCriacao'.","no-global-assign","no-unsafe-negation"]